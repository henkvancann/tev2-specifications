"use strict";(self.webpackChunktev2_specifications=self.webpackChunktev2_specifications||[]).push([[3658],{3905:function(t,e,n){n.d(e,{Zo:function(){return l},kt:function(){return m}});var a=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function r(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,a,o=function(t,e){if(null==t)return{};var n,a,o={},i=Object.keys(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var c=a.createContext({}),p=function(t){var e=a.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):r(r({},e),t)),n},l=function(t){var e=p(t.components);return a.createElement(c.Provider,{value:e},t.children)},h={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(t,e){var n=t.components,o=t.mdxType,i=t.originalType,c=t.parentName,l=s(t,["components","mdxType","originalType","parentName"]),u=p(n),m=o,f=u["".concat(c,".").concat(m)]||u[m]||h[m]||i;return n?a.createElement(f,r(r({ref:e},l),{},{components:n})):a.createElement(f,r({ref:e},l))}));function m(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var i=n.length,r=new Array(i);r[0]=u;var s={};for(var c in e)hasOwnProperty.call(e,c)&&(s[c]=e[c]);s.originalType=t,s.mdxType="string"==typeof t?t:o,r[1]=s;for(var p=2;p<i;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8720:function(t,e,n){n.r(e),n.d(e,{assets:function(){return l},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return h}});var a=n(7462),o=n(3366),i=(n(7294),n(3905)),r=["components"],s={id:"property",term:"property",termType:"concept",isa:null,glossaryTerm:"Property (of a Concept)",glossaryText:"a connection or association between a [concept](@) and a primitive data element, such as a text or a number, that represents some characteristic that instances of the [concept](@) may have.",synonymOf:null,grouptags:"conceptual-modeling",formPhrases:"propert{yies}",status:"proposed",created:new Date("2023-07-31T00:00:00.000Z"),updated:new Date("2023-07-31T00:00:00.000Z"),contributors:"RieksJ",attribution:"[TNO Terminology Design](https://tno-terminology-design.github.io/tev2-specifications/docs)",originalLicense:"[CC BY-SA 4.0](http://creativecommons.org/licenses/by-sa/4.0/?ref=chooser-v1)"},c="Property (of a Concept)",p={unversionedId:"terms/property",id:"terms/property",title:"Property (of a Concept)",description:"A property (of a concept) is a connection or association between that concept and a primitive data element, such as a text, a number, a boolean value, etc., that represents some characteristic that (instances of) the concept may have.",source:"@site/docs/terms/property.md",sourceDirName:"terms",slug:"/terms/property",permalink:"/tev2-specifications/docs/terms/property",draft:!1,editUrl:"https://github.com/tno-terminology-design/tev2-specifications/blob/master/docs/terms/property.md",tags:[],version:"current",lastUpdatedBy:"Rieks",lastUpdatedAt:1696597068,formattedLastUpdatedAt:"Oct 6, 2023",frontMatter:{id:"property",term:"property",termType:"concept",isa:null,glossaryTerm:"Property (of a Concept)",glossaryText:"a connection or association between a [concept](@) and a primitive data element, such as a text or a number, that represents some characteristic that instances of the [concept](@) may have.",synonymOf:null,grouptags:"conceptual-modeling",formPhrases:"propert{yies}",status:"proposed",created:"2023-07-31T00:00:00.000Z",updated:"2023-07-31T00:00:00.000Z",contributors:"RieksJ",attribution:"[TNO Terminology Design](https://tno-terminology-design.github.io/tev2-specifications/docs)",originalLicense:"[CC BY-SA 4.0](http://creativecommons.org/licenses/by-sa/4.0/?ref=chooser-v1)"},sidebar:"tev2SideBar",previous:{title:"Create and Maintain Terminologies",permalink:"/tev2-specifications/docs/terms/patterns/pattern-terminology"},next:{title:"Reader",permalink:"/tev2-specifications/docs/terms/reader"}},l={},h=[{value:"Examples",id:"examples",level:2},{value:"Notes",id:"notes",level:2}],u={toc:h};function m(t){var e=t.components,n=(0,o.Z)(t,r);return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"property-of-a-concept"},"Property (of a Concept)"),(0,i.kt)("p",null,"A ",(0,i.kt)("strong",{parentName:"p"},"property (of a ",(0,i.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/concept",hovertext:"Concept: a Semantic Unit that captures the ideas/thoughts behind a classification of Entities (what makes Entities in that class 'the same').",target:"_self"},"concept"),")")," is a connection or association between that ",(0,i.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/concept",hovertext:"Concept: a Semantic Unit that captures the ideas/thoughts behind a classification of Entities (what makes Entities in that class 'the same').",target:"_self"},"concept")," and a primitive data element, such as a text, a number, a boolean value, etc., that represents some characteristic that (instances of) the ",(0,i.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/concept",hovertext:"Concept: a Semantic Unit that captures the ideas/thoughts behind a classification of Entities (what makes Entities in that class 'the same').",target:"_self"},"concept")," may have."),(0,i.kt)("p",null,"Where ",(0,i.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/relation",hovertext:"Relation (between Concepts): a (significant) connection or association between two or more Concepts. These connections define the way these Concepts are interrelated, providing insights into how they interact and influence each other.",target:"_self"},"relations")," describe connections or associations between ",(0,i.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/concept",hovertext:"Concept: a Semantic Unit that captures the ideas/thoughts behind a classification of Entities (what makes Entities in that class 'the same').",target:"_self"},"concepts"),", properties describe characteristics of ",(0,i.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/concept",hovertext:"Concept: a Semantic Unit that captures the ideas/thoughts behind a classification of Entities (what makes Entities in that class 'the same').",target:"_self"},"concepts")," in terms of data attributes or values."),(0,i.kt)("p",null,"Properties are crucial for capturing and representing specific characteristics, attributes, or features of ",(0,i.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/concept",hovertext:"Concept: a Semantic Unit that captures the ideas/thoughts behind a classification of Entities (what makes Entities in that class 'the same').",target:"_self"},"concepts")," in a model. They enable the inclusion of essential metadata and descriptive information associated with ",(0,i.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/concept",hovertext:"Concept: a Semantic Unit that captures the ideas/thoughts behind a classification of Entities (what makes Entities in that class 'the same').",target:"_self"},"concepts"),"."),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},'In a product database, the "Price" property relates the "Product" concept to a numeric value representing its cost.'),(0,i.kt)("li",{parentName:"ol"},'The "Color" property of an "Apple" concept links it to a text value indicating its visual appearance.'),(0,i.kt)("li",{parentName:"ol"},'"Gender" can be a property of a "Person" (or "Animal") concept, as can "being a parent".')),(0,i.kt)("h2",{id:"notes"},"Notes"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Properties play a significant role in enriching the conceptual model with detailed attribute information for each concept."),(0,i.kt)("li",{parentName:"ul"},"Defining properties accurately is essential for maintaining consistency and accuracy in the conceptual model.")))}m.isMDXComponent=!0}}]);