"use strict";(self.webpackChunktev2_specifications=self.webpackChunktev2_specifications||[]).push([[4385],{3905:(e,t,a)=>{a.d(t,{Zo:()=>h,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},h=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,h=i(e,["components","mdxType","originalType","parentName"]),u=c(a),m=r,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return a?n.createElement(f,s(s({ref:t},h),{},{components:a})):n.createElement(f,s({ref:t},h))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var c=2;c<o;c++)s[c]=a[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>s});var n=a(7294),r=a(6010);const o="tabItem_Ymn6";function s(e){let{children:t,hidden:a,className:s}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,s),hidden:a},t)}},4866:(e,t,a)=>{a.d(t,{Z:()=>w});var n=a(3117),r=a(7294),o=a(6010),s=a(2466),i=a(6775),l=a(1980),c=a(7392),h=a(12);function d(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function u(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??d(a);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function m(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:a}=e;const n=(0,i.k6)(),o=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,l._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(n.location.search);t.set(o,e),n.replace({...n.location,search:t.toString()})}),[o,n])]}function p(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,o=u(e),[s,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[l,c]=f({queryString:a,groupId:n}),[d,p]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,o]=(0,h.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:n}),g=(()=>{const e=l??d;return m({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{g&&i(g)}),[g]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),c(e),p(e)}),[c,p,o]),tabValues:o}}var g=a(2389);const y="tabList__CuJ",b="tabItem_LNqP";function v(e){let{className:t,block:a,selectedValue:i,selectValue:l,tabValues:c}=e;const h=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.o5)(),u=e=>{const t=e.currentTarget,a=h.indexOf(t),n=c[a].value;n!==i&&(d(t),l(n))},m=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const a=h.indexOf(e.currentTarget)+1;t=h[a]??h[0];break}case"ArrowLeft":{const a=h.indexOf(e.currentTarget)-1;t=h[a]??h[h.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},t)},c.map((e=>{let{value:t,label:a,attributes:s}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>h.push(e),onKeyDown:m,onClick:u},s,{className:(0,o.Z)("tabs__item",b,s?.className,{"tabs__item--active":i===t})}),a??t)})))}function x(e){let{lazy:t,children:a,selectedValue:n}=e;const o=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function k(e){const t=p(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",y)},r.createElement(v,(0,n.Z)({},e,t)),r.createElement(x,(0,n.Z)({},e,t)))}function w(e){const t=(0,g.Z)();return r.createElement(k,(0,n.Z)({key:String(t)},e))}},4218:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var n=a(3117),r=(a(7294),a(3905)),o=(a(4996),a(4866)),s=a(5162);const i={id:"mrgref-syntax",sidebar_label:"MRG References",date:20231029},l="MRG References - Syntax",c={unversionedId:"spec-syntax/mrgref-syntax",id:"spec-syntax/mrgref-syntax",title:"MRG References - Syntax",description:"MRG References (or MRGRefs for short) are textual constructs that refer to a specific terminology within a particular scope, and that can be converted (by the HRGT) into a text that contains a human readable glossary of the terms contained in that terminology.",source:"@site/docs/spec-syntax/14-mrgref-syntax.md",sourceDirName:"spec-syntax",slug:"/spec-syntax/mrgref-syntax",permalink:"/tev2-specifications/docs/spec-syntax/mrgref-syntax",draft:!1,editUrl:"https://github.com/tno-terminology-design/tev2-specifications/blob/master/docs/spec-syntax/14-mrgref-syntax.md",tags:[],version:"current",lastUpdatedBy:"Rieks",lastUpdatedAt:1699345195,formattedLastUpdatedAt:"Nov 7, 2023",sidebarPosition:14,frontMatter:{id:"mrgref-syntax",sidebar_label:"MRG References",date:20231029},sidebar:"tev2SideBar",previous:{title:"Terminology Identifiers",permalink:"/tev2-specifications/docs/spec-syntax/terminology-identifier-syntax"},next:{title:"Form Phrases",permalink:"/tev2-specifications/docs/spec-syntax/form-phrase-syntax"}},h={},d=[],u={toc:d};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"mrg-references---syntax"},"MRG References - Syntax"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"@"},"MRG References")," (or ",(0,r.kt)("a",{parentName:"p",href:"@"},"MRGRefs")," for short) are textual constructs that refer to a specific ",(0,r.kt)("a",{href:"/tev2-specifications/docs/terms/terminology",hovertext:"Terminology: a set of Terms that are used within a single Scope to refer to Concepts and other Semantic Units of a single Party (e.g. a Community), enabling Parties to reason and communicate ideas they have about one or more specific topics."},"terminology")," within a particular ",(0,r.kt)("a",{href:"/tev2-specifications/docs/terms/scope",hovertext:"Scope: the extent of the Terms, Definitions and other documentation that a Community (which we call the Owner of the Scope) needs to express, communicate and validate its Knowledge as relevant to achieving a specific subset of its Objectives."},"scope"),", and that can be converted (by the ",(0,r.kt)("a",{href:"/tev2-specifications/docs/spec-tools/22-hrgt",hovertext:"Human Readable Glossary Tool: a software tool designed to create, manage, and process Human Readable Glossaries (HRGs), as Specified By TEv2. HRGTs offer features for selecting Terms that are Curated within the Scope it is run in, or from other Scopes."},"HRGT"),") into a text that contains a ",(0,r.kt)("a",{parentName:"p",href:"@"},"human readable glossary")," of the ",(0,r.kt)("a",{href:"/tev2-specifications/docs/terms/term",hovertext:"Term: a word or phrase (i.e.: text) that is used to represent (Identify) a specific Semantic Unit (in some Scope)."},"terms")," contained in that ",(0,r.kt)("a",{href:"/tev2-specifications/docs/terms/terminology",hovertext:"Terminology: a set of Terms that are used within a single Scope to refer to Concepts and other Semantic Units of a single Party (e.g. a Community), enabling Parties to reason and communicate ideas they have about one or more specific topics."},"terminology"),"."),(0,r.kt)("p",null,"An ",(0,r.kt)("a",{parentName:"p",href:"@"},"MRGRef")," (currently) has the following syntax:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markdown"},"...\n\x3c!--<hrg={tid}>--\x3e{text to be replaced with hrg-list}\x3c!--</hrg>--\x3e\n...\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Examples of MRGRefs"),(0,r.kt)(o.Z,{defaultValue:"default",values:[{label:"Glossary template",value:"default"},{label:"Existing glossary",value:"revised"},{label:"Multiple glossaries",value:"multiple"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"default",mdxType:"TabItem"},(0,r.kt)("p",null,"This example shows a markdown file that can serve as a ",(0,r.kt)("a",{href:"/tev2-specifications/docs/terms/glossary",hovertext:"Glossary: an alphabetically sorted list of Terms with the (single) meaning it has in (at least) one context."},"glossary")," template. It is basically a markdown file that has an ",(0,r.kt)("a",{parentName:"p",href:"@"},"MRGRef")," that specifies the ",(0,r.kt)("a",{href:"/tev2-specifications/docs/terms/terminology",hovertext:"Terminology: a set of Terms that are used within a single Scope to refer to Concepts and other Semantic Units of a single Party (e.g. a Community), enabling Parties to reason and communicate ideas they have about one or more specific topics."},"terminology")," for which an ",(0,r.kt)("a",{href:"/tev2-specifications/docs/terms/hrg",hovertext:"Human Readable Glossary (HRG): a Glossary that is designed to be easily understandable and accessible to humans. HRGs present terms and their meanings in a format that prioritizes human comprehension and may include additional contextual information to aid understanding."},"HRG")," is to be created, and also the location in the file where that needs to be done. "),(0,r.kt)("p",null,"After this is processed by the ",(0,r.kt)("a",{href:"/tev2-specifications/docs/spec-tools/22-hrgt",hovertext:"Human Readable Glossary Tool: a software tool designed to create, manage, and process Human Readable Glossaries (HRGs), as Specified By TEv2. HRGTs offer features for selecting Terms that are Curated within the Scope it is run in, or from other Scopes."},"HRGT"),", a copy of this file will have been created, where the text ",(0,r.kt)("inlineCode",{parentName:"p"},"This is where the glossary will be generated by the HRGT")," will have been replaced with a ",(0,r.kt)("a",{parentName:"p",href:"@"},"human readable glossary")," for the specified ",(0,r.kt)("a",{href:"/tev2-specifications/docs/terms/terminology",hovertext:"Terminology: a set of Terms that are used within a single Scope to refer to Concepts and other Semantic Units of a single Party (e.g. a Community), enabling Parties to reason and communicate ideas they have about one or more specific topics."},"terminology"),". "),(0,r.kt)("p",null,"This ",(0,r.kt)("a",{parentName:"p",href:"@"},"MRGRef")," identifies the default ",(0,r.kt)("a",{href:"/tev2-specifications/docs/terms/terminology",hovertext:"Terminology: a set of Terms that are used within a single Scope to refer to Concepts and other Semantic Units of a single Party (e.g. a Community), enabling Parties to reason and communicate ideas they have about one or more specific topics."},"terminology")," of the ",(0,r.kt)("a",{href:"/tev2-specifications/docs/terms/current-scope",hovertext:"Current Scope: the Scope that is the context within which a Curator is acting, or a tool is being called."},"current scope")," as the source of the ",(0,r.kt)("a",{href:"/tev2-specifications/docs/terms/hrg",hovertext:"Human Readable Glossary (HRG): a Glossary that is designed to be easily understandable and accessible to humans. HRGs present terms and their meanings in a format that prioritizes human comprehension and may include additional contextual information to aid understanding."},"HRG"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markdown"},"---\nid: default-glossary\nsidebar_label: Glossary\n---\n\n# Glossary\n\n\x3c!--<hrg=>--\x3e\nThis is where the glossary will be generated by the HRGT\n\x3c!--</hrg>--\x3e\n\nThe texts in this glossary are licensed under CC BY-SA 4.0.\n"))),(0,r.kt)(s.Z,{value:"revised",mdxType:"TabItem"},(0,r.kt)("br",null),(0,r.kt)("p",null,"This example shows what the result of processing the glossary template of the previous example could look like, assuming the default ",(0,r.kt)("a",{href:"/tev2-specifications/docs/terms/terminology",hovertext:"Terminology: a set of Terms that are used within a single Scope to refer to Concepts and other Semantic Units of a single Party (e.g. a Community), enabling Parties to reason and communicate ideas they have about one or more specific topics."},"terminology")," of the current scope had just the two terms ",(0,r.kt)("inlineCode",{parentName:"p"},"entity")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"identifier")," we could expect if the ",(0,r.kt)("a",{href:"/tev2-specifications/docs/terms/glossary",hovertext:"Glossary: an alphabetically sorted list of Terms with the (single) meaning it has in (at least) one context."},"glossary")," of the previous example were generated by the ",(0,r.kt)("a",{href:"/tev2-specifications/docs/spec-tools/22-hrgt",hovertext:"Human Readable Glossary Tool: a software tool designed to create, manage, and process Human Readable Glossaries (HRGs), as Specified By TEv2. HRGTs offer features for selecting Terms that are Curated within the Scope it is run in, or from other Scopes."},"HRGT"),". "),(0,r.kt)("p",null,"Note that it still contains an ",(0,r.kt)("a",{parentName:"p",href:"@"},"MRGRef")," that specifies the ",(0,r.kt)("a",{href:"/tev2-specifications/docs/terms/terminology",hovertext:"Terminology: a set of Terms that are used within a single Scope to refer to Concepts and other Semantic Units of a single Party (e.g. a Community), enabling Parties to reason and communicate ideas they have about one or more specific topics."},"terminology")," for which it was the ",(0,r.kt)("a",{href:"/tev2-specifications/docs/terms/hrg",hovertext:"Human Readable Glossary (HRG): a Glossary that is designed to be easily understandable and accessible to humans. HRGs present terms and their meanings in a format that prioritizes human comprehension and may include additional contextual information to aid understanding."},"HRG")," was created. This means that whenever the ",(0,r.kt)("a",{href:"/tev2-specifications/docs/spec-tools/22-hrgt",hovertext:"Human Readable Glossary Tool: a software tool designed to create, manage, and process Human Readable Glossaries (HRGs), as Specified By TEv2. HRGTs offer features for selecting Terms that are Curated within the Scope it is run in, or from other Scopes."},"HRGT")," is run again on this file, any updates to the terminology will be reflected in the newly generated version."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markdown"},'---\nid: default-glossary\nsidebar_label: Glossary\n---\n\n# Glossary\n\n\x3c!--<hrg=>--\x3e\n## [Entity](/docs/terms/entity)\nsomething that is known to exist.\n\n## [Identifier](/docs/terms/identifier)\na character string that is being used for the identification of some <a href="https://essif-lab.github.io/framework/docs/terms/entity" hovertext="Entity: someone or something that is known to exist." >entity</a> (yet may refer to 0, 1, or more <a href="https://essif-lab.github.io/framework/docs/terms/entity" hovertext="Entity: someone or something that is known to exist." >entities</a>, depending on the context within which it is being used).\n\x3c!--</hrg>--\x3e\n\nThe texts in this glossary are licensed under CC BY-SA 4.0.\n'))),(0,r.kt)(s.Z,{value:"multiple",mdxType:"TabItem"},(0,r.kt)("br",null),(0,r.kt)("p",null,"This example shows that one can have multiple glossaries in a single file. Also, it shows the result of using a different converter, which in this case produces tables. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markdown"},'---\nid: multiple-glossaries\n---\n\n# My First Glossary\n\n\x3c!--<hrg=>--\x3e\n| Term | Criterion |\n| :--- | :-------- |\n| [Entity](/docs/terms/entity) | something that is known to exist. |\n| [Identifier](/docs/terms/identifier) | a character string that is being used for the identification of some <a href="https://essif-lab.github.io/framework/docs/terms/entity" hovertext="Entity: someone or something that is known to exist." >entity</a> (yet may refer to 0, 1, or more <a href="https://essif-lab.github.io/framework/docs/terms/entity" hovertext="Entity: someone or something that is known to exist." >entities</a>, depending on the context within which it is being used). |\n\x3c!--</hrg>--\x3e\n\n# My Second Glossary\n\n\x3c!--<hrg=essif-lab>--\x3e\n| Term | Criterion |\n| :--- | :-------- |\n| [Action](https://essif-lab.github.io/framework/docs/terms/action) | something that is actually done (a \'unit of work\' that is executed) by a single <a href="https://essif-lab.github.io/framework/docs/terms/actor" hovertext="Actor: Entity that can act (do things/execute Actions), e.g. people, machines, but not Organizations." >actor</a> (on behalf of a given <a href="https://essif-lab.github.io/framework/docs/terms/party" hovertext="Party: an Entity that sets its Objectives, maintains its Knowledge, and uses that Knowledge to pursue its Objectives in an autonomous (sovereign) manner. Humans and Organizations are the typical examples." >party</a>), as a single operation, in a specific context. |\n| [Actor](https://essif-lab.github.io/framework/docs/terms/actor) | <a href="https://essif-lab.github.io/framework/docs/terms/entity" hovertext="Entity: someone or something that is known to exist." >Entity</a> that can [act](@essif-lab) (do things/execute action), e.g. people, machines, but not <a href="https://essif-lab.github.io/framework/docs/terms/organization" hovertext="Organization: a Party that is capable of setting Objectives and making sure these are realized by Actors that it has Onboarded and/or by (vetted) Parties that are committed to contribute to these Objectives." >organizations</a>. |\n(etcetera)\n\x3c!--</hrg>--\x3e\n\nThe texts in this glossary are licensed under CC BY-SA 4.0.\n'))))),(0,r.kt)("p",null,"Interpretation of an ",(0,r.kt)("a",{parentName:"p",href:"@"},"MRGRef")," leads to the population of the following variables (or, in case regexes are used, named capturing groups):"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"leader")),(0,r.kt)("td",{parentName:"tr",align:"left"},"the character string that is used at the start of a ",(0,r.kt)("a",{href:"/tev2-specifications/docs/terms/hrg",hovertext:"Human Readable Glossary (HRG): a Glossary that is designed to be easily understandable and accessible to humans. HRGs present terms and their meanings in a format that prioritizes human comprehension and may include additional contextual information to aid understanding."},"HRG"),", which must be expected to include newlines. If empty (not specified), there will be no leading texts.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"tid")),(0,r.kt)("td",{parentName:"tr",align:"left"},"a ",(0,r.kt)("a",{href:"/tev2-specifications/docs/spec-syntax/terminology-identifier-syntax",hovertext:"a text (identifier), of the form `<scopetag>:<vsntag>`, that identifies a terminology from within a particular scope. If `<scopetag>` and/or `:<vsntag>` is omitted, their values are taken be the current (or default) ones."},"terminology identifier"),", that identifies a ",(0,r.kt)("a",{href:"/tev2-specifications/docs/terms/terminology",hovertext:"Terminology: a set of Terms that are used within a single Scope to refer to Concepts and other Semantic Units of a single Party (e.g. a Community), enabling Parties to reason and communicate ideas they have about one or more specific topics."},"terminology")," (and implies an associated ",(0,r.kt)("a",{href:"/tev2-specifications/docs/terms/mrg",hovertext:"MRG: a Glossary for a particular (version of a) Terminology that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems."},"MRG"),") within the ",(0,r.kt)("a",{href:"/tev2-specifications/docs/terms/current-scope",hovertext:"Current Scope: the Scope that is the context within which a Curator is acting, or a tool is being called."},"current scope"),". If empty, it defaults to the default ",(0,r.kt)("a",{href:"/tev2-specifications/docs/terms/terminology",hovertext:"Terminology: a set of Terms that are used within a single Scope to refer to Concepts and other Semantic Units of a single Party (e.g. a Community), enabling Parties to reason and communicate ideas they have about one or more specific topics."},"terminology")," of the ",(0,r.kt)("a",{href:"/tev2-specifications/docs/terms/current-scope",hovertext:"Current Scope: the Scope that is the context within which a Curator is acting, or a tool is being called."},"current scope"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"trailer")),(0,r.kt)("td",{parentName:"tr",align:"left"},"the character string that is used at the end of a ",(0,r.kt)("a",{href:"/tev2-specifications/docs/terms/hrg",hovertext:"Human Readable Glossary (HRG): a Glossary that is designed to be easily understandable and accessible to humans. HRGs present terms and their meanings in a format that prioritizes human comprehension and may include additional contextual information to aid understanding."},"HRG"),", which must be expected to include newlines. If empty (not specified), there will be no leading texts.")))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Using regexes to find the values for the variables"),(0,r.kt)("p",null,"Finding an ",(0,r.kt)("a",{parentName:"p",href:"@"},"MRGRef")," in a file can be done by using a regular expressions (regexes - you can use ",(0,r.kt)("a",{parentName:"p",href:"https://www.debuggex.com/"},"debuggex")," to see what these regexps do). "),(0,r.kt)("p",null,"The following ",(0,r.kt)("a",{parentName:"p",href:"https://www.debuggex.com/r/HF7mLksu-zQBNbeO"},"(PCRE) regex")," will do this for the specified syntax:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-regex"},"(^(?P<leader>\x3c!--<hrg=(?P<delim>|'|\")(?P<tid>[a-z0-9_-]+(?::[a-z0-9_-]+)?)?(\\g<delim>)>--\x3e)(?:.*?\\n)*(?:.*?)(?P<trailer>\x3c!--</hrg>--\x3e))\n")),(0,r.kt)("p",null,"Empty named capturing groups may be given a (default) value.")),(0,r.kt)("p",null,"The ","[HRGT]"," will convert this into the following markdown:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markdown"},"...\n{leader}\n{hrg-list}\n{trailer}\n...\n")))}m.isMDXComponent=!0}}]);