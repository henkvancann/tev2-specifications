"use strict";(self.webpackChunktev2_specifications=self.webpackChunktev2_specifications||[]).push([[7513],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return m}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),h=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=h(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=h(r),m=n,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||i;return r?a.createElement(f,o(o({ref:t},l),{},{components:r})):a.createElement(f,o({ref:t},l))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var h=2;h<i;h++)o[h]=r[h];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3505:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return s},metadata:function(){return h},toc:function(){return p}});var a=r(7462),n=r(3366),i=(r(7294),r(3905)),o=(r(4996),["components"]),s={id:"form-phrase-syntax",sidebar_label:"Form Phrases",date:20220808},c="Form Phrases - Syntax",h={unversionedId:"spec-syntax/form-phrase-syntax",id:"spec-syntax/form-phrase-syntax",title:"Form Phrases - Syntax",description:"This document specifies the syntax of form phrases, i.e. texts that are",source:"@site/docs/spec-syntax/21-form-phrase-syntax.md",sourceDirName:"spec-syntax",slug:"/spec-syntax/form-phrase-syntax",permalink:"/tev2-specifications/docs/spec-syntax/form-phrase-syntax",draft:!1,editUrl:"https://github.com/tno-terminology-design/tev2-specifications/blob/master/docs/spec-syntax/21-form-phrase-syntax.md",tags:[],version:"current",lastUpdatedBy:"Rieks",lastUpdatedAt:1697206801,formattedLastUpdatedAt:"Oct 13, 2023",sidebarPosition:21,frontMatter:{id:"form-phrase-syntax",sidebar_label:"Form Phrases",date:20220808},sidebar:"tev2SideBar",previous:{title:"Terminology Identifiers",permalink:"/tev2-specifications/docs/spec-syntax/terminology-identifier-syntax"},next:{title:"MRG Term Selection",permalink:"/tev2-specifications/docs/spec-syntax/mrg-term-selection-syntax"}},l={},p=[],d={toc:p};function m(e){var t=e.components,r=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"form-phrases---syntax"},"Form Phrases - Syntax"),(0,i.kt)("p",null,"This document specifies the syntax of ",(0,i.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/formphrase",hovertext:"Form Phrase (of a [term](@)): a word or phrase, other than the actual Term that, when used in a TermRef would typically also refer to this Term. Form phrases may include plural forms, possessive extensions, verb-conjugation forms, and other variations.",target:"_self"},"form phrases"),", i.e. texts that are"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"specified in the header field ",(0,i.kt)("inlineCode",{parentName:"li"},"formPhrases")," in ",(0,i.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/curated-text",hovertext:"Curated Text: a text that documents a Concept or other Semantic Unit of a particular Party, and specifies, e.g., the Term(s) by which the Party refers thereto, its Definition, and any other relevant information.",target:"_self"},"curated texts"),";"),(0,i.kt)("li",{parentName:"ul"},"conformant to the (PCRE) regex ",(0,i.kt)("inlineCode",{parentName:"li"},"(?:\\s*(?:[a-z0-9_-{}]+)\\s*(?:,\\s*([a-z0-9_-{}]+))*)?")," (see ",(0,i.kt)("a",{parentName:"li",href:"https://www.debuggex.com/r/20MNb2zgNwLDD-dD"},"Debuggex")," for a visualization)."),(0,i.kt)("li",{parentName:"ul"},"present in ",(0,i.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/mrg-entry",hovertext:"MRG Entry: A machine-readable (and interpretable) artifact that contains (pointers to) data and meta-data about a particular  Semantic Unit, such as the associated Term(s), its Definition, etc., to make it easy for IT-tools to create, e.g. documentation, Glossaries, Dictionaries, whitepapers, etc. that uses such Terms (Definitions, etc.).",target:"_self"},"MRG entries"),";"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/spec-tools/trrt#id"},"used to convert")," the ",(0,i.kt)("inlineCode",{parentName:"li"},"show text")," parts of ",(0,i.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/term-ref",hovertext:"TermRef: a word or phrase that is Marked Up (in A Specific Way) so that it refers to a particular Concept (or other Semantic Unit), enabling it to be rendered in a variety of ways for the purpose of helping Readers to (better) understand the intention of its Author.",target:"_self"},"TermRefs")," into ",(0,i.kt)("inlineCode",{parentName:"li"},"term"),"s, for the purpose of accommodating plural forms (for nouns) or conjugate forms (for verbs).")),(0,i.kt)("p",null,"Note that the ",(0,i.kt)("a",{parentName:"p",href:"/docs/spec-syntax/form-phrase-syntax"},"syntax of ",(0,i.kt)("inlineCode",{parentName:"a"},"formPhrases"))," enables the use use of 'macro's, i.e. shorthand syntax that represent regexes that allow for extended matching."),(0,i.kt)("p",null,"A ",(0,i.kt)("a",{parentName:"p",href:"@"},"formphrase")," 'macro' is a set of characters between braces ",(0,i.kt)("inlineCode",{parentName:"p"},"{")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"}")," that are shorthand for a matcher regex, and can be used by ",(0,i.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/author",hovertext:"Author: a person that creates a text that is meant to be read and understood by others - usually, a particular audience.",target:"_self"},"authors")," to conventiently specify a set of phrases that, when matched, would refer to the ",(0,i.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/curated-text",hovertext:"Curated Text: a text that documents a Concept or other Semantic Unit of a particular Party, and specifies, e.g., the Term(s) by which the Party refers thereto, its Definition, and any other relevant information.",target:"_self"},"curated text")," in which they are specified."),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Example and explanation of how it works"),(0,i.kt)("p",null,"Suppose we have a ",(0,i.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/curated-text",hovertext:"Curated Text: a text that documents a Concept or other Semantic Unit of a particular Party, and specifies, e.g., the Term(s) by which the Party refers thereto, its Definition, and any other relevant information.",target:"_self"},"curated text")," for the term ",(0,i.kt)("inlineCode",{parentName:"p"},"actor"),", and in its front matter, we specify:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"formPhrases: actor{ss}\n")),(0,i.kt)("p",null,"The part ",(0,i.kt)("inlineCode",{parentName:"p"},"{ss}")," is a macro, that suppose it is associated with the regex ",(0,i.kt)("inlineCode",{parentName:"p"},"(?:'?s|\\(s\\))?"),"."),(0,i.kt)("p",null,"When the ",(0,i.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/spec-tools/12-trrt",hovertext:"TermRef Rendering Tool: a TEv2 Tool that is designed to facilitate the visualization and rendering of TermRefs.",target:"_self"},"trrt")," converts a ",(0,i.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/term-ref",hovertext:"TermRef: a word or phrase that is Marked Up (in A Specific Way) so that it refers to a particular Concept (or other Semantic Unit), enabling it to be rendered in a variety of ways for the purpose of helping Readers to (better) understand the intention of its Author.",target:"_self"},"TermRef"),", one of the things it needs to do is to ",(0,i.kt)("a",{parentName:"p",href:"/docs/spec-tools/trrt#term"},"convert a so-called ",(0,i.kt)("inlineCode",{parentName:"a"},"show-text")," into a ",(0,i.kt)("inlineCode",{parentName:"a"},"term"))," that exists in some ",(0,i.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/curated-text",hovertext:"Curated Text: a text that documents a Concept or other Semantic Unit of a particular Party, and specifies, e.g., the Term(s) by which the Party refers thereto, its Definition, and any other relevant information.",target:"_self"},"curated text"),". If the ",(0,i.kt)("inlineCode",{parentName:"p"},"show-text")," does not match the ",(0,i.kt)("inlineCode",{parentName:"p"},"term")," of any of the ",(0,i.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/curated-text",hovertext:"Curated Text: a text that documents a Concept or other Semantic Unit of a particular Party, and specifies, e.g., the Term(s) by which the Party refers thereto, its Definition, and any other relevant information.",target:"_self"},"curated texts"),", the ",(0,i.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/spec-tools/12-trrt",hovertext:"TermRef Rendering Tool: a TEv2 Tool that is designed to facilitate the visualization and rendering of TermRefs.",target:"_self"},"trrt")," will try to match it against every form phrase in every ",(0,i.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/curated-text",hovertext:"Curated Text: a text that documents a Concept or other Semantic Unit of a particular Party, and specifies, e.g., the Term(s) by which the Party refers thereto, its Definition, and any other relevant information.",target:"_self"},"curated text"),", including the ",(0,i.kt)("a",{parentName:"p",href:"@"},"formphrase")," ",(0,i.kt)("inlineCode",{parentName:"p"},"actor{ss}"),"."),(0,i.kt)("p",null,"This is done as follows:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"all macros in the ",(0,i.kt)("a",{parentName:"li",href:"@"},"formphrase")," are replaced with their respective regexes, thereby transforming the ",(0,i.kt)("a",{parentName:"li",href:"@"},"formphrase")," into a regex itself;"),(0,i.kt)("li",{parentName:"ol"},"a regex engine is called that determines whether or not ",(0,i.kt)("inlineCode",{parentName:"li"},"show-text")," satisfies that regex. If (and only if) it does, there is a match."))),(0,i.kt)("p",null,"An ",(0,i.kt)("inlineCode",{parentName:"p"},"term")," is said to match such an element if and only if the regex that consists of the list element (with the macro replaced with the regex that it is shorthand for) matches that ",(0,i.kt)("inlineCode",{parentName:"p"},"term"),"."),(0,i.kt)("admonition",{title:"Editor's note",type:"info"},(0,i.kt)("p",{parentName:"admonition"},"As the ",(0,i.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/spec-tools/12-trrt",hovertext:"TermRef Rendering Tool: a TEv2 Tool that is designed to facilitate the visualization and rendering of TermRefs.",target:"_self"},"trrt")," has not yet been fully specified, nor implemented, the table below must currently be seen as a set of macro's that we intend to implement, but may not yet be there. The workaround is to replace a ",(0,i.kt)("a",{parentName:"p",href:"@"},"formphrase")," that is an element in the list of ",(0,i.kt)("a",{parentName:"p",href:"@"},"formphrases")," in a ",(0,i.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/curated-text",hovertext:"Curated Text: a text that documents a Concept or other Semantic Unit of a particular Party, and specifies, e.g., the Term(s) by which the Party refers thereto, its Definition, and any other relevant information.",target:"_self"},"curated text")," with the set of words that it stands for. If you maintain ",(0,i.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/curated-text",hovertext:"Curated Text: a text that documents a Concept or other Semantic Unit of a particular Party, and specifies, e.g., the Term(s) by which the Party refers thereto, its Definition, and any other relevant information.",target:"_self"},"curated texts")," with a good editor, e.g. VSCode, that should not be an issue as these macros are easily found and replaced by their expansions.")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"macro"),(0,i.kt)("th",{parentName:"tr",align:"center"},"regex"),(0,i.kt)("th",{parentName:"tr",align:"center"},"example"),(0,i.kt)("th",{parentName:"tr",align:"left"},"texts that the example matches"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"{ss}")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("code",null,"('?s","|","(s",")",")?")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"actor{ss}")),(0,i.kt)("td",{parentName:"tr",align:"left"},'matches: "actor", "actors", "actor\'s", and "actor(s)"')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"{yies}")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("code",null,"(y","|","y's","|","ies)")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"part{yies}")),(0,i.kt)("td",{parentName:"tr",align:"left"},'matches: "party", "party\'s", and "parties"')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"{ying}")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("code",null,"(y","|","ier","|","ying","|","ies","|","ied)")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"identif{ying}")),(0,i.kt)("td",{parentName:"tr",align:"left"},'matches: "identify", "identifier", "identifying", "identifies", and "identified"')))))}m.isMDXComponent=!0}}]);