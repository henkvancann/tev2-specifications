"use strict";(self.webpackChunktev2_specifications=self.webpackChunktev2_specifications||[]).push([[1584],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return d}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(a),d=r,h=m["".concat(s,".").concat(d)]||m[d]||c[d]||i;return a?n.createElement(h,o(o({ref:t},u),{},{components:a})):n.createElement(h,o({ref:t},u))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5162:function(e,t,a){a.d(t,{Z:function(){return o}});var n=a(7294),r=a(6010),i="tabItem_Ymn6";function o(e){var t=e.children,a=e.hidden,o=e.className;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,o),hidden:a},t)}},4866:function(e,t,a){a.d(t,{Z:function(){return w}});var n=a(7462),r=a(7294),i=a(6010),o=a(2466),l=a(6775),s=a(1980),p=a(7392),u=a(12);function c(e){return function(e){var t,a;return null!=(t=null==(a=r.Children.map(e,(function(e){if(!e||(0,r.isValidElement)(e)&&(t=e.props)&&"object"==typeof t&&"value"in t)return e;var t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:a.filter(Boolean))?t:[]}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function m(e){var t=e.values,a=e.children;return(0,r.useMemo)((function(){var e=null!=t?t:c(a);return function(e){var t=(0,p.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,a])}function d(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function h(e){var t=e.queryString,a=void 0!==t&&t,n=e.groupId,i=(0,l.k6)(),o=function(e){var t=e.queryString,a=void 0!==t&&t,n=e.groupId;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:a,groupId:n});return[(0,s._X)(o),(0,r.useCallback)((function(e){if(o){var t=new URLSearchParams(i.location.search);t.set(o,e),i.replace(Object.assign({},i.location,{search:t.toString()}))}}),[o,i])]}function f(e){var t,a,n,i,o=e.defaultValue,l=e.queryString,s=void 0!==l&&l,p=e.groupId,c=m(e),f=(0,r.useState)((function(){return function(e){var t,a=e.defaultValue,n=e.tabValues;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!d({value:a,tabValues:n}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+a+'" but none of its children has the corresponding value. Available values are: '+n.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return a}var r=null!=(t=n.find((function(e){return e.default})))?t:n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:o,tabValues:c})})),k=f[0],g=f[1],N=h({queryString:s,groupId:p}),v=N[0],b=N[1],y=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:p}.groupId),a=(0,u.Nk)(t),n=a[0],i=a[1],[n,(0,r.useCallback)((function(e){t&&i.set(e)}),[t,i])]),w=y[0],T=y[1],C=function(){var e=null!=v?v:w;return d({value:e,tabValues:c})?e:null}();return(0,r.useLayoutEffect)((function(){C&&g(C)}),[C]),{selectedValue:k,selectValue:(0,r.useCallback)((function(e){if(!d({value:e,tabValues:c}))throw new Error("Can't select invalid tab value="+e);g(e),b(e),T(e)}),[b,T,c]),tabValues:c}}var k=a(2389),g="tabList__CuJ",N="tabItem_LNqP";function v(e){var t=e.className,a=e.block,l=e.selectedValue,s=e.selectValue,p=e.tabValues,u=[],c=(0,o.o5)().blockElementScrollPositionUntilNextRender,m=function(e){var t=e.currentTarget,a=u.indexOf(t),n=p[a].value;n!==l&&(c(t),s(n))},d=function(e){var t,a=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":var n,r=u.indexOf(e.currentTarget)+1;a=null!=(n=u[r])?n:u[0];break;case"ArrowLeft":var i,o=u.indexOf(e.currentTarget)-1;a=null!=(i=u[o])?i:u[u.length-1]}null==(t=a)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":a},t)},p.map((function(e){var t=e.value,a=e.label,o=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:function(e){return u.push(e)},onKeyDown:d,onClick:m},o,{className:(0,i.Z)("tabs__item",N,null==o?void 0:o.className,{"tabs__item--active":l===t})}),null!=a?a:t)})))}function b(e){var t=e.lazy,a=e.children,n=e.selectedValue,i=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){var o=i.find((function(e){return e.props.value===n}));return o?(0,r.cloneElement)(o,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},i.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n})})))}function y(e){var t=f(e);return r.createElement("div",{className:(0,i.Z)("tabs-container",g)},r.createElement(v,(0,n.Z)({},e,t)),r.createElement(b,(0,n.Z)({},e,t)))}function w(e){var t=(0,k.Z)();return r.createElement(y,(0,n.Z)({key:String(t)},e))}},5589:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return l},mark:function(){return m},metadata:function(){return p},toc:function(){return c}});var n=a(7462),r=a(3366),i=(a(7294),a(3905)),o=(a(4996),a(4866),a(5162),["components"]),l={id:"mrg-importer",sidebar_label:"MRG Importer",displayed_sidebar:"tev2SideBar",scopetag:"tev2",date:20230731},s="MRG Import Tool",p={unversionedId:"tev2/spec-tools/mrg-importer",id:"tev2/spec-tools/mrg-importer",title:"MRG Import Tool",description:"text to mark",source:"@site/docs/tev2/spec-tools/12-mrg-importer.md",sourceDirName:"tev2/spec-tools",slug:"/tev2/spec-tools/mrg-importer",permalink:"/tev2-specifications/docs/tev2/spec-tools/mrg-importer",draft:!1,editUrl:"https://github.com/tno-terminology-design/tev2-specifications/blob/master/docs/tev2/spec-tools/12-mrg-importer.md",tags:[],version:"current",lastUpdatedBy:"Rieks",lastUpdatedAt:1689924373,formattedLastUpdatedAt:"Jul 21, 2023",sidebarPosition:12,frontMatter:{id:"mrg-importer",sidebar_label:"MRG Importer",displayed_sidebar:"tev2SideBar",scopetag:"tev2",date:20230731},sidebar:"tev2SideBar",previous:{title:"Integrity Checking",permalink:"/tev2-specifications/docs/tev2/spec-tools/ict"},next:{title:"Term Ref Resolution",permalink:"/tev2-specifications/docs/tev2/spec-tools/trrt"}},u={},c=[{value:"Installing the Tool",id:"installing-the-tool",level:2},{value:"Calling the Tool",id:"calling-the-tool",level:2},{value:"Processing, Errors and Warnings",id:"processing-errors-and-warnings",level:2},{value:"Deploying the Tool",id:"deploying-the-tool",level:2},{value:"Discussion Notes",id:"discussion-notes",level:2}],m=function(e){var t=e.children;return(0,i.kt)("span",{style:{color:"black",backgroundColor:"yellow",padding:"0.2rem",borderRadius:"2px"}},t)},d={toc:c,mark:m};function h(e){var t=e.components,a=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"mrg-import-tool"},"MRG Import Tool"),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"The entire section on Terminology Engine v 2 (TEv2) is still under construction.",(0,i.kt)("br",null),"\nAs TEv2 is not (yet) available, the texts that specify the tool are still 'raw', i.e. not yet processed.",(0,i.kt)("br",null),(0,i.kt)("a",{parentName:"p",href:"@"},"readers")," will need to see through some (currently unprocessed) notational conventions.")),(0,i.kt)("admonition",{title:"Editor's Note",type:"info"},(0,i.kt)("p",{parentName:"admonition"},"This section is still under development. Issues that need to be addressed include how to deal with authentication of the tool in case getting an MRG from a non-public repository (or other service) requires that.")),(0,i.kt)("p",null,"The ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("a",{parentName:"strong",href:"@"},"MRG")," Import Tool (",(0,i.kt)("a",{parentName:"strong",href:"@"},"MRG importer"),")")," ensures that the ",(0,i.kt)("a",{parentName:"p",href:"@"},"scope")," within which it is run, obtains a local copy of all ",(0,i.kt)("a",{parentName:"p",href:"@"},"MRGs")," that are available in the ",(0,i.kt)("a",{parentName:"p",href:"@"},"scopes")," that are mentioned in the ",(0,i.kt)("a",{parentName:"p",href:"/docs/tev2/spec-files/saf#scopes"},"scopes section")," of its ",(0,i.kt)("a",{parentName:"p",href:"@"},"SAF"),". This makes life easy for various tools, e.g., the ",(0,i.kt)("a",{parentName:"p",href:"@"},"MRGT")," and the ",(0,i.kt)("a",{parentName:"p",href:"@"},"TRRT"),", that can now assume that all ",(0,i.kt)("a",{parentName:"p",href:"@"},"MRGs")," that they may need to consult in order to do their job, are readily available. "),(0,i.kt)("p",null,"There will shortly be an implementation of the tool:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"the repo for the code of the tool is ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/tno-terminology-design/mrg-import"},"here"),"."),(0,i.kt)("li",{parentName:"ul"},"the documentation is ","[",(0,i.kt)("mark",null,"tbd"),"]",".")),(0,i.kt)("h2",{id:"installing-the-tool"},"Installing the Tool"),(0,i.kt)("p",null,"The tool can be installed from the command line and made globally available by executing"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"npm install tno-terminology-design/mrg-import -g\n")),(0,i.kt)("h2",{id:"calling-the-tool"},"Calling the Tool"),(0,i.kt)("p",null,"The behavior of the ",(0,i.kt)("a",{parentName:"p",href:"@"},"MRG importer")," can be configured per call e.g. by a configuration file and/or command-line parameters. The command-line syntax is as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"mrg-import [ <paramlist> ]\n")),(0,i.kt)("p",null,"where:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<paramlist>")," (optional) is a list of key-value pairs")),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Legend"),(0,i.kt)("p",null,"The columns in the following table are defined as follows:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"Key"))," is the text to be used as a key."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"Value"))," represents the kind of value to be used."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"Req'd"))," specifies whether (",(0,i.kt)("inlineCode",{parentName:"li"},"Y"),") or not (",(0,i.kt)("inlineCode",{parentName:"li"},"n"),") the field is required to be present when the tool is being called. If required, it MUST either be present in the configuration file, or as a command-line parameter."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"Description"))," specifies the meaning of the ",(0,i.kt)("inlineCode",{parentName:"li"},"Value")," field, and other things you may need to know, e.g. why it is needed, a required syntax, etc."))),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Key"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Req'd"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"config")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"<path>")),(0,i.kt)("td",{parentName:"tr",align:"center"},"n"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Path (including the filename) of the tool's (YAML) configuration file. This file contains the default key-value pairs to be used. Allowed keys (and the associated values) are documented in this table. Command-line arguments override key-value pairs specified in the configuration file. This parameter MUST NOT appear in the configuration file itself.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"scopedir")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"<path>")),(0,i.kt)("td",{parentName:"tr",align:"center"},"Y"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Path of the ",(0,i.kt)("a",{parentName:"td",href:"@"},"scope directory")," from which the tool is called. It MUST contain the ",(0,i.kt)("a",{parentName:"td",href:"@"},"SAF")," for that ",(0,i.kt)("a",{parentName:"td",href:"@"},"scope"),", which we will refer to as the 'current scope' for the ",(0,i.kt)("a",{parentName:"td",href:"@"},"MRG importer"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"onNotExist")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"<action>")),(0,i.kt)("td",{parentName:"tr",align:"center"},"n"),(0,i.kt)("td",{parentName:"tr",align:"left"},"specifies the action to take in case an MRG file that was expected to exist, does not exist. Default is ",(0,i.kt)("inlineCode",{parentName:"td"},"'throw'"),".")))),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"<action>")," parameter can take the following values:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"th"},"<action>")),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"'throw'")),(0,i.kt)("td",{parentName:"tr",align:"left"},"an error is thrown (an exception is raised), and processing will stop.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"'warn'")),(0,i.kt)("td",{parentName:"tr",align:"left"},"a message is displayed (and logged) and processing continues.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"'log'")),(0,i.kt)("td",{parentName:"tr",align:"left"},"a message is written to a log(file) and processing continues.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"'ignore'")),(0,i.kt)("td",{parentName:"tr",align:"left"},"processing continues as if nothing happened.")))),(0,i.kt)("h2",{id:"processing-errors-and-warnings"},"Processing, Errors and Warnings"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"@"},"MRG importer")," starts by reading its command-line and configuration file. If the command-line has a key that is also found in the configuration file, the command-line key-value pair takes precedence. The resulting set of key-value pairs is tested for proper syntax and validity. Every improper syntax and every invalidity found will be logged. Improper syntax may be e.g. an invalid ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Glob_(programming)#Syntax"},"globpattern"),". Invalidities include non-existing directories or files, lack of write-permissions where needed, etc."),(0,i.kt)("p",null,"Then, the ",(0,i.kt)("a",{parentName:"p",href:"@"},"MRG importer")," reads the ",(0,i.kt)("a",{parentName:"p",href:"@"},"SAF")," of the ",(0,i.kt)("a",{parentName:"p",href:"@"},"scope")," from which the ",(0,i.kt)("a",{parentName:"p",href:"@"},"MRG importer")," is called. For every element in the ",(0,i.kt)("a",{parentName:"p",href:"/tev2-specifications/docs/tev2/spec-files/saf#scopes"},"scopes section"),", it will import the ",(0,i.kt)("a",{parentName:"p",href:"@"},"MRG"),"-files of the versions that are actively maintained by (the ",(0,i.kt)("a",{parentName:"p",href:"@"},"curators")," of) that ",(0,i.kt)("a",{parentName:"p",href:"@"},"scope")," that the current ",(0,i.kt)("a",{parentName:"p",href:"@"},"scope")," specified a relation with, by "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"getting the ",(0,i.kt)("a",{parentName:"li",href:"@"},"scopetag")," from the ",(0,i.kt)("a",{parentName:"li",href:"@"},"SAF")," that is used within that ",(0,i.kt)("a",{parentName:"li",href:"@"},"scope")," to refer to itself. This scopetag is found in the ",(0,i.kt)("inlineCode",{parentName:"li"},"scopetag"),"-field of the ",(0,i.kt)("a",{parentName:"li",href:"/tev2-specifications/docs/tev2/spec-files/saf#terminology"},"scope section")," of the ",(0,i.kt)("a",{parentName:"li",href:"@"},"SAF"),". In the below step, we will use ",(0,i.kt)("inlineCode",{parentName:"li"},"<scopetag>")," to refer to its value."),(0,i.kt)("li",{parentName:"ul"},"collecting all ",(0,i.kt)("a",{parentName:"li",href:"@"},"versiontags")," that are defined in the ",(0,i.kt)("a",{parentName:"li",href:"@"},"SAF")," of that ",(0,i.kt)("a",{parentName:"li",href:"@"},"scope"),". This is the set of all ",(0,i.kt)("a",{parentName:"li",href:"@"},"versiontags")," that are either found in a ",(0,i.kt)("inlineCode",{parentName:"li"},"vsntag")," or in an ",(0,i.kt)("inlineCode",{parentName:"li"},"altvsntags")," field of an element in the ",(0,i.kt)("a",{parentName:"li",href:"/tev2-specifications/docs/tev2/spec-files/saf#versions"},"versions section")," of the ",(0,i.kt)("a",{parentName:"li",href:"@"},"SAF")),(0,i.kt)("li",{parentName:"ul"},"For every such ",(0,i.kt)("a",{parentName:"li",href:"@"},"versiontag")," ",(0,i.kt)("inlineCode",{parentName:"li"},"<vsntag>"),":",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"it is checked whether or not the file ",(0,i.kt)("inlineCode",{parentName:"li"},"mrg.<scopetag>.<vsntag>.yaml")," exists in the ",(0,i.kt)("a",{parentName:"li",href:"@"},"glossarydir")," of that ",(0,i.kt)("a",{parentName:"li",href:"@"},"scope"),". If it doesn't exist, this results in the bahaviour as specified by the ",(0,i.kt)("inlineCode",{parentName:"li"},"<action>")," value of the ",(0,i.kt)("inlineCode",{parentName:"li"},"onNotExist")," parameter. Default is ",(0,i.kt)("inlineCode",{parentName:"li"},"throw"),"."),(0,i.kt)("li",{parentName:"ul"})))),(0,i.kt)("p",null,"the specified input files (in arbitrary order), and for each of them, produces an output file that is the same as the input file except for the fact that all ",(0,i.kt)("a",{parentName:"p",href:"@"},"term refs")," have been replaced with regular ",(0,i.kt)("a",{parentName:"p",href:"https://www.markdownguide.org/basic-syntax/#links"},"markdown links"),", and (optionally) with additional texts that are to be used by third-party rendering tools for enhanced rendering of such links. An example of this would be text that can be used to enhance a link with a popup that contains the definition, or a description of the ",(0,i.kt)("a",{parentName:"p",href:"@"},"term")," that is being referenced."),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"@"},"MRG importer")," logs every error- and/or warning condition that it comes across while processing its configuration file, commandline parameters, and input files, in a way that helps tool-operators and document ",(0,i.kt)("a",{parentName:"p",href:"@"},"authors")," to identify and fix such conditions."),(0,i.kt)("h2",{id:"deploying-the-tool"},"Deploying the Tool"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"@"},"MRG importer")," comes with documentation that enables developers to ascertain its correct functioning (e.g. by using a test set of files, test scripts that exercise its parameters, etc.), and also enables them to deploy the tool in a git repo and author/modify CI-pipes to use that deployment."),(0,i.kt)("h2",{id:"discussion-notes"},"Discussion Notes"),(0,i.kt)("p",null,"This section contains some notes of a discussion between Daniel and Rieks on these matters of some time ago."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A ToIP ",(0,i.kt)("a",{parentName:"li",href:"@"},"glossary")," will be put by default at ",(0,i.kt)("inlineCode",{parentName:"li"},"http://trustoverip.github.io/<terms-community>/glossary"),", where ",(0,i.kt)("inlineCode",{parentName:"li"},"<terms-community>")," is the name of the ",(0,i.kt)("a",{parentName:"li",href:"@"},"terms-community"),". This allows every  ",(0,i.kt)("a",{parentName:"li",href:"@"},"terms-community")," to have its own ",(0,i.kt)("a",{parentName:"li",href:"@"},"glossary"),". However, the above specifications allow ",(0,i.kt)("a",{parentName:"li",href:"terms-community@"},"terms-communities")," to ",(0,i.kt)("a",{parentName:"li",href:"@"},"curate")," multiple ",(0,i.kt)("a",{parentName:"li",href:"scope@"},"scopes"),"."),(0,i.kt)("li",{parentName:"ul"},"Storing ",(0,i.kt)("a",{parentName:"li",href:"glossary@"},"glossaries")," elsewhere was seen to break the (basic workings of the postprocessing tool, but the above specifications would fix that."),(0,i.kt)("li",{parentName:"ul"},"Entries, e.g. 'foo' can be referenced as ",(0,i.kt)("inlineCode",{parentName:"li"},"http://trustoverip.github.io/<community>/[glossary](@)#foo")," (in case of a standalone glossary), and ",(0,i.kt)("inlineCode",{parentName:"li"},"http://trustoverip.github.io/<community>/document-that-includes-glossary-fragment#foo")," (in case of a fragmented glossary)."),(0,i.kt)("li",{parentName:"ul"},"There will be a new convention for content ",(0,i.kt)("a",{parentName:"li",href:"@"},"authors")," who want to reference ",(0,i.kt)("a",{parentName:"li",href:"term@"},"terms")," (let's call it the 'short form'). This topic is fully addressed above, and extended to be a bit more generic."),(0,i.kt)("li",{parentName:"ul"},"do we expect ",(0,i.kt)("a",{parentName:"li",href:"glossary@"},"glossaries")," that are generated by a ",(0,i.kt)("a",{parentName:"li",href:"@"},"terms-community")," to live at a fixed place (how do people find it, refer to its contents)? This topic is addressed"),(0,i.kt)("li",{parentName:"ul"},"once ",(0,i.kt)("a",{parentName:"li",href:"glossary@"},"glossaries")," are generated, the idea is that all artifacts produced in a ",(0,i.kt)("a",{parentName:"li",href:"@"},"terms-community")," can use references to the ",(0,i.kt)("a",{parentName:"li",href:"term@"},"terms")," in the generated ",(0,i.kt)("a",{parentName:"li",href:"glossary@"},"glossaries"),", e.g.:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"confluence pages: we need to see how such pages can be processed. ",(0,i.kt)("a",{parentName:"li",href:"@"},"Authors")," can remove links like they do now, they could use ",(0,i.kt)("a",{parentName:"li",href:"@"},"term refs")," as they see fit and then run TRRT."),(0,i.kt)("li",{parentName:"ul"},"github pages (e.g. ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/trustoverip/ctwg-terms"},"https://github.com/trustoverip/ctwg-terms"),"). Check (it's a github repo)."),(0,i.kt)("li",{parentName:"ul"},"github wiki pages (e.g. ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/trustoverip/ctwg-terms/wiki"},"https://github.com/trustoverip/ctwg-terms/wiki"),"). Check (it's a github repo)."),(0,i.kt)("li",{parentName:"ul"},"github wiki home pages (e.g. ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/trustoverip/ctwg-terms/wiki/Home"},"https://github.com/trustoverip/ctwg-terms/wiki/Home"),"). Check (it's a github repo)."),(0,i.kt)("li",{parentName:"ul"},"github-pages pages (e.g. ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/trustoverip/ctwg-terms/docs"},"https://github.com/trustoverip/ctwg-terms/docs")))),(0,i.kt)("li",{parentName:"ul"},"We could also see GGT and TRRT to be extended, e.g. to work in conjunction with LaTeX or word-processor documents. This needs some looking into, but ",(0,i.kt)("a",{parentName:"li",href:"https://pandoc.org/"},"pandoc")," may be useful here.")))}h.isMDXComponent=!0}}]);