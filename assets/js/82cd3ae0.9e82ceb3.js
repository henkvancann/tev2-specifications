"use strict";(self.webpackChunktev2_specifications=self.webpackChunktev2_specifications||[]).push([[5224],{3905:function(e,t,a){a.d(t,{Zo:function(){return m},kt:function(){return u}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),h=p(a),u=r,f=h["".concat(s,".").concat(u)]||h[u]||d[u]||i;return a?n.createElement(f,l(l({ref:t},m),{},{components:a})):n.createElement(f,l({ref:t},m))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=h;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},5162:function(e,t,a){a.d(t,{Z:function(){return l}});var n=a(7294),r=a(6010),i="tabItem_Ymn6";function l(e){var t=e.children,a=e.hidden,l=e.className;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,l),hidden:a},t)}},4866:function(e,t,a){a.d(t,{Z:function(){return C}});var n=a(7462),r=a(7294),i=a(6010),l=a(2466),o=a(6775),s=a(1980),p=a(7392),m=a(12);function d(e){return function(e){var t,a;return null!=(t=null==(a=r.Children.map(e,(function(e){if(!e||(0,r.isValidElement)(e)&&(t=e.props)&&"object"==typeof t&&"value"in t)return e;var t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:a.filter(Boolean))?t:[]}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function h(e){var t=e.values,a=e.children;return(0,r.useMemo)((function(){var e=null!=t?t:d(a);return function(e){var t=(0,p.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,a])}function u(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function f(e){var t=e.queryString,a=void 0!==t&&t,n=e.groupId,i=(0,o.k6)(),l=function(e){var t=e.queryString,a=void 0!==t&&t,n=e.groupId;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:a,groupId:n});return[(0,s._X)(l),(0,r.useCallback)((function(e){if(l){var t=new URLSearchParams(i.location.search);t.set(l,e),i.replace(Object.assign({},i.location,{search:t.toString()}))}}),[l,i])]}function k(e){var t,a,n,i,l=e.defaultValue,o=e.queryString,s=void 0!==o&&o,p=e.groupId,d=h(e),k=(0,r.useState)((function(){return function(e){var t,a=e.defaultValue,n=e.tabValues;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!u({value:a,tabValues:n}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+a+'" but none of its children has the corresponding value. Available values are: '+n.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return a}var r=null!=(t=n.find((function(e){return e.default})))?t:n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:l,tabValues:d})})),c=k[0],N=k[1],g=f({queryString:s,groupId:p}),y=g[0],v=g[1],b=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:p}.groupId),a=(0,m.Nk)(t),n=a[0],i=a[1],[n,(0,r.useCallback)((function(e){t&&i.set(e)}),[t,i])]),C=b[0],w=b[1],x=function(){var e=null!=y?y:C;return u({value:e,tabValues:d})?e:null}();return(0,r.useLayoutEffect)((function(){x&&N(x)}),[x]),{selectedValue:c,selectValue:(0,r.useCallback)((function(e){if(!u({value:e,tabValues:d}))throw new Error("Can't select invalid tab value="+e);N(e),v(e),w(e)}),[v,w,d]),tabValues:d}}var c=a(2389),N="tabList__CuJ",g="tabItem_LNqP";function y(e){var t=e.className,a=e.block,o=e.selectedValue,s=e.selectValue,p=e.tabValues,m=[],d=(0,l.o5)().blockElementScrollPositionUntilNextRender,h=function(e){var t=e.currentTarget,a=m.indexOf(t),n=p[a].value;n!==o&&(d(t),s(n))},u=function(e){var t,a=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":var n,r=m.indexOf(e.currentTarget)+1;a=null!=(n=m[r])?n:m[0];break;case"ArrowLeft":var i,l=m.indexOf(e.currentTarget)-1;a=null!=(i=m[l])?i:m[m.length-1]}null==(t=a)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":a},t)},p.map((function(e){var t=e.value,a=e.label,l=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:function(e){return m.push(e)},onKeyDown:u,onClick:h},l,{className:(0,i.Z)("tabs__item",g,null==l?void 0:l.className,{"tabs__item--active":o===t})}),null!=a?a:t)})))}function v(e){var t=e.lazy,a=e.children,n=e.selectedValue,i=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){var l=i.find((function(e){return e.props.value===n}));return l?(0,r.cloneElement)(l,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},i.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n})})))}function b(e){var t=k(e);return r.createElement("div",{className:(0,i.Z)("tabs-container",N)},r.createElement(y,(0,n.Z)({},e,t)),r.createElement(v,(0,n.Z)({},e,t)))}function C(e){var t=(0,c.Z)();return r.createElement(b,(0,n.Z)({key:String(t)},e))}},8519:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return d}});var n=a(7462),r=a(3366),i=(a(7294),a(3905)),l=(a(4996),a(4866),a(5162),["components"]),o={id:"terminology-construction",toc_min_heading_level:2,toc_max_heading_level:2,date:20231002},s="Terminology Construction",p={unversionedId:"spec-tools/terminology-construction",id:"spec-tools/terminology-construction",title:"Terminology Construction",description:"Curators need the ability to construct (different versions of) the terminology for any scope they curate. This page documents",source:"@site/docs/spec-tools/20-terminology-construction.mdx",sourceDirName:"spec-tools",slug:"/spec-tools/terminology-construction",permalink:"/tev2-specifications/docs/spec-tools/terminology-construction",draft:!1,editUrl:"https://github.com/tno-terminology-design/tev2-specifications/blob/master/docs/spec-tools/20-terminology-construction.mdx",tags:[],version:"current",lastUpdatedBy:"Rieks",lastUpdatedAt:1696927824,formattedLastUpdatedAt:"Oct 10, 2023",sidebarPosition:20,frontMatter:{id:"terminology-construction",toc_min_heading_level:2,toc_max_heading_level:2,date:20231002},sidebar:"tev2SideBar",previous:{title:"TRRT - Term Ref Resolution Tool",permalink:"/tev2-specifications/docs/spec-tools/trrt"},next:{title:"MRGT - MRG Generation Tool",permalink:"/tev2-specifications/docs/spec-tools/mrgt"}},m={},d=[{value:"Specifying the contents of a terminology",id:"specifying-terminology",level:2},{value:"Process for creating a terminology",id:"process-for-creating-a-terminology",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Adding Terms",id:"syntax-add",level:2},{value:"Add all terms from a specific source",id:"syntax-add-all-terms",level:3},{value:"Add selected terms from a specific source",id:"syntax-add-selected-terms",level:3},{value:"Removing Terms",id:"syntax-remove",level:2},{value:"Rename/rewrite term fields",id:"syntax-rename",level:2}],h={toc:d};function u(e){var t=e.components,a=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"terminology-construction"},"Terminology Construction"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"@"},"Curators")," need the ability to construct (different versions of) the ",(0,i.kt)("a",{parentName:"p",href:"@"},"terminology")," for any ",(0,i.kt)("a",{parentName:"p",href:"@"},"scope")," they ",(0,i.kt)("a",{parentName:"p",href:"@"},"curate"),". This page documents"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"the way in which a ",(0,i.kt)("a",{parentName:"li",href:"@"},"curator")," can specify this for a ",(0,i.kt)("a",{parentName:"li",href:"@"},"scope")," that they ",(0,i.kt)("a",{parentName:"li",href:"@"},"curate"),", and"),(0,i.kt)("li",{parentName:"ol"},"how that specification is used to create the associated ",(0,i.kt)("a",{parentName:"li",href:"@"},"terminology"),".")),(0,i.kt)("p",null,"The actual creation of a ",(0,i.kt)("a",{parentName:"p",href:"@"},"terminology"),", and the subsequent generation of the ",(0,i.kt)("a",{parentName:"p",href:"@"},"MRG")," that contains it, is done by the ",(0,i.kt)("a",{parentName:"p",href:"@"},"MRGT"),"."),(0,i.kt)("h2",{id:"specifying-terminology"},"Specifying the contents of a terminology"),(0,i.kt)("p",null,"A ",(0,i.kt)("a",{parentName:"p",href:"@"},"curator")," specifies a ",(0,i.kt)("a",{parentName:"p",href:"@"},"terminology")," by creating a new entry in the ",(0,i.kt)("a",{parentName:"p",href:"/docs/spec-files/saf#versions"},(0,i.kt)("inlineCode",{parentName:"a"},"versions")," section")," of the ",(0,i.kt)("a",{parentName:"p",href:"@"},"SAF")," of the ",(0,i.kt)("a",{parentName:"p",href:"@"},"scope")," in which the ",(0,i.kt)("a",{parentName:"p",href:"@"},"terminology")," is ",(0,i.kt)("a",{parentName:"p",href:"@"},"curated"),". This entry will contain "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"one or more ",(0,i.kt)("a",{parentName:"li",href:"@"},"versiontags")," that allow the ",(0,i.kt)("a",{parentName:"li",href:"@"},"terminology")," to be ",(0,i.kt)("a",{parentName:"li",href:"@"},"identified")," (within its ",(0,i.kt)("a",{parentName:"li",href:"@"},"scope"),"), "),(0,i.kt)("li",{parentName:"ul"},"the ",(0,i.kt)("a",{parentName:"li",href:"@"},"term selection instructions")," that specify the ",(0,i.kt)("a",{parentName:"li",href:"@"},"terms")," that are to be included (or removed) from the ",(0,i.kt)("a",{parentName:"li",href:"terminology-under-construction@"},"terminology as it is being constructed"),", and"),(0,i.kt)("li",{parentName:"ul"},"some meta-data (see the ",(0,i.kt)("a",{parentName:"li",href:"/docs/spec-files/saf#versions"},"documentation"),".")),(0,i.kt)("h2",{id:"process-for-creating-a-terminology"},"Process for creating a terminology"),(0,i.kt)("p",null,"The creation of a ",(0,i.kt)("a",{parentName:"p",href:"@"},"terminology")," is equivalent with the creation of the set of ",(0,i.kt)("a",{parentName:"p",href:"@"},"MRG entries")," that document each of the ",(0,i.kt)("a",{parentName:"p",href:"@"},"terms")," therein. Thus, the process for creating a ",(0,i.kt)("a",{parentName:"p",href:"@"},"terminology")," can be described as follows:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"start with an empty set of ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG entries"),' - we use the term "',(0,i.kt)("a",{parentName:"li",href:"@"},"terminology under construction"),'" to refer to this set.'),(0,i.kt)("li",{parentName:"ol"},"sequentially process the list of ",(0,i.kt)("a",{parentName:"li",href:"@"},"term selection instructions")," as specified in the appropriate entry of the ",(0,i.kt)("a",{parentName:"li",href:"/docs/spec-files/saf#versions"},(0,i.kt)("inlineCode",{parentName:"a"},"versions")," section")," of the ",(0,i.kt)("a",{parentName:"li",href:"@"},"SAF"),", i.e. instructions which allow for")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#syntax-add"},"adding")," ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG entries")," to the ",(0,i.kt)("a",{parentName:"li",href:"@"},"terminology under construction"),"; these can either be ",(0,i.kt)("a",{parentName:"li",href:"mrg-entry@"},"entries")," that have been created from ",(0,i.kt)("a",{parentName:"li",href:"@"},"curated texts"),", or ",(0,i.kt)("a",{parentName:"li",href:"mrg-entry@"},"entries")," whose contents are obtained from an ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG")," other than the one that is being created."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#syntax-remove"},"removing")," ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG entries")," from the ",(0,i.kt)("a",{parentName:"li",href:"@"},"terminology under construction"),";"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#syntax-rename"},"modifying attributes")," of a specific ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG entry")," in the ",(0,i.kt)("a",{parentName:"li",href:"@"},"terminology under construction"),", e.g. for renaming a term that originated from another ",(0,i.kt)("a",{parentName:"li",href:"@"},"scope"),".")),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("p",null,"In this text, we will use the terms:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"current scope")," for the ",(0,i.kt)("a",{parentName:"li",href:"@"},"scope")," within which the ",(0,i.kt)("a",{parentName:"li",href:"@"},"terminology")," is being created and"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"current version")," for the ",(0,i.kt)("a",{parentName:"li",href:"@"},"version")," of the ",(0,i.kt)("a",{parentName:"li",href:"@"},"terminology")," that is being created.")),(0,i.kt)("p",null,"In the syntax specification for ",(0,i.kt)("a",{parentName:"p",href:"@"},"term selection instructions"),", we use the following symbols:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Symbol"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"<key>")),(0,i.kt)("td",{parentName:"tr",align:"left"},"a text that corresponds with a field name in an ",(0,i.kt)("a",{parentName:"td",href:"@"},"MRG entry")," of a desginated ",(0,i.kt)("a",{parentName:"td",href:"@"},"MRG"),", or the ",(0,i.kt)("a",{parentName:"td",href:"@"},"header")," (front-matter) of a ",(0,i.kt)("a",{parentName:"td",href:"@"},"curated text"),". Examples: ",(0,i.kt)("inlineCode",{parentName:"td"},"term"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"grouptags"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"status"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"<value>")),(0,i.kt)("td",{parentName:"tr",align:"left"},"a text that is used to ",(0,i.kt)("a",{parentName:"td",href:"@"},"identify")," an ",(0,i.kt)("a",{parentName:"td",href:"@"},"MRG entry")," or a ",(0,i.kt)("a",{parentName:"td",href:"@"},"curated text"),".")))),(0,i.kt)("h2",{id:"syntax-add"},"Adding Terms"),(0,i.kt)("p",null,"Adding terms is done using instructions that "),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"identify a (set of) ",(0,i.kt)("a",{parentName:"li",href:"@"},"term(s)")," that is to be added to the ",(0,i.kt)("a",{parentName:"li",href:"@"},"terminology-under-construction"),"."),(0,i.kt)("li",{parentName:"ol"},"specify the source from which an ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG entries")," will be created for each of these ",(0,i.kt)("a",{parentName:"li",href:"@"},"terms"),".")),(0,i.kt)("p",null,"By default, the source is the the set of ",(0,i.kt)("a",{parentName:"p",href:"@"},"curated texts")," of the current scope."),(0,i.kt)("p",null,"However, any (existing) ",(0,i.kt)("a",{parentName:"p",href:"@"},"MRG")," can be used as an alternative source, by adding the text ",(0,i.kt)("inlineCode",{parentName:"p"},"@<terminology-identifier>")," to the instruction that selects the ",(0,i.kt)("a",{parentName:"p",href:"@"},"terms"),", where ",(0,i.kt)("inlineCode",{parentName:"p"},"<terminology-identifier>")," is the ",(0,i.kt)("a",{parentName:"p",href:"@"},"terminology identifier")," that identifies the ",(0,i.kt)("a",{parentName:"p",href:"@"},"MRG"),". Note that this ",(0,i.kt)("a",{parentName:"p",href:"@"},"MRG")," must have been made available in the ",(0,i.kt)("a",{parentName:"p",href:"@"},"glossarydir")," of the current scope."),(0,i.kt)("h3",{id:"syntax-add-all-terms"},"Add all terms from a specific source"),(0,i.kt)("p",null,"The following syntaxes are available for adding all terms from a specific source to the ",(0,i.kt)("a",{parentName:"p",href:"@"},"terminology under construction"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"*")),(0,i.kt)("br",null),"Add all ",(0,i.kt)("a",{parentName:"li",href:"@"},"terms")," that are described by a ",(0,i.kt)("a",{parentName:"li",href:"@"},"curated texts")," in the current scope.",(0,i.kt)("br",null),"\xa0"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"* @<tid>")),(0,i.kt)("br",null),"Add all ",(0,i.kt)("a",{parentName:"li",href:"@"},"terms")," that have an ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG entry")," in the ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG")," as ",(0,i.kt)("a",{parentName:"li",href:"@"},"identified")," by the ",(0,i.kt)("a",{parentName:"li",href:"@"},"terminology-identifier")," ",(0,i.kt)("inlineCode",{parentName:"li"},"<tid>"),". This ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG")," must have been made available in the ",(0,i.kt)("a",{parentName:"li",href:"@"},"glossarydir")," of the current scope.")),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Examples:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Examples:"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Meaning:"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"*","\xa0","@tev2:v1"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Add all ",(0,i.kt)("a",{parentName:"td",href:"@"},"terms")," that are in version ",(0,i.kt)("inlineCode",{parentName:"td"},"v1")," of the ",(0,i.kt)("a",{parentName:"td",href:"@"},"terminology")," of the ",(0,i.kt)("a",{parentName:"td",href:"@"},"scope")," identified by ",(0,i.kt)("inlineCode",{parentName:"td"},"tev2"),", i.e., in ",(0,i.kt)("a",{parentName:"td",href:"@"},"MRG")," file ",(0,i.kt)("inlineCode",{parentName:"td"},"mrg.tev2.v1.yaml"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"* @tev2"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Add all ",(0,i.kt)("a",{parentName:"td",href:"@"},"terms")," that are in the default version of the ",(0,i.kt)("a",{parentName:"td",href:"@"},"terminology")," of the ",(0,i.kt)("a",{parentName:"td",href:"@"},"scope")," identified by ",(0,i.kt)("inlineCode",{parentName:"td"},"tev2"),",",(0,i.kt)("br",null),"i.e., in ",(0,i.kt)("a",{parentName:"td",href:"@"},"MRG")," file ",(0,i.kt)("inlineCode",{parentName:"td"},"mrg.tev2.<defaultvsn>.yaml"),", where ",(0,i.kt)("inlineCode",{parentName:"td"},"<defaultvsn>")," is the value of the ",(0,i.kt)("inlineCode",{parentName:"td"},"defaultvsn")," field in the ",(0,i.kt)("a",{parentName:"td",href:"/docs/spec-files/saf#scope-section"},(0,i.kt)("inlineCode",{parentName:"a"},"scope")," section")," of the ",(0,i.kt)("a",{parentName:"td",href:"@"},"SAF")," that is located in the ",(0,i.kt)("a",{parentName:"td",href:"@"},"scopedir")," associated with the ",(0,i.kt)("a",{parentName:"td",href:"@"},"scopetag")," ",(0,i.kt)("inlineCode",{parentName:"td"},"tev2"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"* @:v1.0.3"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Add all ",(0,i.kt)("a",{parentName:"td",href:"@"},"terms")," that are in version ",(0,i.kt)("inlineCode",{parentName:"td"},"v1.0.3")," of the ",(0,i.kt)("a",{parentName:"td",href:"@"},"terminology")," of the current scope.",(0,i.kt)("br",null),"i.e., in ",(0,i.kt)("a",{parentName:"td",href:"@"},"MRG")," file ",(0,i.kt)("inlineCode",{parentName:"td"},"mrg.<cstag>.v1.0.3.yaml"),", where ",(0,i.kt)("inlineCode",{parentName:"td"},"<cstag>")," is the value of the ",(0,i.kt)("inlineCode",{parentName:"td"},"scopetag")," field in the ",(0,i.kt)("a",{parentName:"td",href:"/docs/spec-files/saf#scope-section"},(0,i.kt)("inlineCode",{parentName:"a"},"scope")," section")," of the ",(0,i.kt)("a",{parentName:"td",href:"@"},"SAF")," of the current scope.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"* @"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Add all ",(0,i.kt)("a",{parentName:"td",href:"@"},"terms")," that are in the default version of the ",(0,i.kt)("a",{parentName:"td",href:"@"},"terminology")," of the current scope.",(0,i.kt)("br",null),"i.e., in ",(0,i.kt)("a",{parentName:"td",href:"@"},"MRG")," file ",(0,i.kt)("inlineCode",{parentName:"td"},"mrg.<cstag>.<defaultvsn>.yaml"),", where:",(0,i.kt)("br",null),"- ",(0,i.kt)("inlineCode",{parentName:"td"},"<cstag>")," is the value of the ",(0,i.kt)("inlineCode",{parentName:"td"},"scopetag")," field in the ",(0,i.kt)("a",{parentName:"td",href:"/docs/spec-files/saf#scope-section"},(0,i.kt)("inlineCode",{parentName:"a"},"scope")," section")," of the ",(0,i.kt)("a",{parentName:"td",href:"@"},"SAF")," of the current scope, and",(0,i.kt)("br",null),"- ",(0,i.kt)("inlineCode",{parentName:"td"},"<defaultvsn>")," is the value of the ",(0,i.kt)("inlineCode",{parentName:"td"},"defaultvsn")," field in that same ",(0,i.kt)("a",{parentName:"td",href:"@"},"SAF"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"*"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Add all ",(0,i.kt)("a",{parentName:"td",href:"@"},"terms")," that are described by a ",(0,i.kt)("a",{parentName:"td",href:"@"},"curated text")," in the current scope.")))),(0,i.kt)("p",null,"The difference between ",(0,i.kt)("inlineCode",{parentName:"p"},"*")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"* @")," is that the first takes ",(0,i.kt)("a",{parentName:"p",href:"@"},"curated texts")," as source, whereas the latter takes an existing ",(0,i.kt)("a",{parentName:"p",href:"@"},"MRG")," as source, being the ",(0,i.kt)("a",{parentName:"p",href:"@"},"MRG")," that contains the default version of the ",(0,i.kt)("a",{parentName:"p",href:"@"},"terminology")," of the current scope. This allows ",(0,i.kt)("a",{parentName:"p",href:"@"},"terminologies")," to be defined in terms of their predecessors.")),(0,i.kt)("h3",{id:"syntax-add-selected-terms"},"Add selected terms from a specific source"),(0,i.kt)("p",null,"The following syntaxes are available for adding a selection of terms from a specific source to the ",(0,i.kt)("a",{parentName:"p",href:"@"},"terminology under construction"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"<key>")," ","[ ",(0,i.kt)("inlineCode",{parentName:"strong"},"<value>"),", ",(0,i.kt)("inlineCode",{parentName:"strong"},"<value2>"),", ... ]"),", where:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<key>")," is a text that corresponds with a field name in a ",(0,i.kt)("a",{parentName:"li",href:"@"},"header")," (front-matter) of a ",(0,i.kt)("a",{parentName:"li",href:"@"},"curated text"),", such as ",(0,i.kt)("inlineCode",{parentName:"li"},"term"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"grouptags"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"status"),", etc."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<value>"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"<value2>"),", ... are texts that are used to determine whether or not a ",(0,i.kt)("a",{parentName:"li",href:"@"},"curated text")," is to be selected for inclusion in the ",(0,i.kt)("a",{parentName:"li",href:"@"},"terminology under construction"),".",(0,i.kt)("br",null),"\xa0"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"<key>")," ","[ ",(0,i.kt)("inlineCode",{parentName:"strong"},"<value>"),", ",(0,i.kt)("inlineCode",{parentName:"strong"},"<value2>"),", ... ]"," ",(0,i.kt)("inlineCode",{parentName:"strong"},"@<tid>")),", where:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<tid>")," is a ",(0,i.kt)("a",{parentName:"li",href:"@"},"terminology identifier")," that ",(0,i.kt)("a",{parentName:"li",href:"@"},"identifies")," an ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG")," (that must have been made available in the ",(0,i.kt)("a",{parentName:"li",href:"@"},"glossarydir")," of the current scope)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<key>")," is a text that corresponds with a field name in an ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG entry")," that resides in that ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG"),", such as ",(0,i.kt)("inlineCode",{parentName:"li"},"term"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"grouptags"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"status"),", etc."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<value>"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"<value2>"),", ... are texts that are used to determine whether or not an ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG entry")," from that ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG")," is to be selected for inclusion in the ",(0,i.kt)("a",{parentName:"li",href:"@"},"terminology under construction"),".")))),(0,i.kt)("p",null,"These instructions will add every term from the designated source, whose specification contains a field named ",(0,i.kt)("inlineCode",{parentName:"p"},"<key>"),", and (one of) the value(s) of that field matches with at least one of the values in ",(0,i.kt)("inlineCode",{parentName:"p"},"[ <value1>, <value2>, ... ]"),"."),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Examples:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Syntax:"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Meaning:"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"term ","[actor]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"select every ",(0,i.kt)("a",{parentName:"td",href:"@"},"curated text")," from the current scope, that has a ",(0,i.kt)("inlineCode",{parentName:"td"},"term")," field in its ",(0,i.kt)("a",{parentName:"td",href:"@"},"header")," of which the value is ",(0,i.kt)("inlineCode",{parentName:"td"},"actor"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"status","[proposed,approved]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"select every ",(0,i.kt)("a",{parentName:"td",href:"@"},"curated text")," from the current scope, that has a ",(0,i.kt)("inlineCode",{parentName:"td"},"status")," field in its ",(0,i.kt)("a",{parentName:"td",href:"@"},"header")," of which the value is ",(0,i.kt)("inlineCode",{parentName:"td"},"proposed")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"approved"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"somefield []"),(0,i.kt)("td",{parentName:"tr",align:"left"},"select every ",(0,i.kt)("a",{parentName:"td",href:"@"},"curated text")," from the current scope, that has a field ",(0,i.kt)("inlineCode",{parentName:"td"},"somefield")," that has no value specified.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"term ","[actor,party]","@tev2:v1"),(0,i.kt)("td",{parentName:"tr",align:"left"},"select every ",(0,i.kt)("a",{parentName:"td",href:"@"},"MRG entry")," from ",(0,i.kt)("a",{parentName:"td",href:"@"},"MRG")," of ",(0,i.kt)("a",{parentName:"td",href:"@"},"scope")," ",(0,i.kt)("inlineCode",{parentName:"td"},"tev2")," that has ",(0,i.kt)("a",{parentName:"td",href:"versiontag@"},"version")," ",(0,i.kt)("inlineCode",{parentName:"td"},"v1"),", that has a ",(0,i.kt)("inlineCode",{parentName:"td"},"term")," field whose value is ",(0,i.kt)("inlineCode",{parentName:"td"},"actor")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"party"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"grouptags","[x,y,z]","@essif-lab"),(0,i.kt)("td",{parentName:"tr",align:"left"},"select every ",(0,i.kt)("a",{parentName:"td",href:"@"},"MRG entry")," from the default ",(0,i.kt)("a",{parentName:"td",href:"@"},"MRG")," of ",(0,i.kt)("a",{parentName:"td",href:"@"},"scope")," ",(0,i.kt)("inlineCode",{parentName:"td"},"essif-lab"),", that has a ",(0,i.kt)("inlineCode",{parentName:"td"},"grouptags")," field whose value is ",(0,i.kt)("inlineCode",{parentName:"td"},"x"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"y"),", or ",(0,i.kt)("inlineCode",{parentName:"td"},"z"),"."))))),(0,i.kt)("h2",{id:"syntax-remove"},"Removing Terms"),(0,i.kt)("p",null,"Removing terms is equivalent to removing selected ",(0,i.kt)("a",{parentName:"p",href:"@"},"MRG entries")," from the ",(0,i.kt)("a",{parentName:"p",href:"@"},"terminology under construction"),". The syntax is similar to one that is used for adding terms, but it is preceeded with a ",(0,i.kt)("inlineCode",{parentName:"p"},"-"),"sign, and a source may not be specified, as it is always the ",(0,i.kt)("a",{parentName:"p",href:"@"},"terminology under construction"),"."),(0,i.kt)("p",null,"The following syntaxes are available for removing a selection of terms from the ",(0,i.kt)("a",{parentName:"p",href:"@"},"terminology under construction"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"-",(0,i.kt)("inlineCode",{parentName:"strong"},"<key>")," ","[ ",(0,i.kt)("inlineCode",{parentName:"strong"},"<value>"),", ",(0,i.kt)("inlineCode",{parentName:"strong"},"<value2>"),", ... ]"),", where:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<key>")," is a text that corresponds with a field name in an ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG entry")," in the ",(0,i.kt)("a",{parentName:"li",href:"@"},"terminology under construction"),", , such as ",(0,i.kt)("inlineCode",{parentName:"li"},"term"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"grouptags"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"status"),", etc."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<value>"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"<value2>"),", ... are texts that are used to determine whether or not an ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG entry")," is to be removed from the ",(0,i.kt)("a",{parentName:"li",href:"@"},"terminology under construction"),".")))),(0,i.kt)("p",null,"This syntax removes every ",(0,i.kt)("a",{parentName:"p",href:"@"},"MRG entry")," from the ",(0,i.kt)("a",{parentName:"p",href:"@"},"terminology-under-construction")," that has a field named ",(0,i.kt)("inlineCode",{parentName:"p"},"<key>"),", and where (one of) the value(s) of that field matches with at least one of the values in ",(0,i.kt)("inlineCode",{parentName:"p"},"[ <value1>, <value2>, ... ]"),"."),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Examples:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Syntax:"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Meaning:"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"-term ","[actor]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"remove all entries that have a ",(0,i.kt)("inlineCode",{parentName:"td"},"term")," field whose value is ",(0,i.kt)("inlineCode",{parentName:"td"},"actor"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"-status","[proposed,approved]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"remove all entries that have a ",(0,i.kt)("inlineCode",{parentName:"td"},"status")," field whose value is ",(0,i.kt)("inlineCode",{parentName:"td"},"proposed")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"approved"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"-grouptags","[x,y,z]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"remove all entries that have a ",(0,i.kt)("inlineCode",{parentName:"td"},"grouptags")," field of which one of the listed ",(0,i.kt)("a",{parentName:"td",href:"@"},"grouptags")," is ",(0,i.kt)("inlineCode",{parentName:"td"},"x"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"y"),", or ",(0,i.kt)("inlineCode",{parentName:"td"},"z"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"-somefield []"),(0,i.kt)("td",{parentName:"tr",align:"left"},"remove all entries that have a ",(0,i.kt)("inlineCode",{parentName:"td"},"somefield")," field that has no value specified."))))),(0,i.kt)("h2",{id:"syntax-rename"},"Rename/rewrite term fields"),(0,i.kt)("admonition",{title:"Editor's note",type:"info"},(0,i.kt)("p",{parentName:"admonition"},"The ability to rename terms as they are imported may introduce some issues related to other field-names, such as ",(0,i.kt)("inlineCode",{parentName:"p"},"term"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"formphrases"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"synonyms"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"glossaryText"),"s and possibly some others. Perhaps this syntax should therefore be extended, enabling ",(0,i.kt)("a",{parentName:"p",href:"@"},"curators")," to simultaneously change these (and other) fields in the ",(0,i.kt)("a",{parentName:"p",href:"@"},"MRG entry"),".")),(0,i.kt)("p",null,"In analogy with ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Namespace"},"namespaces"),", we accommodate for the renaming of ",(0,i.kt)("a",{parentName:"p",href:"@"},"terms")," as they are 'imported' from ",(0,i.kt)("a",{parentName:"p",href:"@"},"terminologies")," other than the one that we are constructing. However, the analogy breaks down in the sense that it is not only a ",(0,i.kt)("a",{parentName:"p",href:"@"},"term")," that should be renameable (which is sufficient for ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Namespace"},"namespaces"),"), but also certain attributes may need to be changed."),(0,i.kt)("p",null,"The following syntaxes are available for renaming fields in an ",(0,i.kt)("a",{parentName:"p",href:"@"},"MRG entry")," that is part of the ",(0,i.kt)("a",{parentName:"p",href:"@"},"terminology under construction"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"rename")," ",(0,i.kt)("inlineCode",{parentName:"strong"},"<term>")," ","[ ",(0,i.kt)("inlineCode",{parentName:"strong"},"<key>"),":",(0,i.kt)("inlineCode",{parentName:"strong"},"<value>"),", ",(0,i.kt)("inlineCode",{parentName:"strong"},"<key2>:<value2>"),", ... ]"),", where:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<term>")," is the value of the ",(0,i.kt)("inlineCode",{parentName:"li"},"term")," field in the ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG entry")," of the ",(0,i.kt)("a",{parentName:"li",href:"@"},"terminology under construction")," that is selected for the renaming process. Note that this value is an ",(0,i.kt)("a",{parentName:"li",href:"@"},"identifier")," for that ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG entry"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<key>")," is a text that corresponds with a field name in an ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG entry")," in the ",(0,i.kt)("a",{parentName:"li",href:"@"},"terminology under construction"),", such as ",(0,i.kt)("inlineCode",{parentName:"li"},"formPhrases"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"glossaryText"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"grouptags"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"status"),", etc."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<value>")," is a text that will replace the existing text of the field identified by ",(0,i.kt)("inlineCode",{parentName:"li"},"<key>"),". If the text contains multiple words, it is advised to surround it with quotes.")))),(0,i.kt)("p",null,"Here is how it works. First, the ",(0,i.kt)("a",{parentName:"p",href:"@"},"MRG Entry")," is searched that has a ",(0,i.kt)("inlineCode",{parentName:"p"},"term")," field whose value is ",(0,i.kt)("inlineCode",{parentName:"p"},"<term>"),". If found, all ",(0,i.kt)("inlineCode",{parentName:"p"},"<key>"),":",(0,i.kt)("inlineCode",{parentName:"p"},"<value>")," pairs are processed in the sequence they are specified. Processing a ",(0,i.kt)("inlineCode",{parentName:"p"},"<key>"),":",(0,i.kt)("inlineCode",{parentName:"p"},"<value>")," pair consists of looking for a field named ",(0,i.kt)("inlineCode",{parentName:"p"},"<key>")," in the selected ",(0,i.kt)("a",{parentName:"p",href:"@"},"MRG entry"),". We now have the following situations:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"if the ",(0,i.kt)("inlineCode",{parentName:"li"},"<key>")," field exists, and",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"if the ",(0,i.kt)("inlineCode",{parentName:"li"},"<value>")," is not empty, then the contents of the field is overwritten by ",(0,i.kt)("inlineCode",{parentName:"li"},"<value>"),";"),(0,i.kt)("li",{parentName:"ul"},"if the ",(0,i.kt)("inlineCode",{parentName:"li"},"<value>")," is empty, then the contents of the field is deleted;"))),(0,i.kt)("li",{parentName:"ul"},"if the ",(0,i.kt)("inlineCode",{parentName:"li"},"<key>")," field does not exists, and",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"if the ",(0,i.kt)("inlineCode",{parentName:"li"},"<value>")," is not empty, then a new field named ",(0,i.kt)("inlineCode",{parentName:"li"},"<key>")," with the specified ",(0,i.kt)("inlineCode",{parentName:"li"},"<value>")," is added to the ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG entry"),";"),(0,i.kt)("li",{parentName:"ul"},"if the ",(0,i.kt)("inlineCode",{parentName:"li"},"<value>")," is empty, then nothing is done.")))),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Renaming examples"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},'rename party [ status:accepted, hoverText:"A natural person or a legal person" ]')),":"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"searches for the ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG entry")," whose ",(0,i.kt)("inlineCode",{parentName:"li"},"term")," field has value ",(0,i.kt)("inlineCode",{parentName:"li"},"party"),", and (when found)"),(0,i.kt)("li",{parentName:"ul"},"changes (or creates) its ",(0,i.kt)("inlineCode",{parentName:"li"},"status")," field to so that it contains ",(0,i.kt)("inlineCode",{parentName:"li"},"accepted"),", and "),(0,i.kt)("li",{parentName:"ul"},"changes (or creates) its ",(0,i.kt)("inlineCode",{parentName:"li"},"hoverText")," field to so that it contains ",(0,i.kt)("inlineCode",{parentName:"li"},'"A natural person or a legal person"'),"."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},'rename party [ term:partij, formPhrases:"partij{en}", hoverText:"Een natuurlijk persoon of een rechtspersoon" ]'))),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"searches for the ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG entry")," whose ",(0,i.kt)("inlineCode",{parentName:"li"},"term")," field has value ",(0,i.kt)("inlineCode",{parentName:"li"},"party"),", and (when found)"),(0,i.kt)("li",{parentName:"ul"},"changes (or creates) its ",(0,i.kt)("inlineCode",{parentName:"li"},"term")," field to so that it contains ",(0,i.kt)("inlineCode",{parentName:"li"},"partij"),";"),(0,i.kt)("li",{parentName:"ul"},"changes (or creates) its ",(0,i.kt)("inlineCode",{parentName:"li"},"status")," field to so that it contains ",(0,i.kt)("inlineCode",{parentName:"li"},"approved"),"."),(0,i.kt)("li",{parentName:"ul"},"changes (or creates) its ",(0,i.kt)("inlineCode",{parentName:"li"},"hoverText")," field to so that it contains ",(0,i.kt)("inlineCode",{parentName:"li"},'"A natural or legal person"')))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"rename party [ hoverText: ]"))),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"searches for the ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG entry")," whose ",(0,i.kt)("inlineCode",{parentName:"li"},"term")," field has value ",(0,i.kt)("inlineCode",{parentName:"li"},"party"),", and (when found)"),(0,i.kt)("li",{parentName:"ul"},"removes the contents from the ",(0,i.kt)("inlineCode",{parentName:"li"},"hoverText")," field if such a field exists.",(0,i.kt)("br",null)))))),(0,i.kt)("p",null,"where:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"symbol"),(0,i.kt)("th",{parentName:"tr",align:"left"},"description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<term>")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the ",(0,i.kt)("a",{parentName:"td",href:"@"},"term")," of the tuple that will be selected for renaming.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<fieldmodifierlist>")),(0,i.kt)("td",{parentName:"tr",align:"left"},"a (non-empty) comma-separated list of ",(0,i.kt)("inlineCode",{parentName:"td"},"<fieldmodifier>"),"s.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<fieldmodifier>")),(0,i.kt)("td",{parentName:"tr",align:"left"},"a ",(0,i.kt)("inlineCode",{parentName:"td"},"<key>:<value>")," pair.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<key>")),(0,i.kt)("td",{parentName:"tr",align:"left"},"a text that identifies a field in an ","[MRG entry]",", the value of which is to be changed, e.g. ",(0,i.kt)("inlineCode",{parentName:"td"},"formphrases"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"grouptags"),", etc.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<value>")),(0,i.kt)("td",{parentName:"tr",align:"left"},"a text that will replace the existing text of the field identified by ",(0,i.kt)("inlineCode",{parentName:"td"},"<key>"),".")))),(0,i.kt)("p",null,"This syntax is processed by first selecting the tuple (in the tuple set that is being constructed) that has the specified ",(0,i.kt)("inlineCode",{parentName:"p"},"<term>")," as its ",(0,i.kt)("inlineCode",{parentName:"p"},"term"),"-field, and then sequentially processing the ",(0,i.kt)("inlineCode",{parentName:"p"},"<fieldmodifier>"),"s in the ",(0,i.kt)("inlineCode",{parentName:"p"},"<fieldmodifierlist>"),", which means that the existing text of the field that is identified by the ",(0,i.kt)("inlineCode",{parentName:"p"},"<key>")," element of the ",(0,i.kt)("inlineCode",{parentName:"p"},"<fieldmodifier>")," is replaced by the text specified by the ",(0,i.kt)("inlineCode",{parentName:"p"},"<value>")," element of that ",(0,i.kt)("inlineCode",{parentName:"p"},"<fieldmodifier>"),"."),(0,i.kt)("admonition",{title:"Editor's note",type:"info"},(0,i.kt)("p",{parentName:"admonition"},"The ability to rename terms as they are imported may introduce some issues related to other field-names, such as ",(0,i.kt)("inlineCode",{parentName:"p"},"term"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"formphrases"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"synonyms"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"glossaryText"),"s and possibly some others. Perhaps this syntax should therefore be extended, enabling ",(0,i.kt)("a",{parentName:"p",href:"@"},"curators")," to simultaneously change these (and other) fields in the ",(0,i.kt)("a",{parentName:"p",href:"@"},"MRG entry"),".")))}u.isMDXComponent=!0}}]);