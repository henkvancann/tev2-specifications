"use strict";(self.webpackChunktev2_specifications=self.webpackChunktev2_specifications||[]).push([[7711],{3905:(e,t,r)=>{r.d(t,{Zo:()=>h,kt:()=>u});var a=r(7294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function n(e,t){if(null==e)return{};var r,a,s=function(e,t){if(null==e)return{};var r,a,s={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var c=a.createContext({}),p=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},h=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var r=e.components,s=e.mdxType,o=e.originalType,c=e.parentName,h=n(e,["components","mdxType","originalType","parentName"]),f=p(r),u=s,d=f["".concat(c,".").concat(u)]||f[u]||l[u]||o;return r?a.createElement(d,i(i({ref:t},h),{},{components:r})):a.createElement(d,i({ref:t},h))}));function u(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=r.length,i=new Array(o);i[0]=f;var n={};for(var c in t)hasOwnProperty.call(t,c)&&(n[c]=t[c]);n.originalType=e,n.mdxType="string"==typeof e?e:s,i[1]=n;for(var p=2;p<o;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},6521:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>n,toc:()=>p});var a=r(3117),s=(r(7294),r(3905));const o={id:"interpreter",term:"interpreter",termType:"concept",isa:null,glossaryTerm:"Interpreter",glossaryText:"a [(PCRE) regex](https://www.debuggex.com/cheatsheet/regex/pcre) that is used to locate a particular text construct (such as a [TermRef](@) or [MRGRef](@)) in a text, and that uses (PCRE) named groups to provide the values for the [moustache variables](@) in the [moustache profile](@) for which it is designed.",grouptags:null,formPhrases:["interpreter{ss}"],status:"proposed",created:new Date("2023-07-31T00:00:00.000Z"),updated:new Date("2023-12-18T00:00:00.000Z"),contributors:"RieksJ",attribution:"[TNO Terminology Design](https://tno-terminology-design.github.io/tev2-specifications/docs)",originalLicense:"[CC BY-SA 4.0](http://creativecommons.org/licenses/by-sa/4.0/?ref=chooser-v1)"},i="Interpreter",n={unversionedId:"terms/interpreter",id:"terms/interpreter",title:"Interpreter",description:"An interpreter is a (PCRE) regex that is used to locate a particular text construct (such as a TermRef or MRGRef) in a text, and that uses (PCRE) named groups to provide the values for the moustache variables in the moustache profile for which it is designed.",source:"@site/docs/terms/interpreter.md",sourceDirName:"terms",slug:"/terms/interpreter",permalink:"/tev2-specifications/docs/terms/interpreter",draft:!1,editUrl:"https://github.com/tno-terminology-design/tev2-specifications/blob/master/docs/terms/interpreter.md",tags:[],version:"current",lastUpdatedBy:"Ca5e",lastUpdatedAt:1704202634,formattedLastUpdatedAt:"Jan 2, 2024",frontMatter:{id:"interpreter",term:"interpreter",termType:"concept",isa:null,glossaryTerm:"Interpreter",glossaryText:"a [(PCRE) regex](https://www.debuggex.com/cheatsheet/regex/pcre) that is used to locate a particular text construct (such as a [TermRef](@) or [MRGRef](@)) in a text, and that uses (PCRE) named groups to provide the values for the [moustache variables](@) in the [moustache profile](@) for which it is designed.",grouptags:null,formPhrases:["interpreter{ss}"],status:"proposed",created:"2023-07-31T00:00:00.000Z",updated:"2023-12-18T00:00:00.000Z",contributors:"RieksJ",attribution:"[TNO Terminology Design](https://tno-terminology-design.github.io/tev2-specifications/docs)",originalLicense:"[CC BY-SA 4.0](http://creativecommons.org/licenses/by-sa/4.0/?ref=chooser-v1)"}},c={},p=[],h={toc:p};function l(e){let{components:t,...r}=e;return(0,s.kt)("wrapper",(0,a.Z)({},h,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"interpreter"},"Interpreter"),(0,s.kt)("p",null,"An ",(0,s.kt)("strong",{parentName:"p"},"interpreter")," is a ",(0,s.kt)("a",{parentName:"p",href:"https://www.debuggex.com/cheatsheet/regex/pcre"},"(PCRE) regex")," that is used to locate a particular text construct (such as a ",(0,s.kt)("a",{href:"/tev2-specifications/docs/terms/term-ref",title:"TermRef: a word or phrase that is Marked Up (in A Specific Way) so that it refers to a particular Concept (or other Semantic Unit), enabling it to be rendered in a variety of ways for the purpose of helping Readers to (better) understand the intention of its Author."},"TermRef")," or ",(0,s.kt)("a",{href:"/tev2-specifications/docs/spec-syntax/mrg-ref-syntax",title:"MRGRef: a text that is Marked Up (in A Specific Way) so that it refers to a particular Terminology, as well as to a specific way for creating an associated HRG."},"MRGRef"),") in a text, and that uses (PCRE) named groups to provide the values for the ",(0,s.kt)("a",{href:"/tev2-specifications/docs/terms/moustache-variable",title:"Moustache Variable: a placeholder in the form of a 'moustache' tag, e.g. ```, within some text. They are used, e.g., by the TRRT, where they get their values from an Interpreter, and where they are used in a selected Converter for the purpose of replacing TermRefs with Renderable Refs. See also https://mustache.github.io/mustache.5.html"},"moustache variables")," in the ",(0,s.kt)("a",{href:"/tev2-specifications/docs/terms/moustache-profile",title:"Moustache Profile: a set of Moustache Variables that specify the expected results or executing a particular Interpreter. For example, the moustache profile for TRRT Interpreters consists of the Variables ``, `concept`, `[object Object]`, ``, `tev2`, and `documentation`."},"moustache profile")," for which it is designed."),(0,s.kt)("p",null,"Interpreters are used in different contexts, e.g., in"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"the ",(0,s.kt)("a",{href:"/tev2-specifications/docs/spec-tools/trrt",title:"TermRef Rendering Tool: a TEv2 Tool that is designed to facilitate the visualization and rendering of TermRefs."},"TRRT"),", where it locates ",(0,s.kt)("a",{href:"/tev2-specifications/docs/terms/term-ref",title:"TermRef: a word or phrase that is Marked Up (in A Specific Way) so that it refers to a particular Concept (or other Semantic Unit), enabling it to be rendered in a variety of ways for the purpose of helping Readers to (better) understand the intention of its Author."},"TermRefs"),", and populates the associated ",(0,s.kt)("a",{href:"/tev2-specifications/docs/terms/moustache-profile",title:"Moustache Profile: a set of Moustache Variables that specify the expected results or executing a particular Interpreter. For example, the moustache profile for TRRT Interpreters consists of the Variables ``, `concept`, `[object Object]`, ``, `tev2`, and `documentation`."},"profile")," as specified in the ",(0,s.kt)("a",{parentName:"li",href:"/docs/spec-tools/trrt#trrt-interpreters"},"TRRT documentation"),";"),(0,s.kt)("li",{parentName:"ul"},"the ",(0,s.kt)("a",{href:"/tev2-specifications/docs/spec-tools/hrgt",title:"Human Readable Glossary Tool: a software tool designed to create, manage, and process Human Readable Glossaries (HRGs), as Specified By TEv2. HRGTs offer features for selecting Terms that are Curated within the Scope it is run in, or from other Scopes."},"HRGT"),", where it converts ",(0,s.kt)("a",{href:"/tev2-specifications/docs/spec-syntax/mrg-ref-syntax",title:"MRGRef: a text that is Marked Up (in A Specific Way) so that it refers to a particular Terminology, as well as to a specific way for creating an associated HRG."},"MRGRefs")," into a sequence of ",(0,s.kt)("a",{href:"/tev2-specifications/docs/terms/hrg-entry",title:"HRG Entry: A specific kind of (human-readable) rendering of the combination of a Term and a means that helps Readers to understand the meaning of that Term when it is used in a sentence."},"hrg entries"),", as specified in the ",(0,s.kt)("a",{parentName:"li",href:"/docs/spec-tools/hrgt#hrgt-interpreters"},"HRGT documentation"),";"),(0,s.kt)("li",{parentName:"ul"},"etc. (there may be more contexts).")),(0,s.kt)("p",null,"The context in which an interpreter is used specifies the ",(0,s.kt)("a",{href:"/tev2-specifications/docs/terms/moustache-variable",title:"Moustache Variable: a placeholder in the form of a 'moustache' tag, e.g. ```, within some text. They are used, e.g., by the TRRT, where they get their values from an Interpreter, and where they are used in a selected Converter for the purpose of replacing TermRefs with Renderable Refs. See also https://mustache.github.io/mustache.5.html"},"moustache variables")," that are to be populated as the result of finding a particular text construct. These specifications can be found in the documentation of the respective tools."),(0,s.kt)("p",null,"Interpreters are specified as ",(0,s.kt)("a",{parentName:"p",href:"https://www.debuggex.com/cheatsheet/regex/pcre"},"(PCRE) regular expressions"),". They are expected to use named groups, the names of which correspond with the names of ",(0,s.kt)("a",{href:"/tev2-specifications/docs/terms/moustache-variable",title:"Moustache Variable: a placeholder in the form of a 'moustache' tag, e.g. ```, within some text. They are used, e.g., by the TRRT, where they get their values from an Interpreter, and where they are used in a selected Converter for the purpose of replacing TermRefs with Renderable Refs. See also https://mustache.github.io/mustache.5.html"},"moustache variables")," for which they provide the values."))}l.isMDXComponent=!0}}]);