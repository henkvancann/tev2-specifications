"use strict";(self.webpackChunktev2_specifications=self.webpackChunktev2_specifications||[]).push([[7523],{3905:function(e,t,o){o.d(t,{Zo:function(){return h},kt:function(){return m}});var i=o(7294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function s(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,i)}return o}function n(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?s(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):s(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function r(e,t){if(null==e)return{};var o,i,a=function(e,t){if(null==e)return{};var o,i,a={},s=Object.keys(e);for(i=0;i<s.length;i++)o=s[i],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(i=0;i<s.length;i++)o=s[i],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var c=i.createContext({}),l=function(e){var t=i.useContext(c),o=t;return e&&(o="function"==typeof e?e(t):n(n({},t),e)),o},h=function(e){var t=l(e.components);return i.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var o=e.components,a=e.mdxType,s=e.originalType,c=e.parentName,h=r(e,["components","mdxType","originalType","parentName"]),d=l(o),m=a,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||s;return o?i.createElement(f,n(n({ref:t},h),{},{components:o})):i.createElement(f,n({ref:t},h))}));function m(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=o.length,n=new Array(s);n[0]=d;var r={};for(var c in t)hasOwnProperty.call(t,c)&&(r[c]=t[c]);r.originalType=e,r.mdxType="string"==typeof e?e:a,n[1]=r;for(var l=2;l<s;l++)n[l]=o[l];return i.createElement.apply(null,n)}return i.createElement.apply(null,o)}d.displayName="MDXCreateElement"},2219:function(e,t,o){o.r(t),o.d(t,{assets:function(){return h},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return r},metadata:function(){return l},toc:function(){return p}});var i=o(7462),a=o(3366),s=(o(7294),o(3905)),n=(o(4996),["components"]),r={id:"mrgt",sidebar_label:"MR Glossary Generation",date:20231006},c="Machine Readable Glossary Generation Tool",l={unversionedId:"spec-tools/mrgt",id:"spec-tools/mrgt",title:"Machine Readable Glossary Generation Tool",description:"The Machine Readable Glossary generation Tool (MRGT) generates Machine Readable Glossaries (MRGs) for one specific, or all terminology versions that are curated within a specific scope. MRGs come in a specific, well-defined format. They contain some meta-data, followed by a list of so-called MRG entries, one for every term in its scope, which represent concepts and other semantic units that are known within that scope.",source:"@site/docs/spec-tools/21-mrgt.md",sourceDirName:"spec-tools",slug:"/spec-tools/mrgt",permalink:"/tev2-specifications/docs/spec-tools/mrgt",draft:!1,editUrl:"https://github.com/tno-terminology-design/tev2-specifications/blob/master/docs/spec-tools/21-mrgt.md",tags:[],version:"current",lastUpdatedBy:"Ca5e",lastUpdatedAt:1696607923,formattedLastUpdatedAt:"Oct 6, 2023",sidebarPosition:21,frontMatter:{id:"mrgt",sidebar_label:"MR Glossary Generation",date:20231006},sidebar:"tev2SideBar",previous:{title:"Term Ref Resolution",permalink:"/tev2-specifications/docs/spec-tools/trrt"},next:{title:"HR Glossary Generation (previous version)",permalink:"/tev2-specifications/docs/spec-tools/hrgt-old"}},h={},p=[{value:"Installing the Tool",id:"installing-the-tool",level:2},{value:"Calling the Tool",id:"calling-the-tool",level:2},{value:"Running the Tool",id:"running-the-tool",level:2},{value:"Exceptions, Warnings, and Logging",id:"exceptions",level:2},{value:"Notes",id:"notes",level:2}],d={toc:p};function m(e){var t=e.components,o=(0,a.Z)(e,n);return(0,s.kt)("wrapper",(0,i.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"machine-readable-glossary-generation-tool"},"Machine Readable Glossary Generation Tool"),(0,s.kt)("p",null,"The ",(0,s.kt)("strong",{parentName:"p"},"Machine Readable Glossary generation Tool (",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/spec-tools/21-mrgt",hovertext:"MRGT: a software tool designed to create, manage, and process Machine Readable Glossaries (MRGs), as [specified by TEv2](/docs/spec-tools/mrgt). MRGTs offer features for selecting Terms that are Curated within the Scope it is run in, or from other Scopes.",target:"_self"},"MRGT"),")")," generates Machine Readable Glossaries (",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/mrg",hovertext:"MRG: a Glossary for a particular (version of a) Terminology that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems.",target:"_self"},"MRGs"),") for one specific, or all ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/terminology",hovertext:"Terminology: a set of Terms that are used within a single Scope to refer to Concepts and other Semantic Units of a single Party (e.g. a Community), enabling Parties to reason and communicate ideas they have about one or more specific topics.",target:"_self"},"terminology")," versions that are ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/curate",hovertext:"Curate: to select, organize, and present Terms, Definitions, and other, related content in a thoughtful and purposeful manner to establish shared understanding among a Community working together on a particular set of objectives.",target:"_self"},"curated")," within a specific ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/scope",hovertext:"Scope: the extent of the Terms, Definitions and other documentation that a Community (which we call the Owner of the Scope) needs to express, communicate and validate its Knowledge as relevant to achieving a specific subset of its Objectives.",target:"_self"},"scope"),". ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/mrg",hovertext:"MRG: a Glossary for a particular (version of a) Terminology that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems.",target:"_self"},"MRGs")," come in a specific, well-defined ",(0,s.kt)("a",{parentName:"p",href:"/docs/spec-files/mrg"},"format"),". They contain some meta-data, followed by a list of so-called ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/mrg-entry",hovertext:"MRG Entry: A machine-readable (and interpretable) artifact that contains (pointers to) data and meta-data about a particular  Semantic Unit, such as the associated Term(s), its Definition, etc., to make it easy for IT-tools to create, e.g. documentation, Glossaries, Dictionaries, whitepapers, etc. that uses such Terms (Definitions, etc.).",target:"_self"},"MRG entries"),", one for every ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/term",hovertext:"Term: a word or phrase (i.e.: text) that is used to represent (Identify) a specific Semantic Unit (in some Scope).",target:"_self"},"term")," in its ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/scope",hovertext:"Scope: the extent of the Terms, Definitions and other documentation that a Community (which we call the Owner of the Scope) needs to express, communicate and validate its Knowledge as relevant to achieving a specific subset of its Objectives.",target:"_self"},"scope"),", which represent ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/concept",hovertext:"Concept: a Semantic Unit that captures the ideas/thoughts behind a classification of Entities (what makes Entities in that class 'the same').",target:"_self"},"concepts")," and other ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/semantic-unit",hovertext:"a basic building block of meaning or representation that exists within the 'mind' of a party, e.g., a concept, relation, or property. Parties use terms (words/phrases) to refer to these intangible building blocks.",target:"_self"},"semantic units")," that are known within that ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/scope",hovertext:"Scope: the extent of the Terms, Definitions and other documentation that a Community (which we call the Owner of the Scope) needs to express, communicate and validate its Knowledge as relevant to achieving a specific subset of its Objectives.",target:"_self"},"scope"),"."),(0,s.kt)("p",null,"The (newly generated) ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/mrg",hovertext:"MRG: a Glossary for a particular (version of a) Terminology that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems.",target:"_self"},"MRG(s)")," are meant to be processed by the other tools in the ",(0,s.kt)("a",{parentName:"p",href:"/docs-toolbox"},"toolbox"),", regardless of whether such tools are called from within the context of another ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/scope",hovertext:"Scope: the extent of the Terms, Definitions and other documentation that a Community (which we call the Owner of the Scope) needs to express, communicate and validate its Knowledge as relevant to achieving a specific subset of its Objectives.",target:"_self"},"scope"),". As they contain every ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/term",hovertext:"Term: a word or phrase (i.e.: text) that is used to represent (Identify) a specific Semantic Unit (in some Scope).",target:"_self"},"term")," that is used in the ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/scope",hovertext:"Scope: the extent of the Terms, Definitions and other documentation that a Community (which we call the Owner of the Scope) needs to express, communicate and validate its Knowledge as relevant to achieving a specific subset of its Objectives.",target:"_self"},"scope"),", and include all the relevant meta-data, an ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/mrg",hovertext:"MRG: a Glossary for a particular (version of a) Terminology that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems.",target:"_self"},"MRG")," serves as the single, authoritative source of that (version of the) ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/scope",hovertext:"Scope: the extent of the Terms, Definitions and other documentation that a Community (which we call the Owner of the Scope) needs to express, communicate and validate its Knowledge as relevant to achieving a specific subset of its Objectives.",target:"_self"},"scope's")," ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/terminology",hovertext:"Terminology: a set of Terms that are used within a single Scope to refer to Concepts and other Semantic Units of a single Party (e.g. a Community), enabling Parties to reason and communicate ideas they have about one or more specific topics.",target:"_self"},"terminology"),"."),(0,s.kt)("p",null,"There is currently one implementation of the tool (but not yet fully available), which will be built similar to the ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/spec-tools/13-trrt",hovertext:"TermRef Rendering Tool: a TEv2 Tool that is designed to facilitate the visualization and rendering of TermRefs.",target:"_self"},"TRRT")," and ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/spec-tools/12-mrg-importer",hovertext:"MRG Importer: is a tool in the TEv2 toolbox that is run within a particular Scope for the purpose of obtaining MRGs from other Scopes, as specified in the Scope's SAF, and putting them in the Scope's Glossarydir.",target:"_self"},"MRG Importer"),". ",(0,s.kt)("sup",{parentName:"p",id:"fnref-previous"},(0,s.kt)("a",{parentName:"sup",href:"#fn-previous",className:"footnote-ref"},"previous"))),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"the repo is ",(0,s.kt)("a",{parentName:"li",href:"https://github.com/tno-terminology-design/mrgt"},"here"),"."),(0,s.kt)("li",{parentName:"ul"},"the documentation is ","[",(0,s.kt)("mark",null,"provided in this web page"),"]",".")),(0,s.kt)("h2",{id:"installing-the-tool"},"Installing the Tool"),(0,s.kt)("p",null,"The tool can be installed from the command line and made globally available by executing"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"npm install tno-terminology-design/mrgt -g\n")),(0,s.kt)("h2",{id:"calling-the-tool"},"Calling the Tool"),(0,s.kt)("p",null,"The behavior of the ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/spec-tools/21-mrgt",hovertext:"MRGT: a software tool designed to create, manage, and process Machine Readable Glossaries (MRGs), as [specified by TEv2](/docs/spec-tools/mrgt). MRGTs offer features for selecting Terms that are Curated within the Scope it is run in, or from other Scopes.",target:"_self"},"MRGT")," can be configured per call e.g. by a configuration file and/or command-line parameters. The command-line syntax is as follows:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"mrgt [ <paramlist> ]\n")),(0,s.kt)("p",null,"where:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"<paramlist>")," (optional) is a list of key-value pairs")),(0,s.kt)("details",null,(0,s.kt)("summary",null,"Legend"),(0,s.kt)("p",null,"The columns in the following table are defined as follows:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"strong"},"Key"))," is the text to be used as a key."),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"strong"},"Value"))," represents the kind of value to be used."),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"strong"},"Req'd"))," specifies whether (",(0,s.kt)("inlineCode",{parentName:"li"},"Y"),") or not (",(0,s.kt)("inlineCode",{parentName:"li"},"n"),") the field is required to be present when the tool is being called. If required, it MUST either be present in the configuration file, or as a command-line parameter."),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"strong"},"Description"))," specifies the meaning of the ",(0,s.kt)("inlineCode",{parentName:"li"},"Value")," field, and other things you may need to know, e.g. why it is needed, a required syntax, etc."))),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:"left"},"Key"),(0,s.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,s.kt)("th",{parentName:"tr",align:"center"},"Req'd"),(0,s.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"config")),(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"<path>")),(0,s.kt)("td",{parentName:"tr",align:"center"},"n"),(0,s.kt)("td",{parentName:"tr",align:"left"},"Path (including the filename) of the tool's (YAML) configuration file. This file contains the default key-value pairs to be used. Allowed keys (and the associated values) are documented in this table. Command-line arguments override key-value pairs specified in the configuration file. This parameter MUST NOT appear in the configuration file itself.")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"scopedir")),(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"<path>")),(0,s.kt)("td",{parentName:"tr",align:"center"},"Y"),(0,s.kt)("td",{parentName:"tr",align:"left"},"Path of the ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/scopedir",hovertext:"Scopedir: a directory in a computer file system that contains all files that are either being Curated within a particular Scope, or generated to serve some purpose within that Scope.",target:"_self"},"scope directory")," from which the tool is called. It MUST contain the ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/saf",hovertext:"SAF: a YAML file that contains essential data about a particular scope, such as the locations of the scope's curated texts, glossaries, and the specifications of the curated terminologies. The SAF is located in the so-called scopedir.",target:"_self"},"SAF")," for that ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/scope",hovertext:"Scope: the extent of the Terms, Definitions and other documentation that a Community (which we call the Owner of the Scope) needs to express, communicate and validate its Knowledge as relevant to achieving a specific subset of its Objectives.",target:"_self"},"scope"),", which we will refer to as the 'current scope' for the ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/spec-tools/12-mrg-importer",hovertext:"MRG Importer: is a tool in the TEv2 toolbox that is run within a particular Scope for the purpose of obtaining MRGs from other Scopes, as specified in the Scope's SAF, and putting them in the Scope's Glossarydir.",target:"_self"},"MRG importer"),".")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"vsntag")),(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"<vsntag>")),(0,s.kt)("td",{parentName:"tr",align:"center"},"n"),(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/versiontag",hovertext:"Versiontag: a Tag that is used to Identify a specific version of a Terminology from within a specific Scope.",target:"_self"},"versiontag")," for which the ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/mrg",hovertext:"MRG: a Glossary for a particular (version of a) Terminology that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems.",target:"_self"},"MRG")," needs to be (re)generated. When omitted, an ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/mrg",hovertext:"MRG: a Glossary for a particular (version of a) Terminology that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems.",target:"_self"},"MRG")," will be generated for every version of the ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/terminology",hovertext:"Terminology: a set of Terms that are used within a single Scope to refer to Concepts and other Semantic Units of a single Party (e.g. a Community), enabling Parties to reason and communicate ideas they have about one or more specific topics.",target:"_self"},"terminology")," that is specified in the ",(0,s.kt)("a",{parentName:"td",href:"/docs/spec-files/saf#versions"},(0,s.kt)("inlineCode",{parentName:"a"},"versions")," section")," of the ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/saf",hovertext:"SAF: a YAML file that contains essential data about a particular scope, such as the locations of the scope's curated texts, glossaries, and the specifications of the curated terminologies. The SAF is located in the so-called scopedir.",target:"_self"},"SAF"))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"onNotExist")),(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"<action>")),(0,s.kt)("td",{parentName:"tr",align:"center"},"n"),(0,s.kt)("td",{parentName:"tr",align:"left"},"specifies the action to take in case a ",(0,s.kt)("inlineCode",{parentName:"td"},"vsntag")," was specified, but wasn't found in the ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/saf",hovertext:"SAF: a YAML file that contains essential data about a particular scope, such as the locations of the scope's curated texts, glossaries, and the specifications of the curated terminologies. The SAF is located in the so-called scopedir.",target:"_self"},"SAF"),". Default is ",(0,s.kt)("inlineCode",{parentName:"td"},"'throw'"),".")))),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"<action>")," parameter can take the following values:"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"th"},"<action>")),(0,s.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"'throw'")),(0,s.kt)("td",{parentName:"tr",align:"left"},"an error is thrown (an exception is raised), and processing will stop.")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"'warn'")),(0,s.kt)("td",{parentName:"tr",align:"left"},"a message is displayed (and logged) and processing continues.")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"'log'")),(0,s.kt)("td",{parentName:"tr",align:"left"},"a message is written to a log(file) and processing continues.")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"'ignore'")),(0,s.kt)("td",{parentName:"tr",align:"left"},"processing continues as if nothing happened.")))),(0,s.kt)("h2",{id:"running-the-tool"},"Running the Tool"),(0,s.kt)("p",null,"One run of the ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/spec-tools/21-mrgt",hovertext:"MRGT: a software tool designed to create, manage, and process Machine Readable Glossaries (MRGs), as [specified by TEv2](/docs/spec-tools/mrgt). MRGTs offer features for selecting Terms that are Curated within the Scope it is run in, or from other Scopes.",target:"_self"},"MRGT")," either"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"generates an ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/mrg",hovertext:"MRG: a Glossary for a particular (version of a) Terminology that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems.",target:"_self"},"MRG")," for one specific ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/terminology",hovertext:"Terminology: a set of Terms that are used within a single Scope to refer to Concepts and other Semantic Units of a single Party (e.g. a Community), enabling Parties to reason and communicate ideas they have about one or more specific topics.",target:"_self"},"terminology")," version within the current scope (which is the case when the ",(0,s.kt)("inlineCode",{parentName:"li"},"version")," parameter was specified), or it"),(0,s.kt)("li",{parentName:"ul"},"generates multiple ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/mrg",hovertext:"MRG: a Glossary for a particular (version of a) Terminology that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems.",target:"_self"},"MRGs"),", i.e., one for every version of the ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/terminology",hovertext:"Terminology: a set of Terms that are used within a single Scope to refer to Concepts and other Semantic Units of a single Party (e.g. a Community), enabling Parties to reason and communicate ideas they have about one or more specific topics.",target:"_self"},"terminology")," that is ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/curate",hovertext:"Curate: to select, organize, and present Terms, Definitions, and other, related content in a thoughtful and purposeful manner to establish shared understanding among a Community working together on a particular set of objectives.",target:"_self"},"curated")," within the current scope (which is the case when the ",(0,s.kt)("inlineCode",{parentName:"li"},"version")," parameter is omitted).")),(0,s.kt)("p",null,"Running the tool comprises the following phases:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"In the first phase, a provisional ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/mrg",hovertext:"MRG: a Glossary for a particular (version of a) Terminology that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems.",target:"_self"},"MRG")," is created for all ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/terminology",hovertext:"Terminology: a set of Terms that are used within a single Scope to refer to Concepts and other Semantic Units of a single Party (e.g. a Community), enabling Parties to reason and communicate ideas they have about one or more specific topics.",target:"_self"},"terminology")," versions that are to be created. Each ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/mrg",hovertext:"MRG: a Glossary for a particular (version of a) Terminology that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems.",target:"_self"},"MRG")," contains a provisional ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/mrg-entry",hovertext:"MRG Entry: A machine-readable (and interpretable) artifact that contains (pointers to) data and meta-data about a particular  Semantic Unit, such as the associated Term(s), its Definition, etc., to make it easy for IT-tools to create, e.g. documentation, Glossaries, Dictionaries, whitepapers, etc. that uses such Terms (Definitions, etc.).",target:"_self"},"MRG entry")," for every ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/term",hovertext:"Term: a word or phrase (i.e.: text) that is used to represent (Identify) a specific Semantic Unit (in some Scope).",target:"_self"},"term")," contained in its (version of the) ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/terminology",hovertext:"Terminology: a set of Terms that are used within a single Scope to refer to Concepts and other Semantic Units of a single Party (e.g. a Community), enabling Parties to reason and communicate ideas they have about one or more specific topics.",target:"_self"},"terminology"),". This provisional ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/mrg-entry",hovertext:"MRG Entry: A machine-readable (and interpretable) artifact that contains (pointers to) data and meta-data about a particular  Semantic Unit, such as the associated Term(s), its Definition, etc., to make it easy for IT-tools to create, e.g. documentation, Glossaries, Dictionaries, whitepapers, etc. that uses such Terms (Definitions, etc.).",target:"_self"},"MRG entry")," either contains ",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"all fields in the ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/header",hovertext:"Header (of a Curated Text): the part at the beginning of that curated text, that starts with a line that (only) contains three subsequent '-'characters, and that ends with a second occurrance of such a line.",target:"_self"},"header")," of the ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/curated-text",hovertext:"Curated Text: a text that documents a Concept or other Semantic Unit of a specific Community or other Party, and is located within a Scope that is owned by that Community/Party.",target:"_self"},"curated text")," that documents its ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/term",hovertext:"Term: a word or phrase (i.e.: text) that is used to represent (Identify) a specific Semantic Unit (in some Scope).",target:"_self"},"term"),", or "),(0,s.kt)("li",{parentName:"ul"},"all fields in the ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/mrg-entry",hovertext:"MRG Entry: A machine-readable (and interpretable) artifact that contains (pointers to) data and meta-data about a particular  Semantic Unit, such as the associated Term(s), its Definition, etc., to make it easy for IT-tools to create, e.g. documentation, Glossaries, Dictionaries, whitepapers, etc. that uses such Terms (Definitions, etc.).",target:"_self"},"MRG entry")," that comes from another ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/mrg",hovertext:"MRG: a Glossary for a particular (version of a) Terminology that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems.",target:"_self"},"MRG")," (typically from another ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/scope",hovertext:"Scope: the extent of the Terms, Definitions and other documentation that a Community (which we call the Owner of the Scope) needs to express, communicate and validate its Knowledge as relevant to achieving a specific subset of its Objectives.",target:"_self"},"scope"),"). How this works precisely is specified in the ",(0,s.kt)("a",{parentName:"li",href:"/docs/spec-syntax/mrg-term-selection-syntax"},"Term Selection Instruction syntax"),".",(0,s.kt)("br",null),"\nNote that in case the ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/mrg-entry",hovertext:"MRG Entry: A machine-readable (and interpretable) artifact that contains (pointers to) data and meta-data about a particular  Semantic Unit, such as the associated Term(s), its Definition, etc., to make it easy for IT-tools to create, e.g. documentation, Glossaries, Dictionaries, whitepapers, etc. that uses such Terms (Definitions, etc.).",target:"_self"},"MRG entry")," is a copy of another ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/mrg-entry",hovertext:"MRG Entry: A machine-readable (and interpretable) artifact that contains (pointers to) data and meta-data about a particular  Semantic Unit, such as the associated Term(s), its Definition, etc., to make it easy for IT-tools to create, e.g. documentation, Glossaries, Dictionaries, whitepapers, etc. that uses such Terms (Definitions, etc.).",target:"_self"},"MRG entry"),", the ",(0,s.kt)("inlineCode",{parentName:"li"},"vsntag")," ",(0,s.kt)("a",{parentName:"li",href:"/docs/spec-files/mrg#mrg-entries"},"field")," of that ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/mrg-entry",hovertext:"MRG Entry: A machine-readable (and interpretable) artifact that contains (pointers to) data and meta-data about a particular  Semantic Unit, such as the associated Term(s), its Definition, etc., to make it easy for IT-tools to create, e.g. documentation, Glossaries, Dictionaries, whitepapers, etc. that uses such Terms (Definitions, etc.).",target:"_self"},"MRG entry")," must be given the value of the ",(0,s.kt)("inlineCode",{parentName:"li"},"vsntag")," field that is found in the ",(0,s.kt)("a",{parentName:"li",href:"/docs/spec-files/mrg#mrg-terminology"},"'terminology' section")," of the ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/mrg",hovertext:"MRG: a Glossary for a particular (version of a) Terminology that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems.",target:"_self"},"MRG")," from which ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/mrg-entry",hovertext:"MRG Entry: A machine-readable (and interpretable) artifact that contains (pointers to) data and meta-data about a particular  Semantic Unit, such as the associated Term(s), its Definition, etc., to make it easy for IT-tools to create, e.g. documentation, Glossaries, Dictionaries, whitepapers, etc. that uses such Terms (Definitions, etc.).",target:"_self"},"MRG entry")," contents was copied.")))),(0,s.kt)("h2",{id:"exceptions"},"Exceptions, Warnings, and Logging"),(0,s.kt)("admonition",{title:"Editor's note",type:"info"},(0,s.kt)("p",{parentName:"admonition"},"This section needs to be reviewed/revised so as to enable a consistent way of error checking and logging, similar to what is done in the TRRT")),(0,s.kt)("p",null,"The general principle is that the ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/spec-tools/21-mrgt",hovertext:"MRGT: a software tool designed to create, manage, and process Machine Readable Glossaries (MRGs), as [specified by TEv2](/docs/spec-tools/mrgt). MRGTs offer features for selecting Terms that are Curated within the Scope it is run in, or from other Scopes.",target:"_self"},"MRGT")," helps its users to do their jobs. This means that errors that terminate the processing are limited to the max, that warnings (perhaps at different 'levels' of detail/severity) are given output whenever possible (yet may be limited by command-line options), and that texts are tailored for the envisaged users of the tool."),(0,s.kt)("p",null,"The ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/spec-tools/21-mrgt",hovertext:"MRGT: a software tool designed to create, manage, and process Machine Readable Glossaries (MRGs), as [specified by TEv2](/docs/spec-tools/mrgt). MRGTs offer features for selecting Terms that are Curated within the Scope it is run in, or from other Scopes.",target:"_self"},"MRGT")," logs conditions that prevent it from properly:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"obtaining the ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/scopedir",hovertext:"Scopedir: a directory in a computer file system that contains all files that are either being Curated within a particular Scope, or generated to serve some purpose within that Scope.",target:"_self"},"scopedir")," from a ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/scopetag",hovertext:"Scopetag: a Tag that is used to Identify Scopes from within a specific Scope",target:"_self"},"scopetag"),";"),(0,s.kt)("li",{parentName:"ul"},"parsing a ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/curated-text",hovertext:"Curated Text: a text that documents a Concept or other Semantic Unit of a specific Community or other Party, and is located within a Scope that is owned by that Community/Party.",target:"_self"},"curated text")," (e.g. because it is not in the expected format);"),(0,s.kt)("li",{parentName:"ul"},"resolving ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/term",hovertext:"Term: a word or phrase (i.e.: text) that is used to represent (Identify) a specific Semantic Unit (in some Scope).",target:"_self"},"terms"),", ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/scopetag",hovertext:"Scopetag: a Tag that is used to Identify Scopes from within a specific Scope",target:"_self"},"scope tags"),", ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/grouptag",hovertext:"Grouptag: a Tag that is used to group Terms within a specific Scope.",target:"_self"},"group tags"),", or ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/versiontag",hovertext:"Versiontag: a Tag that is used to Identify a specific version of a Terminology from within a specific Scope.",target:"_self"},"version tags"),";"),(0,s.kt)("li",{parentName:"ul"},"writing the output (e.g. because it has no write-permission for the designated location);"),(0,s.kt)("li",{parentName:"ul"},"etc.;")),(0,s.kt)("p",null,"Also, the ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/spec-tools/21-mrgt",hovertext:"MRGT: a software tool designed to create, manage, and process Machine Readable Glossaries (MRGs), as [specified by TEv2](/docs/spec-tools/mrgt). MRGTs offer features for selecting Terms that are Curated within the Scope it is run in, or from other Scopes.",target:"_self"},"MRGT")," provides suggestions that help tool-operators (",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/curator",hovertext:"Curator: a person responsible for curating, managing, and maintaining the Terminologies, to ensure shared understanding among a Community working together on a particular set of objectives.",target:"_self"},"curators"),") to not only identify, but also fix any problems."),(0,s.kt)("p",null,"The ",(0,s.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/spec-tools/21-mrgt",hovertext:"MRGT: a software tool designed to create, manage, and process Machine Readable Glossaries (MRGs), as [specified by TEv2](/docs/spec-tools/mrgt). MRGTs offer features for selecting Terms that are Curated within the Scope it is run in, or from other Scopes.",target:"_self"},"MRGT")," comes with documentation that enables developers to ascertain its correct functioning (e.g. by using a test set of files, test scripts that exercise its parameters, etc.), and also enables them to deploy the tool in a git repo and author/modify CI-pipes to use that deployment."),(0,s.kt)("h2",{id:"notes"},"Notes"),(0,s.kt)("div",{className:"footnotes"},(0,s.kt)("hr",{parentName:"div"}),(0,s.kt)("ol",{parentName:"div"},(0,s.kt)("li",{parentName:"ol",id:"fn-previous"},"An older (JAVA) implementation exists, but is not compatible with the current specifications:",(0,s.kt)("br",null),"- the repo is ",(0,s.kt)("a",{parentName:"li",href:"https://github.com/trustoverip/ctwg-toolkit-mrg/"},"here"),(0,s.kt)("br",null),"- the documentation is ",(0,s.kt)("a",{parentName:"li",href:"https://github.com/trustoverip/ctwg-toolkit-mrg#readme"},"here"),(0,s.kt)("br",null),"- the (deprecated) specifications for this tool are ",(0,s.kt)("a",{parentName:"li",href:"https://essif-lab.github.io/framework/docs/spec-tools/mrgt"},"here"),(0,s.kt)("a",{parentName:"li",href:"#fnref-previous",className:"footnote-backref"},"\u21a9")))))}m.isMDXComponent=!0}}]);