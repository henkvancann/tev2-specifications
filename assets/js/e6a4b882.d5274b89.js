"use strict";(self.webpackChunktev2_specifications=self.webpackChunktev2_specifications||[]).push([[7211],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return h}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),l=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=l(r),h=n,f=m["".concat(c,".").concat(h)]||m[h]||p[h]||o;return r?a.createElement(f,i(i({ref:t},u),{},{components:r})):a.createElement(f,i({ref:t},u))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9624:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return p}});var a=r(7462),n=r(3366),o=(r(7294),r(3905)),i=["components"],s={id:"moustache-variable",term:"moustache-variable",termType:"concept",isa:null,glossaryTerm:"Moustache Variable",glossaryText:"a placeholder in the form of a 'moustache' tag, e.g. `{{variable_name}}``, within some text. They are used, e.g., by the [TRRT](@), where they get their values from an [interpreter](@), and where they are used in a selected [converter](@) for the purpose of replacing [TermRefs](@) with [renderable refs](@).",hoverText:"Moustache Variable: {(noRef {glossaryText})}",synonymOf:null,grouptags:null,formPhrases:"moustache-variable{ss}",status:"proposed",created:new Date("2023-07-31T00:00:00.000Z"),updated:new Date("2023-07-31T00:00:00.000Z"),contributors:"RieksJ",attribution:"[TNO Terminology Design](https://tno-terminology-design.github.io/tev2-specifications/docs)",originalLicense:"[CC BY-SA 4.0](http://creativecommons.org/licenses/by-sa/4.0/?ref=chooser-v1)"},c="Moustache Variable",l={unversionedId:"terms/moustache-variable",id:"terms/moustache-variable",title:"Moustache Variable",description:"A moustache variable is a placeholder in the form of a 'moustache' tag, e.g. {}`, within some text. They are used, e.g., by the TRRT, where they get their values from an interpreter, and where they are used in a selected converter for the purpose of replacing TermRefs with renderable refs.",source:"@site/docs/terms/moustache-variable.md",sourceDirName:"terms",slug:"/terms/moustache-variable",permalink:"/tev2-specifications/docs/terms/moustache-variable",draft:!1,editUrl:"https://github.com/tno-terminology-design/tev2-specifications/blob/master/docs/terms/moustache-variable.md",tags:[],version:"current",lastUpdatedBy:"Rieks",lastUpdatedAt:1691750336,formattedLastUpdatedAt:"Aug 11, 2023",frontMatter:{id:"moustache-variable",term:"moustache-variable",termType:"concept",isa:null,glossaryTerm:"Moustache Variable",glossaryText:"a placeholder in the form of a 'moustache' tag, e.g. `{{variable_name}}``, within some text. They are used, e.g., by the [TRRT](@), where they get their values from an [interpreter](@), and where they are used in a selected [converter](@) for the purpose of replacing [TermRefs](@) with [renderable refs](@).",hoverText:"Moustache Variable: {(noRef {glossaryText})}",synonymOf:null,grouptags:null,formPhrases:"moustache-variable{ss}",status:"proposed",created:"2023-07-31T00:00:00.000Z",updated:"2023-07-31T00:00:00.000Z",contributors:"RieksJ",attribution:"[TNO Terminology Design](https://tno-terminology-design.github.io/tev2-specifications/docs)",originalLicense:"[CC BY-SA 4.0](http://creativecommons.org/licenses/by-sa/4.0/?ref=chooser-v1)"},sidebar:"tev2SideBar",previous:{title:"Mental Model",permalink:"/tev2-specifications/docs/terms/mental-model"},next:{title:"Machine Readable Dictionary",permalink:"/tev2-specifications/docs/terms/mrd"}},u={},p=[{value:"Notes",id:"notes",level:2}],m={toc:p};function h(e){var t=e.components,r=(0,n.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"moustache-variable"},"Moustache Variable"),(0,o.kt)("p",null,"A ",(0,o.kt)("strong",{parentName:"p"},"moustache variable")," is a placeholder in the form of a 'moustache' tag, e.g. `{{variable_name}}``, within some text. They are used, e.g., by the ",(0,o.kt)("a",{parentName:"p",href:"@"},"TRRT"),", where they get their values from an ",(0,o.kt)("a",{parentName:"p",href:"@"},"interpreter"),", and where they are used in a selected ",(0,o.kt)("a",{parentName:"p",href:"@"},"converter")," for the purpose of replacing ",(0,o.kt)("a",{parentName:"p",href:"@"},"TermRefs")," with ",(0,o.kt)("a",{parentName:"p",href:"@"},"renderable refs"),"."),(0,o.kt)("h2",{id:"notes"},"Notes"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Moustache variables serve as dynamic placeholders that allow flexible text transformation based on extracted information."),(0,o.kt)("li",{parentName:"ul"},"The use of moustache variables enables separation of concerns between data extraction and text conversion.")))}h.isMDXComponent=!0}}]);