"use strict";(self.webpackChunktev2_specifications=self.webpackChunktev2_specifications||[]).push([[9243],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>m});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),p=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=p(a),m=n,h=u["".concat(l,".").concat(m)]||u[m]||c[m]||s;return a?r.createElement(h,o(o({ref:t},d),{},{components:a})):r.createElement(h,o({ref:t},d))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,o=new Array(s);o[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var p=2;p<s;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>o});var r=a(7294),n=a(6010);const s="tabItem_Ymn6";function o(e){let{children:t,hidden:a,className:o}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.Z)(s,o),hidden:a},t)}},4866:(e,t,a)=>{a.d(t,{Z:()=>w});var r=a(3117),n=a(7294),s=a(6010),o=a(2466),i=a(6775),l=a(1980),p=a(7392),d=a(12);function c(e){return function(e){return n.Children.map(e,(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:r,default:n}}=e;return{value:t,label:a,attributes:r,default:n}}))}function u(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??c(a);return function(e){const t=(0,p.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function m(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:a}=e;const r=(0,i.k6)(),s=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,l._X)(s),(0,n.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(r.location.search);t.set(s,e),r.replace({...r.location,search:t.toString()})}),[s,r])]}function f(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,s=u(e),[o,i]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=a.find((e=>e.default))??a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:s}))),[l,p]=h({queryString:a,groupId:r}),[c,f]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,s]=(0,d.Nk)(a);return[r,(0,n.useCallback)((e=>{a&&s.set(e)}),[a,s])]}({groupId:r}),g=(()=>{const e=l??c;return m({value:e,tabValues:s})?e:null})();(0,n.useLayoutEffect)((()=>{g&&i(g)}),[g]);return{selectedValue:o,selectValue:(0,n.useCallback)((e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);i(e),p(e),f(e)}),[p,f,s]),tabValues:s}}var g=a(2389);const k="tabList__CuJ",b="tabItem_LNqP";function y(e){let{className:t,block:a,selectedValue:i,selectValue:l,tabValues:p}=e;const d=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.o5)(),u=e=>{const t=e.currentTarget,a=d.indexOf(t),r=p[a].value;r!==i&&(c(t),l(r))},m=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const a=d.indexOf(e.currentTarget)+1;t=d[a]??d[0];break}case"ArrowLeft":{const a=d.indexOf(e.currentTarget)-1;t=d[a]??d[d.length-1];break}}t?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":a},t)},p.map((e=>{let{value:t,label:a,attributes:o}=e;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>d.push(e),onKeyDown:m,onClick:u},o,{className:(0,s.Z)("tabs__item",b,o?.className,{"tabs__item--active":i===t})}),a??t)})))}function v(e){let{lazy:t,children:a,selectedValue:r}=e;const s=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===r));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},s.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function N(e){const t=f(e);return n.createElement("div",{className:(0,s.Z)("tabs-container",k)},n.createElement(y,(0,r.Z)({},e,t)),n.createElement(v,(0,r.Z)({},e,t)))}function w(e){const t=(0,g.Z)();return n.createElement(N,(0,r.Z)({key:String(t)},e))}},1214:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var r=a(3117),n=(a(7294),a(3905)),s=(a(4996),a(4866)),o=a(5162);const i={id:"mrg-ref-syntax",sidebar_label:"MRG References",date:20231029},l="MRG References - Syntax",p={unversionedId:"spec-syntax/mrg-ref-syntax",id:"spec-syntax/mrg-ref-syntax",title:"MRG References - Syntax",description:"MRG References (or MRGRefs for short) are textual constructs that refer to a specific terminology within a particular scope. The purpose of an MRG Reference is that it can be converted (by the HRGT) into a text that contains a human readable glossary of the terms contained in that terminology.",source:"@site/docs/spec-syntax/41-mrg-ref-syntax.md",sourceDirName:"spec-syntax",slug:"/spec-syntax/mrg-ref-syntax",permalink:"/tev2-specifications/docs/spec-syntax/mrg-ref-syntax",draft:!1,editUrl:"https://github.com/tno-terminology-design/tev2-specifications/blob/master/docs/spec-syntax/41-mrg-ref-syntax.md",tags:[],version:"current",lastUpdatedBy:"Rieks",lastUpdatedAt:1701681375,formattedLastUpdatedAt:"Dec 4, 2023",sidebarPosition:41,frontMatter:{id:"mrg-ref-syntax",sidebar_label:"MRG References",date:20231029},sidebar:"tev2SideBar",previous:{title:"Terminology Identifiers",permalink:"/tev2-specifications/docs/spec-syntax/terminology-identifier-syntax"},next:{title:"Form Phrases",permalink:"/tev2-specifications/docs/spec-syntax/form-phrase-syntax"}},d={},c=[{value:"Default MRGRef Syntax",id:"default-mrgref-syntax",level:2},{value:"Predefined MRGRef Interpreters",id:"predefined-mrgref-interpreters",level:2},{value:"Predefined MRGRef Converters",id:"predefined-mrgref-converters",level:2},{value:"Converter for Markdown Tables",id:"converter-for-markdown-tables",level:3},{value:"Converter for eSSIF-Lab Glossary look-alikes",id:"converter-for-essif-lab-glossary-look-alikes",level:3},{value:"Custom Glossary Converters",id:"custom-glossary-converters",level:2}],u={toc:c};function m(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"mrg-references---syntax"},"MRG References - Syntax"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"@"},"MRG References")," (or ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRGRefs")," for short) are textual constructs that refer to a specific ",(0,n.kt)("a",{parentName:"p",href:"@"},"terminology")," within a particular ",(0,n.kt)("a",{parentName:"p",href:"@"},"scope"),". The purpose of an ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG Reference")," is that it can be converted (by the ",(0,n.kt)("a",{parentName:"p",href:"@"},"HRGT"),") into a text that contains a ",(0,n.kt)("a",{parentName:"p",href:"@"},"human readable glossary")," of the ",(0,n.kt)("a",{parentName:"p",href:"@"},"terms")," contained in that ",(0,n.kt)("a",{parentName:"p",href:"@"},"terminology"),"."),(0,n.kt)("p",null,"The syntax for ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRGRefs")," is not fixed. While there is a default syntax, ",(0,n.kt)("a",{parentName:"p",href:"@"},"curators")," can define their own syntax, and specify that as a command-line parameter or a parameter in the configuration file for appropriate tools, such as the ",(0,n.kt)("a",{parentName:"p",href:"@"},"HRGT"),". If an interpreter is not specified, it defaults to ",(0,n.kt)("inlineCode",{parentName:"p"},"basic"),", the associated syntax of which is specified below. "),(0,n.kt)("h2",{id:"default-mrgref-syntax"},"Default MRGRef Syntax"),(0,n.kt)("p",null,"The default syntax for ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRGRefs")," is as follows:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-markdown"},'{% hrg="<tid>" converter="<converter>" %}\n')),(0,n.kt)("p",null,"where"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"<tid>")," is a ",(0,n.kt)("a",{parentName:"li",href:"@"},"terminology identifier"),", that identifies a ",(0,n.kt)("a",{parentName:"li",href:"@"},"terminology")," (and implies an associated ",(0,n.kt)("a",{parentName:"li",href:"@"},"MRG"),") within the ",(0,n.kt)("a",{parentName:"li",href:"@"},"current scope"),". If empty, or unspecified, it defaults to the default ",(0,n.kt)("a",{parentName:"li",href:"@"},"terminology")," of the ",(0,n.kt)("a",{parentName:"li",href:"@"},"current scope"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},'converter="<converter>')," specifies the converter that is to be used for generating glossary entries. If it isn't specified as part of the ",(0,n.kt)("a",{parentName:"li",href:"@"},"MRGRef"),", it must be specified as a command-line parameter, or as a value in the configuration file that the ",(0,n.kt)("a",{parentName:"li",href:"@"},"HRGT")," uses. "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"<converter>")," is a text that specifies either: ",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"a predefined way in which glossary entries are being formatted (see ",(0,n.kt)("a",{parentName:"li",href:"#predefined-mrgref-converters"},"further down"),"), such as ",(0,n.kt)("inlineCode",{parentName:"li"},"markdowntable")," or ",(0,n.kt)("inlineCode",{parentName:"li"},"essiflab"),";"),(0,n.kt)("li",{parentName:"ul"},"a ",(0,n.kt)("a",{parentName:"li",href:"https://handlebarsjs.com/guide/#what-is-handlebars"},"handlebars expression"),".")))),(0,n.kt)("h2",{id:"predefined-mrgref-interpreters"},"Predefined MRGRef Interpreters"),(0,n.kt)("p",null,"Predefined glossary interpreters have the advantage that they are easy to use. However, it is possible that in particular contexts, they pose problems. For such cases, ",(0,n.kt)("a",{parentName:"p",href:"@"},"curators")," can specify custom formats."),(0,n.kt)("p",null,"The predefined interpreters for detecting ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRGRefs")," are as follows:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"th"},"<interpreter>")),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"basic")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},'{% hrg="<tid>" converter="<converter>" %}'),", where ",(0,n.kt)("inlineCode",{parentName:"td"},'converter="<converter>"')," is optional. This is the default intepreter for ",(0,n.kt)("a",{parentName:"td",href:"@"},"MRGRefs"),".")))),(0,n.kt)("h2",{id:"predefined-mrgref-converters"},"Predefined MRGRef Converters"),(0,n.kt)("p",null,"Predefined glossary layouts have the advantage that they are easy to use, and provide for a (small) range of generally useful layouts. Also, using them would produce acceptable results even in non-standard conditions, e.g., when a ",(0,n.kt)("a",{parentName:"p",href:"@"},"curated text")," does not specify its ",(0,n.kt)("inlineCode",{parentName:"p"},"glossaryTerm")," field. "),(0,n.kt)("p",null,"However, ",(0,n.kt)("a",{parentName:"p",href:"@"},"curators")," can specify other formats. To help them do this, the examples we provide for the predefined formats also show how the same, or similar, results can be achieved by customized specificaitons of the glossary layouts."),(0,n.kt)("p",null,"The predefined converters for glossary generation are:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"th"},"<glossarylayout>")),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"markdowntable")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"@"},"HRG entries")," are generated as a single markdown table row, where the first cell contains the term, and the second its description.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"essiflab")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"@"},"HRG entries")," are generated that are similar to what is shown in the ",(0,n.kt)("a",{parentName:"td",href:"https://essif-lab.github.io/framework/docs/essifLab-glossary"},"essif-lab glossary"),".")))),(0,n.kt)("h3",{id:"converter-for-markdown-tables"},"Converter for Markdown Tables"),(0,n.kt)("p",null,"An ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRGref")," that specifies ",(0,n.kt)("inlineCode",{parentName:"p"},'converter="markdowntable"')," as its glossary layout is appropriate for generating a ",(0,n.kt)("a",{parentName:"p",href:"@"},"glossary")," as a markdown table within a regular markdown file. Suppose that markdown file contains the following text:"),(0,n.kt)(s.Z,{groupId:"converter-specs",defaultValue:"predefined",values:[{label:"Using predefined layout",value:"predefined"},{label:"Simple customized layout",value:"simple"},{label:"Actual implementation",value:"actual"}],mdxType:"Tabs"},(0,n.kt)(o.Z,{value:"predefined",mdxType:"TabItem"},(0,n.kt)("br",null),(0,n.kt)("p",null,"Specifying the ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRGref")," using the predefined glossary layout called ",(0,n.kt)("inlineCode",{parentName:"p"},"markdowntable"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-markdown"},'| Term | Description |\n| :--- | :---------- |\n{% hrg="tev2" converter="markdowntable" %}\n---\n'))),(0,n.kt)(o.Z,{value:"simple",mdxType:"TabItem"},(0,n.kt)("br",null),(0,n.kt)("p",null,"Specifying the ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRGref")," using a ",(0,n.kt)("a",{parentName:"p",href:"https://handlebarsjs.com/guide/#what-is-handlebars"},"handlebars expression"),", as follows:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-markdown"},'| Term | Description |\n| :--- | :---------- |\n{% hrg="tev2" converter="| {{glossaryTerm}} | {{glossaryText}} |\\n" %}\n---\n')),(0,n.kt)("p",null,"Note that this is a simple handlebars expression, that is not very robust against missing variables. See, e.g., the section on ",(0,n.kt)("a",{parentName:"p",href:"#custom-glossary-converters"},"custom glossary converters")," on how to make them more robust, or even better: the documentation on ",(0,n.kt)("a",{parentName:"p",href:"https://handlebarsjs.com/guide/#what-is-handlebars"},"handlebars expressions"),".")),(0,n.kt)(o.Z,{value:"actual",mdxType:"TabItem"},(0,n.kt)("br",null),(0,n.kt)("p",null,"Specifying the ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRGref")," using the ",(0,n.kt)("a",{parentName:"p",href:"https://handlebarsjs.com/guide/#what-is-handlebars"},"handlebars expression")," as it was originally implemented, is done as follows:"),(0,n.kt)("admonition",{title:"Editor's note",type:"warning"},(0,n.kt)("p",{parentName:"admonition"},"@Ca5e: please check that the handlebar expression that is ACTUALLY USED for the ",(0,n.kt)("inlineCode",{parentName:"p"},"essiflab")," converter is specified here below.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-markdown"},'| Term | Description |\n| :--- | :---------- |\n{% hrg="tev2" converter="| {{glossaryTerm}} | {{glossaryText}} |\\n" %}\n---\n')),(0,n.kt)("p",null,"Note that this is a simple handlebars expression, that is not very robust against missing variables. See, e.g., the section on ",(0,n.kt)("a",{parentName:"p",href:"#custom-glossary-converters"},"custom glossary converters")," on how to make them more robust, or even better: the documentation on ",(0,n.kt)("a",{parentName:"p",href:"https://handlebarsjs.com/guide/#what-is-handlebars"},"handlebars expressions"),"."))),(0,n.kt)("hr",null),(0,n.kt)("p",null,"Under the assumption that the ",(0,n.kt)("a",{parentName:"p",href:"@"},"terminology identifier")," ",(0,n.kt)("inlineCode",{parentName:"p"},"tev2")," refers to a ",(0,n.kt)("a",{parentName:"p",href:"@"},"terminology")," (and associated ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG"),") that holds ",(0,n.kt)("a",{parentName:"p",href:"@"},"definitions")," for the ",(0,n.kt)("a",{parentName:"p",href:"@"},"terms")," ",(0,n.kt)("inlineCode",{parentName:"p"},"Glossary"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"Curator")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"Definition"),", the result could e.g., look something like this:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-markdown"},"| Term | Description |\n| :--- | :---------- |\n| Glossary | an alphabetically sorted list of [terms](@) with the (single) meaning it has in (at least) one context. |\n| Curator (of a Scope) | a person responsible for curating, managing, and maintaining the [terminologies](@), to ensure shared understanding among a [community](@) working together on a particular set of objectives. |\n| Definition | the combination of a [term](@) and a descriptive text, where the [term](@) refers to a [concept](@) or other [semantic unit](@), and the descriptive text enables a set of [parties](@) to have the same understanding about that [concept](@). Ideally, the descriptive text is a criterion that such [parties](@) can use to determine what is, and what is not, an instance (or example) of that [concept](@). |\n---\n")),(0,n.kt)("h3",{id:"converter-for-essif-lab-glossary-look-alikes"},"Converter for eSSIF-Lab Glossary look-alikes"),(0,n.kt)("p",null,"An ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRGref")," that specifies ",(0,n.kt)("inlineCode",{parentName:"p"},'converter="essiflab"')," as its glossary layout is appropriate for generating a ",(0,n.kt)("a",{parentName:"p",href:"@"},"glossary")," that is similar to the one used by ",(0,n.kt)("a",{parentName:"p",href:"https://essif-lab.github.io/framework/docs/essifLab-glossary"},"eSSIF-Lab"),". The markdown file that would produce this would be as follows:"),(0,n.kt)(s.Z,{groupId:"converter-specs",defaultValue:"predefined",values:[{label:"Using predefined layout",value:"predefined"},{label:"Simple customized layout",value:"simple"},{label:"Actual implementation",value:"actual"}],mdxType:"Tabs"},(0,n.kt)(o.Z,{value:"predefined",mdxType:"TabItem"},(0,n.kt)("br",null),(0,n.kt)("p",null,"Specifying the ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRGref")," using the predefined glossary layout called ",(0,n.kt)("inlineCode",{parentName:"p"},"essiflab"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-markdown"},'---\n# Docusaurus header fields:\nid: glossary\nsidebar_label: Glossary\n---\n\n# Glossary\n\n{% hrg="tev2" converter="essiflab" %}\n\n---\nHere endeth the glossary.\n'))),(0,n.kt)(o.Z,{value:"simple",mdxType:"TabItem"},(0,n.kt)("br",null),(0,n.kt)("p",null,"Specifying the ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRGref")," using a ",(0,n.kt)("a",{parentName:"p",href:"https://handlebarsjs.com/guide/#what-is-handlebars"},"handlebars expression"),", as follows:"),(0,n.kt)("admonition",{title:"Editor's note",type:"warning"},(0,n.kt)("p",{parentName:"admonition"},"@Ca5e: please check that the SIMPLE converter handlebar expression in the below example sufficiently describes what the ",(0,n.kt)("inlineCode",{parentName:"p"},"essiflab")," layout is about.\nThe actual, more difficult version should be placed in the next chapter (customizing )")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-markdown"},'---\n# Docusaurus header fields:\nid: glossary\nsidebar_label: Glossary\n---\n\n# Glossary\n\n{% hrg="tev2" converter="\\n### [{{#if glossaryTerm}}{{glossaryTerm}}{{else}}{{capFirst term}}{{/if}}]({{localize navurl}})\\n\\n{{#if glossaryText}}{{glossaryText}}{{else}}Error: no glossary text has been specified for this term.{{/if}}\\n" %}\n\n---\nHere endeth the glossary.\n')),(0,n.kt)("p",null,"Note that this is a simple handlebars expression, that is not very robust against missing variables. See, e.g., the section on ",(0,n.kt)("a",{parentName:"p",href:"#custom-glossary-converters"},"custom glossary converters")," on how to make them more robust, or even better: the documentation on ",(0,n.kt)("a",{parentName:"p",href:"https://handlebarsjs.com/guide/#what-is-handlebars"},"handlebars expressions"),".")),(0,n.kt)(o.Z,{value:"actual",mdxType:"TabItem"},(0,n.kt)("br",null),(0,n.kt)("p",null,"Specifying the ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRGref")," using the ",(0,n.kt)("a",{parentName:"p",href:"https://handlebarsjs.com/guide/#what-is-handlebars"},"handlebars expression")," as it was originally implemented, is done as follows:"),(0,n.kt)("admonition",{title:"Editor's note",type:"warning"},(0,n.kt)("p",{parentName:"admonition"},"@Ca5e: please check that the handlebar expression that is ACTUALLY USED for the ",(0,n.kt)("inlineCode",{parentName:"p"},"essiflab")," converter is specified here below.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-markdown"},'---\n# Docusaurus header fields:\nid: glossary\nsidebar_label: Glossary\n---\n\n# Glossary\n\n{% hrg="tev2" converter="\\n## [{{glossaryTerm}}]({{localize navurl}})\\n\\n{{glossaryText}}\\n" %}\n---\nHere endeth the glossary.\n')),(0,n.kt)("p",null,"Note that this is a simple handlebars expression, that is not very robust against missing variables. See, e.g., the section on ",(0,n.kt)("a",{parentName:"p",href:"#custom-glossary-converters"},"custom glossary converters")," on how to make them more robust, or even better: the documentation on ",(0,n.kt)("a",{parentName:"p",href:"https://handlebarsjs.com/guide/#what-is-handlebars"},"handlebars expressions"),"."))),(0,n.kt)("p",null,"Under the assumption that the ",(0,n.kt)("a",{parentName:"p",href:"@"},"terminology identifier")," ",(0,n.kt)("inlineCode",{parentName:"p"},"tev2")," refers to a ",(0,n.kt)("a",{parentName:"p",href:"@"},"terminology")," (and associated ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG"),") that holds ",(0,n.kt)("a",{parentName:"p",href:"@"},"definitions")," for the ",(0,n.kt)("a",{parentName:"p",href:"@"},"terms")," ",(0,n.kt)("inlineCode",{parentName:"p"},"Glossary"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"Curator")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"Definition"),", the result could e.g., look something like this:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-markdown"},"---\n# Docusaurus header fields:\nid: glossary\nsidebar_label: Glossary\n---\n\n# Glossary\n\n## [Glossary](/docs/terms/glossary)\n\nan alphabetically sorted list of [terms](@) with the (single) meaning it has in (at least) one context.\n\n## [Curator (of a Scope)](/docs/terms/curator)\n\na person responsible for curating, managing, and maintaining the [terminologies](@), to ensure shared understanding among a [community](@) working together on a particular set of objectives.\n\n## [Definition](/docs/terms/definition)\n\nthe combination of a [term](@) and a descriptive text, where the [term](@) refers to a [concept](@) or other [semantic unit](@), and the descriptive text enables a set of [parties](@) to have the same understanding about that [concept](@). Ideally, the descriptive text is a criterion that such [parties](@) can use to determine what is, and what is not, an instance (or example) of that [concept](@).\n\n---\nHere endeth the glossary.\n")),(0,n.kt)("h2",{id:"custom-glossary-converters"},"Custom Glossary Converters"),(0,n.kt)("p",null,"When the predefined glossary converters are not appropriate, ",(0,n.kt)("a",{parentName:"p",href:"@"},"curators")," can define their own converter, by specifying them as a ",(0,n.kt)("a",{parentName:"p",href:"https://handlebarsjs.com/guide/#what-is-handlebars"},"handlebars expression"),"."),(0,n.kt)("p",null,"The handlebar expressions can use all fields that exist in ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG entries")," as variables. For example, ",(0,n.kt)("inlineCode",{parentName:"p"},"{{glossaryText}}")," is the variable that contains the text specified in the ",(0,n.kt)("inlineCode",{parentName:"p"},"glossaryText")," field of the ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG entry"),"."),(0,n.kt)("admonition",{title:"Editor's note",type:"info"},(0,n.kt)("p",{parentName:"admonition"},"There may be merit in allowing/enabling handlebar expressions to also use variables that access fields in the MRG headers - see ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/tno-terminology-design/tev2-tools/issues/4"},"tev2-tools/issue #4"))),(0,n.kt)("admonition",{title:"Editor's note",type:"info"},(0,n.kt)("p",{parentName:"admonition"},"@Ca5e: can you write a few examples here, ranging from very simple converters (that have the property of not being very robust against missing values in variables) to complexer ones (that are robust(er))?")))}m.isMDXComponent=!0}}]);