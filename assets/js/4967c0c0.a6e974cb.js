"use strict";(self.webpackChunktev2_specifications=self.webpackChunktev2_specifications||[]).push([[2469],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return m}});var i=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,i,o=function(e,t){if(null==e)return{};var a,i,o={},n=Object.keys(e);for(i=0;i<n.length;i++)a=n[i],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)a=n[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=i.createContext({}),c=function(e){var t=i.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},p=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var a=e.components,o=e.mdxType,n=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),h=c(a),m=o,f=h["".concat(l,".").concat(m)]||h[m]||d[m]||n;return a?i.createElement(f,r(r({ref:t},p),{},{components:a})):i.createElement(f,r({ref:t},p))}));function m(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=a.length,r=new Array(n);r[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,r[1]=s;for(var c=2;c<n;c++)r[c]=a[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,a)}h.displayName="MDXCreateElement"},5162:function(e,t,a){a.d(t,{Z:function(){return r}});var i=a(7294),o=a(6010),n="tabItem_Ymn6";function r(e){var t=e.children,a=e.hidden,r=e.className;return i.createElement("div",{role:"tabpanel",className:(0,o.Z)(n,r),hidden:a},t)}},4866:function(e,t,a){a.d(t,{Z:function(){return w}});var i=a(7462),o=a(7294),n=a(6010),r=a(2466),s=a(6775),l=a(1980),c=a(7392),p=a(12);function d(e){return function(e){var t,a;return null!=(t=null==(a=o.Children.map(e,(function(e){if(!e||(0,o.isValidElement)(e)&&(t=e.props)&&"object"==typeof t&&"value"in t)return e;var t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:a.filter(Boolean))?t:[]}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function h(e){var t=e.values,a=e.children;return(0,o.useMemo)((function(){var e=null!=t?t:d(a);return function(e){var t=(0,c.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,a])}function m(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function f(e){var t=e.queryString,a=void 0!==t&&t,i=e.groupId,n=(0,s.k6)(),r=function(e){var t=e.queryString,a=void 0!==t&&t,i=e.groupId;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=i?i:null}({queryString:a,groupId:i});return[(0,l._X)(r),(0,o.useCallback)((function(e){if(r){var t=new URLSearchParams(n.location.search);t.set(r,e),n.replace(Object.assign({},n.location,{search:t.toString()}))}}),[r,n])]}function u(e){var t,a,i,n,r=e.defaultValue,s=e.queryString,l=void 0!==s&&s,c=e.groupId,d=h(e),u=(0,o.useState)((function(){return function(e){var t,a=e.defaultValue,i=e.tabValues;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!m({value:a,tabValues:i}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+a+'" but none of its children has the corresponding value. Available values are: '+i.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return a}var o=null!=(t=i.find((function(e){return e.default})))?t:i[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:r,tabValues:d})})),g=u[0],v=u[1],k=f({queryString:l,groupId:c}),y=k[0],b=k[1],N=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:c}.groupId),a=(0,p.Nk)(t),i=a[0],n=a[1],[i,(0,o.useCallback)((function(e){t&&n.set(e)}),[t,n])]),w=N[0],T=N[1],x=function(){var e=null!=y?y:w;return m({value:e,tabValues:d})?e:null}();return(0,o.useLayoutEffect)((function(){x&&v(x)}),[x]),{selectedValue:g,selectValue:(0,o.useCallback)((function(e){if(!m({value:e,tabValues:d}))throw new Error("Can't select invalid tab value="+e);v(e),b(e),T(e)}),[b,T,d]),tabValues:d}}var g=a(2389),v="tabList__CuJ",k="tabItem_LNqP";function y(e){var t=e.className,a=e.block,s=e.selectedValue,l=e.selectValue,c=e.tabValues,p=[],d=(0,r.o5)().blockElementScrollPositionUntilNextRender,h=function(e){var t=e.currentTarget,a=p.indexOf(t),i=c[a].value;i!==s&&(d(t),l(i))},m=function(e){var t,a=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":var i,o=p.indexOf(e.currentTarget)+1;a=null!=(i=p[o])?i:p[0];break;case"ArrowLeft":var n,r=p.indexOf(e.currentTarget)-1;a=null!=(n=p[r])?n:p[p.length-1]}null==(t=a)||t.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.Z)("tabs",{"tabs--block":a},t)},c.map((function(e){var t=e.value,a=e.label,r=e.attributes;return o.createElement("li",(0,i.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:function(e){return p.push(e)},onKeyDown:m,onClick:h},r,{className:(0,n.Z)("tabs__item",k,null==r?void 0:r.className,{"tabs__item--active":s===t})}),null!=a?a:t)})))}function b(e){var t=e.lazy,a=e.children,i=e.selectedValue,n=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){var r=n.find((function(e){return e.props.value===i}));return r?(0,o.cloneElement)(r,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},n.map((function(e,t){return(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==i})})))}function N(e){var t=u(e);return o.createElement("div",{className:(0,n.Z)("tabs-container",v)},o.createElement(y,(0,i.Z)({},e,t)),o.createElement(b,(0,i.Z)({},e,t)))}function w(e){var t=(0,g.Z)();return o.createElement(N,(0,i.Z)({key:String(t)},e))}},7326:function(e,t,a){a.r(t),a.d(t,{assets:function(){return h},contentTitle:function(){return p},default:function(){return g},frontMatter:function(){return c},mark:function(){return f},metadata:function(){return d},toc:function(){return m}});var i=a(7462),o=a(3366),n=(a(7294),a(3905)),r=(a(4996),a(4866)),s=a(5162),l=["components"],c={id:"mrg-importer",sidebar_label:"MRG Importer",date:20230731},p="MRG Import Tool",d={unversionedId:"spec-tools/mrg-importer",id:"spec-tools/mrg-importer",title:"MRG Import Tool",description:"text to mark",source:"@site/docs/spec-tools/13-mrg-importer.md",sourceDirName:"spec-tools",slug:"/spec-tools/mrg-importer",permalink:"/tev2-specifications/docs/spec-tools/mrg-importer",draft:!1,editUrl:"https://github.com/tno-terminology-design/tev2-specifications/blob/master/docs/spec-tools/13-mrg-importer.md",tags:[],version:"current",lastUpdatedBy:"Rieks",lastUpdatedAt:1698084607,formattedLastUpdatedAt:"Oct 23, 2023",sidebarPosition:13,frontMatter:{id:"mrg-importer",sidebar_label:"MRG Importer",date:20230731},sidebar:"tev2SideBar",previous:{title:"Term Ref Resolution Tool (TRRT)",permalink:"/tev2-specifications/docs/spec-tools/trrt"},next:{title:"MRG Terminology Construction",permalink:"/tev2-specifications/docs/spec-tools/mrg-terminology-construction"}},h={},m=[{value:"MRG files and symbolic links",id:"mrg-files-and-symbolic-links",level:2},{value:"Installing the Tool",id:"installing-the-tool",level:2},{value:"Calling the Tool",id:"calling-the-tool",level:2},{value:"Processing, Errors and Warnings",id:"processing-errors-and-warnings",level:2},{value:"Deploying the Tool",id:"deploying-the-tool",level:2}],f=function(e){var t=e.children;return(0,n.kt)("span",{style:{color:"black",backgroundColor:"yellow",padding:"0.2rem",borderRadius:"2px"}},t)},u={toc:m,mark:f};function g(e){var t=e.components,a=(0,o.Z)(e,l);return(0,n.kt)("wrapper",(0,i.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"mrg-import-tool"},"MRG Import Tool"),(0,n.kt)("admonition",{title:"Editor's Note",type:"info"},(0,n.kt)("p",{parentName:"admonition"},"This section is still under development. You'll see further editor's notes where issues exist.")),(0,n.kt)("p",null,"The ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/mrg",hovertext:"MRG: a Glossary for a particular (version of a) Terminology that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems."},"MRG")," Import Tool (",(0,n.kt)("a",{href:"/tev2-specifications/docs/spec-tools/mrg-importer",hovertext:"MRG Importer: is a tool in the TEv2 toolbox that is run within a particular Scope for the purpose of obtaining MRGs from other Scopes, as specified in the Scope's SAF, and putting them in the Scope's Glossarydir."},"MRG importer"),")")," ensures that the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/scope",hovertext:"Scope: the extent of the Terms, Definitions and other documentation that a Community (which we call the Owner of the Scope) needs to express, communicate and validate its Knowledge as relevant to achieving a specific subset of its Objectives."},"scope")," within which it is run, obtains a local copy of all ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/mrg",hovertext:"MRG: a Glossary for a particular (version of a) Terminology that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems."},"MRGs")," that are available in the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/scope",hovertext:"Scope: the extent of the Terms, Definitions and other documentation that a Community (which we call the Owner of the Scope) needs to express, communicate and validate its Knowledge as relevant to achieving a specific subset of its Objectives."},"scopes")," that are mentioned in the ",(0,n.kt)("a",{parentName:"p",href:"/docs/spec-files/saf#scopes"},(0,n.kt)("inlineCode",{parentName:"a"},"scopes")," section")," of its ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/saf",hovertext:"SAF: a YAML file that contains essential data about a particular scope, such as the locations of the scope's curated texts, glossaries, and the specifications of the curated terminologies. The SAF is located in the so-called scopedir."},"SAF"),". This makes life easy for various tools, e.g., the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/spec-tools/mrgt",hovertext:"MRGT: a software tool designed to create, manage, and process Machine Readable Glossaries (MRGs), as [specified by TEv2](/docs/spec-tools/mrgt). MRGTs offer features for selecting Terms that are Curated within the Scope it is run in, or from other Scopes."},"MRGT")," and the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/spec-tools/trrt",hovertext:"TermRef Rendering Tool: a TEv2 Tool that is designed to facilitate the visualization and rendering of TermRefs."},"TRRT"),", that can now assume that all ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/mrg",hovertext:"MRG: a Glossary for a particular (version of a) Terminology that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems."},"MRGs")," that they may need to consult in order to do their job, are readily available."),(0,n.kt)("h2",{id:"mrg-files-and-symbolic-links"},"MRG files and symbolic links"),(0,n.kt)("p",null,"This means concretely that within the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/glossarydir",hovertext:"Glossarydir: a directory within a Scopedir within which the different versions of its (Machine Readable and Human Readable) Glossaries are created and maintained."},"glossarydir")," of a ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/scope",hovertext:"Scope: the extent of the Terms, Definitions and other documentation that a Community (which we call the Owner of the Scope) needs to express, communicate and validate its Knowledge as relevant to achieving a specific subset of its Objectives."},"scope")," that has run the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/spec-tools/mrg-importer",hovertext:"MRG Importer: is a tool in the TEv2 toolbox that is run within a particular Scope for the purpose of obtaining MRGs from other Scopes, as specified in the Scope's SAF, and putting them in the Scope's Glossarydir."},"MRG importer"),", the following files are available for every ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/scopetag",hovertext:"Scopetag: a Tag that is used to Identify Scopes from within a specific Scope"},"scopetag")," ",(0,n.kt)("inlineCode",{parentName:"p"},"stag")," that exists in the ",(0,n.kt)("a",{parentName:"p",href:"/docs/spec-files/saf#scopes"},(0,n.kt)("inlineCode",{parentName:"a"},"scopes")," section")," of its ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/saf",hovertext:"SAF: a YAML file that contains essential data about a particular scope, such as the locations of the scope's curated texts, glossaries, and the specifications of the curated terminologies. The SAF is located in the so-called scopedir."},"SAF"),":"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"mrg.stag.<vsntag>.yaml")," contains the actual ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/mrg-entry",hovertext:"MRG Entry: A machine-readable (and interpretable) artifact that contains (pointers to) data and meta-data about a particular  Semantic Unit, such as the associated Term(s), its Definition, etc., to make it easy for IT-tools to create, e.g. documentation, Glossaries, Dictionaries, whitepapers, etc. that uses such Terms (Definitions, etc.)."},"MRG entries")," for the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/terminology",hovertext:"Terminology: a set of Terms that are used within a single Scope to refer to Concepts and other Semantic Units of a single Party (e.g. a Community), enabling Parties to reason and communicate ideas they have about one or more specific topics."},"terminology")," specified in the ",(0,n.kt)("a",{parentName:"li",href:"/docs/spec-files/saf#versions"},(0,n.kt)("inlineCode",{parentName:"a"},"versions"),"-section")," whose ",(0,n.kt)("inlineCode",{parentName:"li"},"vsntag")," field contains ",(0,n.kt)("inlineCode",{parentName:"li"},"<vsntag>"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"mrg.stag.<altvsntag>.yaml")," is a symbolic link to the ",(0,n.kt)("inlineCode",{parentName:"li"},"mrg.stag.<vsntag>.yaml")," file  where ",(0,n.kt)("inlineCode",{parentName:"li"},"<alvsntag>")," is one of the alternative ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/versiontag",hovertext:"Versiontag: a Tag that is used to Identify a specific version of a Terminology from within a specific Scope."},"versiontags")," by which the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/mrg",hovertext:"MRG: a Glossary for a particular (version of a) Terminology that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems."},"MRG")," can be referenced."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"mrg.stag.yaml")," is a symbolic link to the ",(0,n.kt)("inlineCode",{parentName:"li"},"mrg.stag.<vsntag>.yaml")," file  where ",(0,n.kt)("inlineCode",{parentName:"li"},"<vsntag>")," is the value of the ",(0,n.kt)("inlineCode",{parentName:"li"},"defaultvsn"),"-field in the ",(0,n.kt)("a",{parentName:"li",href:"/docs/spec-files/saf#scope-section"},(0,n.kt)("inlineCode",{parentName:"a"},"scope"),"-section")," of the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/saf",hovertext:"SAF: a YAML file that contains essential data about a particular scope, such as the locations of the scope's curated texts, glossaries, and the specifications of the curated terminologies. The SAF is located in the so-called scopedir."},"SAF")," of ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/scope",hovertext:"Scope: the extent of the Terms, Definitions and other documentation that a Community (which we call the Owner of the Scope) needs to express, communicate and validate its Knowledge as relevant to achieving a specific subset of its Objectives."},"scope")," ",(0,n.kt)("inlineCode",{parentName:"li"},"stag"),".")),(0,n.kt)("p",null,"There will shortly be an implementation of the tool:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"the repo for the code of the tool is ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/tno-terminology-design/mrg-import"},"here"),"."),(0,n.kt)("li",{parentName:"ul"},"the documentation is ","[",(0,n.kt)("mark",null,"tbd"),"]",".")),(0,n.kt)("h2",{id:"installing-the-tool"},"Installing the Tool"),(0,n.kt)("p",null,"The tool can be installed from the command line and made globally available by executing"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"npm install tno-terminology-design/mrg-import -g\n")),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Before running the tool from the command line, make sure you have met the necessary prerequisites depending on your operating environment."),(0,n.kt)(r.Z,{defaultValue:"cmd.exe",values:[{label:"CMD.exe (Windows)",value:"cmd.exe"},{label:"PowerShell(Windows)",value:"powershell"},{label:"Bash (Linux/Mac)",value:"bash"}],mdxType:"Tabs"},(0,n.kt)(s.Z,{value:"cmd.exe",mdxType:"TabItem"},(0,n.kt)("br",null),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Node.js and NPM"),": Ensure Node.js and NPM are installed."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Global Installation"),": If you have installed the package globally, confirm the global NPM modules path by running ",(0,n.kt)("inlineCode",{parentName:"li"},"npm config get prefix"),". The global modules are usually stored under ",(0,n.kt)("inlineCode",{parentName:"li"},"<prefix>/node_modules"),"."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Environment Variables"),": Add the path to global NPM binaries to your system's PATH environment variable. This should be ",(0,n.kt)("inlineCode",{parentName:"li"},"<prefix>")," on Windows. To add to PATH, you can edit your environment variables or run ",(0,n.kt)("inlineCode",{parentName:"li"},"set PATH=%PATH%;<prefix>")," in the CMD."))),(0,n.kt)(s.Z,{value:"powershell",mdxType:"TabItem"},(0,n.kt)("br",null),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Node.js and NPM"),": Ensure Node.js and NPM are installed."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Global Installation"),": Check the global NPM modules path as in CMD."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Environment Variables"),": Update the PATH environment variable as in CMD. You can also use ",(0,n.kt)("inlineCode",{parentName:"li"},'$env:Path += ";<prefix>"')," to update the PATH temporarily in the current PowerShell session."))),(0,n.kt)(s.Z,{value:"bash",mdxType:"TabItem"},(0,n.kt)("br",null),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Node.js and NPM"),": Ensure Node.js and NPM are installed."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Global Installation"),": If globally installed, run ",(0,n.kt)("inlineCode",{parentName:"li"},"npm config get prefix")," to get the global modules path, usually ",(0,n.kt)("inlineCode",{parentName:"li"},"<prefix>/lib/node_modules"),"."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Environment Variables"),": Add the ",(0,n.kt)("inlineCode",{parentName:"li"},"<prefix>/bin")," directory to your ",(0,n.kt)("inlineCode",{parentName:"li"},"PATH")," if it's not already. You can do this by adding ",(0,n.kt)("inlineCode",{parentName:"li"},"export PATH=$PATH:<prefix>/bin")," to your ",(0,n.kt)("inlineCode",{parentName:"li"},"~/.bashrc")," or ",(0,n.kt)("inlineCode",{parentName:"li"},"~/.zshrc")," file."))))),(0,n.kt)("h2",{id:"calling-the-tool"},"Calling the Tool"),(0,n.kt)("p",null,"The behavior of the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/spec-tools/mrg-importer",hovertext:"MRG Importer: is a tool in the TEv2 toolbox that is run within a particular Scope for the purpose of obtaining MRGs from other Scopes, as specified in the Scope's SAF, and putting them in the Scope's Glossarydir."},"MRG importer")," can be configured per call e.g. by a configuration file and/or command-line parameters. The command-line syntax is as follows:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"mrg-import [ <paramlist> ]\n")),(0,n.kt)("p",null,"where:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"<paramlist>")," (optional) is a list of key-value pairs")),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Legend"),(0,n.kt)("p",null,"The columns in the following table are defined as follows:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"strong"},"Key"))," is the text to be used as a key."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"strong"},"Value"))," represents the kind of value to be used."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"strong"},"Req'd"))," specifies whether (",(0,n.kt)("inlineCode",{parentName:"li"},"Y"),") or not (",(0,n.kt)("inlineCode",{parentName:"li"},"n"),") the field is required to be present when the tool is being called. If required, it MUST either be present in the configuration file, or as a command-line parameter."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"strong"},"Description"))," specifies the meaning of the ",(0,n.kt)("inlineCode",{parentName:"li"},"Value")," field, and other things you may need to know, e.g. why it is needed, a required syntax, etc."))),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Key"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Req'd"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"config")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"<path>")),(0,n.kt)("td",{parentName:"tr",align:"center"},"n"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Path (including the filename) of the tool's (YAML) configuration file. This file contains the default key-value pairs to be used. Allowed keys (and the associated values) are documented in this table. Command-line arguments override key-value pairs specified in the configuration file. This parameter MUST NOT appear in the configuration file itself.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"scopedir")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"<path>")),(0,n.kt)("td",{parentName:"tr",align:"center"},"Y"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Path of the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/scopedir",hovertext:"Scopedir: a directory in a computer file system that contains all files that are either being Curated within a particular Scope, or generated to serve some purpose within that Scope."},"scope directory")," from which the tool is called. It MUST contain the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/saf",hovertext:"SAF: a YAML file that contains essential data about a particular scope, such as the locations of the scope's curated texts, glossaries, and the specifications of the curated terminologies. The SAF is located in the so-called scopedir."},"SAF")," for that ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/scope",hovertext:"Scope: the extent of the Terms, Definitions and other documentation that a Community (which we call the Owner of the Scope) needs to express, communicate and validate its Knowledge as relevant to achieving a specific subset of its Objectives."},"scope"),", which we will refer to as the 'current scope' for the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/spec-tools/mrg-importer",hovertext:"MRG Importer: is a tool in the TEv2 toolbox that is run within a particular Scope for the purpose of obtaining MRGs from other Scopes, as specified in the Scope's SAF, and putting them in the Scope's Glossarydir."},"MRG importer"),".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"onNotExist")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"<action>")),(0,n.kt)("td",{parentName:"tr",align:"center"},"n"),(0,n.kt)("td",{parentName:"tr",align:"left"},"specifies the action to take in case an MRG file that was expected to exist, does not exist. Default is ",(0,n.kt)("inlineCode",{parentName:"td"},"'throw'"),".")))),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"<action>")," parameter can take the following values:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"th"},"<action>")),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"'throw'")),(0,n.kt)("td",{parentName:"tr",align:"left"},"an error is thrown (an exception is raised), and processing will stop.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"'warn'")),(0,n.kt)("td",{parentName:"tr",align:"left"},"a message is displayed (and logged) and processing continues.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"'log'")),(0,n.kt)("td",{parentName:"tr",align:"left"},"a message is written to a log(file) and processing continues.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"'ignore'")),(0,n.kt)("td",{parentName:"tr",align:"left"},"processing continues as if nothing happened.")))),(0,n.kt)("h2",{id:"processing-errors-and-warnings"},"Processing, Errors and Warnings"),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{href:"/tev2-specifications/docs/spec-tools/mrg-importer",hovertext:"MRG Importer: is a tool in the TEv2 toolbox that is run within a particular Scope for the purpose of obtaining MRGs from other Scopes, as specified in the Scope's SAF, and putting them in the Scope's Glossarydir."},"MRG importer")," starts by reading its command-line and configuration file. If the command-line has a key that is also found in the configuration file, the command-line key-value pair takes precedence. The resulting set of key-value pairs is tested for proper syntax and validity. Every improper syntax and every invalidity found will be logged. Improper syntax may be e.g. an invalid ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Glob_(programming)#Syntax"},"globpattern"),". Invalidities include non-existing directories or files, lack of write-permissions where needed, etc."),(0,n.kt)("p",null,"Then, the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/spec-tools/mrg-importer",hovertext:"MRG Importer: is a tool in the TEv2 toolbox that is run within a particular Scope for the purpose of obtaining MRGs from other Scopes, as specified in the Scope's SAF, and putting them in the Scope's Glossarydir."},"MRG importer")," reads the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/saf",hovertext:"SAF: a YAML file that contains essential data about a particular scope, such as the locations of the scope's curated texts, glossaries, and the specifications of the curated terminologies. The SAF is located in the so-called scopedir."},"SAF")," of the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/scope",hovertext:"Scope: the extent of the Terms, Definitions and other documentation that a Community (which we call the Owner of the Scope) needs to express, communicate and validate its Knowledge as relevant to achieving a specific subset of its Objectives."},"scope")," from which the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/spec-tools/mrg-importer",hovertext:"MRG Importer: is a tool in the TEv2 toolbox that is run within a particular Scope for the purpose of obtaining MRGs from other Scopes, as specified in the Scope's SAF, and putting them in the Scope's Glossarydir."},"MRG importer")," is called. We will use the following names for values that are in the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/saf",hovertext:"SAF: a YAML file that contains essential data about a particular scope, such as the locations of the scope's curated texts, glossaries, and the specifications of the curated terminologies. The SAF is located in the so-called scopedir."},"SAF"),":"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"{my-own-scopetag}")," = ",(0,n.kt)("inlineCode",{parentName:"li"},"scopetag"),"-field from the ",(0,n.kt)("inlineCode",{parentName:"li"},"scope"),"-section"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"{my-own-scopedir}")," = ",(0,n.kt)("inlineCode",{parentName:"li"},"scopedir"),"-field from the ",(0,n.kt)("inlineCode",{parentName:"li"},"scope"),"-section"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"{my-own-glossarydir}")," = ",(0,n.kt)("inlineCode",{parentName:"li"},"glossarydir"),"-field from the ",(0,n.kt)("inlineCode",{parentName:"li"},"scope"),"-section")),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{href:"/tev2-specifications/docs/spec-tools/mrg-importer",hovertext:"MRG Importer: is a tool in the TEv2 toolbox that is run within a particular Scope for the purpose of obtaining MRGs from other Scopes, as specified in the Scope's SAF, and putting them in the Scope's Glossarydir."},"MRG importer")," also reads the ",(0,n.kt)("a",{parentName:"p",href:"/docs/spec-files/saf#scopes"},(0,n.kt)("inlineCode",{parentName:"a"},"scopes")," section")," of the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/saf",hovertext:"SAF: a YAML file that contains essential data about a particular scope, such as the locations of the scope's curated texts, glossaries, and the specifications of the curated terminologies. The SAF is located in the so-called scopedir."},"SAF"),", which specifies the 'other' ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/scope",hovertext:"Scope: the extent of the Terms, Definitions and other documentation that a Community (which we call the Owner of the Scope) needs to express, communicate and validate its Knowledge as relevant to achieving a specific subset of its Objectives."},"scopes")," from which the actively maintained ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/mrg",hovertext:"MRG: a Glossary for a particular (version of a) Terminology that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems."},"MRGs")," have to be imported. This ",(0,n.kt)("a",{parentName:"p",href:"/docs/spec-files/saf#scopes"},(0,n.kt)("inlineCode",{parentName:"a"},"scopes")," section")," contains elements that consist of two parts, whose values we will refer to by the following names:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"{import-scopetag}")," = ",(0,n.kt)("inlineCode",{parentName:"li"},"scopetag"),"-field from the ",(0,n.kt)("inlineCode",{parentName:"li"},"scopes"),"-section of the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/saf",hovertext:"SAF: a YAML file that contains essential data about a particular scope, such as the locations of the scope's curated texts, glossaries, and the specifications of the curated terminologies. The SAF is located in the so-called scopedir."},"SAF")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"{import-scopedir}")," = ",(0,n.kt)("inlineCode",{parentName:"li"},"scopedir"),"-field from the ",(0,n.kt)("inlineCode",{parentName:"li"},"scopes"),"-section of the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/saf",hovertext:"SAF: a YAML file that contains essential data about a particular scope, such as the locations of the scope's curated texts, glossaries, and the specifications of the curated terminologies. The SAF is located in the so-called scopedir."},"SAF"))),(0,n.kt)("p",null,"For every ",(0,n.kt)("inlineCode",{parentName:"p"},"{import-scopedir}"),", the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/spec-tools/mrg-importer",hovertext:"MRG Importer: is a tool in the TEv2 toolbox that is run within a particular Scope for the purpose of obtaining MRGs from other Scopes, as specified in the Scope's SAF, and putting them in the Scope's Glossarydir."},"MRG importer")," will read its ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/saf",hovertext:"SAF: a YAML file that contains essential data about a particular scope, such as the locations of the scope's curated texts, glossaries, and the specifications of the curated terminologies. The SAF is located in the so-called scopedir."},"SAF")," to find out which ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/terminology",hovertext:"Terminology: a set of Terms that are used within a single Scope to refer to Concepts and other Semantic Units of a single Party (e.g. a Community), enabling Parties to reason and communicate ideas they have about one or more specific topics."},"terminologies")," are being actively maintained (we will use ",(0,n.kt)("inlineCode",{parentName:"p"},"{import-saf}")," to refer to the contents of this ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/saf",hovertext:"SAF: a YAML file that contains essential data about a particular scope, such as the locations of the scope's curated texts, glossaries, and the specifications of the curated terminologies. The SAF is located in the so-called scopedir."},"SAF"),")."),(0,n.kt)("admonition",{title:"Editor's note",type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Reading a SAF may require authentication, e.g. when the scopedir of the other scope is in a private or enterprise repo. How the MRG importer will be dealing with this remains to be specified.")),(0,n.kt)("p",null,"We will use:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"{other-scopetag}")," = the ",(0,n.kt)("inlineCode",{parentName:"li"},"scopetag"),"-field in the ",(0,n.kt)("inlineCode",{parentName:"li"},"scope")," section of ",(0,n.kt)("inlineCode",{parentName:"li"},"{import-saf}"),";"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"{other-glossarydir}")," = the ",(0,n.kt)("inlineCode",{parentName:"li"},"glossarydir"),"-field in the ",(0,n.kt)("inlineCode",{parentName:"li"},"scope")," section of ",(0,n.kt)("inlineCode",{parentName:"li"},"{import-saf}"),";")),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{parentName:"p",href:"/docs/spec-files/saf#versions"},(0,n.kt)("inlineCode",{parentName:"a"},"versions")," section")," in ",(0,n.kt)("inlineCode",{parentName:"p"},"{import-saf}")," specifies which ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/terminology",hovertext:"Terminology: a set of Terms that are used within a single Scope to refer to Concepts and other Semantic Units of a single Party (e.g. a Community), enabling Parties to reason and communicate ideas they have about one or more specific topics."},"terminologies")," are actively maintained within the other ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/scope",hovertext:"Scope: the extent of the Terms, Definitions and other documentation that a Community (which we call the Owner of the Scope) needs to express, communicate and validate its Knowledge as relevant to achieving a specific subset of its Objectives."},"scope"),", and hence have to be imported. Every such ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/terminology",hovertext:"Terminology: a set of Terms that are used within a single Scope to refer to Concepts and other Semantic Units of a single Party (e.g. a Community), enabling Parties to reason and communicate ideas they have about one or more specific topics."},"terminology")," is specified by an entry in this section, and must hence be processed to import the associated ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/mrg",hovertext:"MRG: a Glossary for a particular (version of a) Terminology that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems."},"MRGs"),". "),(0,n.kt)("p",null,"To specify one such process, we will use:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"{other-vsntag}")," = ",(0,n.kt)("inlineCode",{parentName:"li"},"vsntag"),"-field in the element of the ",(0,n.kt)("inlineCode",{parentName:"li"},"versions")," section of ",(0,n.kt)("inlineCode",{parentName:"li"},"{import-saf}")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"{other-altvsntags}")," = ",(0,n.kt)("inlineCode",{parentName:"li"},"altvsntags"),"-field in an element of the ",(0,n.kt)("inlineCode",{parentName:"li"},"versions")," section of ",(0,n.kt)("inlineCode",{parentName:"li"},"{import-saf}")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"{other-defaultvsn}")," = ",(0,n.kt)("inlineCode",{parentName:"li"},"defaultvsn"),"-field in the ",(0,n.kt)("inlineCode",{parentName:"li"},"scope")," section of ",(0,n.kt)("inlineCode",{parentName:"li"},"{import-saf}"))),(0,n.kt)("p",null,"To import the associated ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/mrg",hovertext:"MRG: a Glossary for a particular (version of a) Terminology that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems."},"MRGs"),", here is what we do:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"read the file ",(0,n.kt)("inlineCode",{parentName:"li"},"{import-scopedir}/{import-glossarydir}/mrg.{other-scopetag}.{other-vsntag}.yaml"),", which is the file that contains the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/mrg",hovertext:"MRG: a Glossary for a particular (version of a) Terminology that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems."},"MRG")," that needs to be imported. If that file doesn't exist, this results in the bahaviour as specified by the ",(0,n.kt)("inlineCode",{parentName:"li"},"<action>")," value of the ",(0,n.kt)("inlineCode",{parentName:"li"},"onNotExist")," parameter. Default is ",(0,n.kt)("inlineCode",{parentName:"li"},"throw"),".",(0,n.kt)("admonition",{parentName:"li",title:"Editor's note",type:"info"},(0,n.kt)("p",{parentName:"admonition"},"It may well be possible that contents of the mrg may need to be processed.\nThis is due to the fact that ",(0,n.kt)("inlineCode",{parentName:"p"},"scopetag"),"s are 'local' names for referring to scopes and every scope gets to decide on its own scoptag names. So the meaning of 'scopetags' cannot be transferred across scopes. We have to use universal/fixed identifiers, such as a ",(0,n.kt)("inlineCode",{parentName:"p"},"scopedir"),"-URL to identify scopes. Still, local names can be useful (and are necessary), so we'll have to figure out what the impact of this is."))),(0,n.kt)("li",{parentName:"ul"},"write the contents to ",(0,n.kt)("inlineCode",{parentName:"li"},"{my-scopedir}/{my-glossarydir}/mrg.{import-scopetag}.{other-vsntag}.yaml"),", overwriting a file that has the same name if that were to exist."),(0,n.kt)("li",{parentName:"ul"},"for every ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/versiontag",hovertext:"Versiontag: a Tag that is used to Identify a specific version of a Terminology from within a specific Scope."},"versiontag")," in ",(0,n.kt)("inlineCode",{parentName:"li"},"{other-altvsntags}")," (which we call ",(0,n.kt)("inlineCode",{parentName:"li"},"{other-altvsntag}"),"), a symbolic link ",(0,n.kt)("inlineCode",{parentName:"li"},"mrg.{import-scopetag}.{other-altvsntag}.yaml")," is created in the ",(0,n.kt)("inlineCode",{parentName:"li"},"{my-scopedir}/{my-glossarydir}/")," directory, that links to the ",(0,n.kt)("inlineCode",{parentName:"li"},"mrg.{import-scopetag}.{other-vsntag}.yaml")," file that was just created in that same directory.")),(0,n.kt)("p",null,"After all ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/mrg",hovertext:"MRG: a Glossary for a particular (version of a) Terminology that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems."},"MRGs")," are imported a symbolic link ",(0,n.kt)("inlineCode",{parentName:"p"},"{my-scopedir}/{my-glossarydir}/mrg.{import-scopetag}.yaml")," is created (or overwritten if it already exists), which points to the file ",(0,n.kt)("inlineCode",{parentName:"p"},"mrg.{import-scopetag}.{other-defaultvsn}.yaml"),". "),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("mdxAdmonitionTitle",{parentName:"admonition"},"NOTE the change of the ",(0,n.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"scopetag")," part in the filename!"),(0,n.kt)("p",{parentName:"admonition"},"The name of the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/mrg",hovertext:"MRG: a Glossary for a particular (version of a) Terminology that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems."},"MRG")," in the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/scope",hovertext:"Scope: the extent of the Terms, Definitions and other documentation that a Community (which we call the Owner of the Scope) needs to express, communicate and validate its Knowledge as relevant to achieving a specific subset of its Objectives."},"scope")," from which it is imported may differ from the name of the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/mrg",hovertext:"MRG: a Glossary for a particular (version of a) Terminology that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems."},"MRG")," that is imported. The reason for this is that the names (",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/scopetag",hovertext:"Scopetag: a Tag that is used to Identify Scopes from within a specific Scope"},"scopetags")," that are used in these ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/scope",hovertext:"Scope: the extent of the Terms, Definitions and other documentation that a Community (which we call the Owner of the Scope) needs to express, communicate and validate its Knowledge as relevant to achieving a specific subset of its Objectives."},"scopes")," to refer to the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/scope",hovertext:"Scope: the extent of the Terms, Definitions and other documentation that a Community (which we call the Owner of the Scope) needs to express, communicate and validate its Knowledge as relevant to achieving a specific subset of its Objectives."},"scope")," from where ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/mrg",hovertext:"MRG: a Glossary for a particular (version of a) Terminology that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems."},"MRGs")," are imported, may differ.")),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{href:"/tev2-specifications/docs/spec-tools/mrg-importer",hovertext:"MRG Importer: is a tool in the TEv2 toolbox that is run within a particular Scope for the purpose of obtaining MRGs from other Scopes, as specified in the Scope's SAF, and putting them in the Scope's Glossarydir."},"MRG importer")," logs every error- and/or warning condition that it comes across while processing its configuration file, commandline parameters, and input files, in a way that helps tool-operators and document ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/author",hovertext:"Author: a person that creates a text that is meant to be read and understood by others - usually, a particular audience."},"authors")," to identify and fix such conditions."),(0,n.kt)("h2",{id:"deploying-the-tool"},"Deploying the Tool"),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{href:"/tev2-specifications/docs/spec-tools/mrg-importer",hovertext:"MRG Importer: is a tool in the TEv2 toolbox that is run within a particular Scope for the purpose of obtaining MRGs from other Scopes, as specified in the Scope's SAF, and putting them in the Scope's Glossarydir."},"MRG importer")," comes with documentation that enables developers to ascertain its correct functioning (e.g. by using a test set of files, test scripts that exercise its parameters, etc.), and also enables them to deploy the tool in a git repo and author/modify CI-pipes to use that deployment."))}g.isMDXComponent=!0}}]);