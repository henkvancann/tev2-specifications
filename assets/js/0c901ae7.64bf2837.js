"use strict";(self.webpackChunktev2_specifications=self.webpackChunktev2_specifications||[]).push([[2882],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var a=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function n(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},s=Object.keys(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=a.createContext({}),l=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,c=e.parentName,p=n(e,["components","mdxType","originalType","parentName"]),u=l(r),f=o,m=u["".concat(c,".").concat(f)]||u[f]||h[f]||s;return r?a.createElement(m,i(i({ref:t},p),{},{components:r})):a.createElement(m,i({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,i=new Array(s);i[0]=u;var n={};for(var c in t)hasOwnProperty.call(t,c)&&(n[c]=t[c]);n.originalType=e,n.mdxType="string"==typeof e?e:o,i[1]=n;for(var l=2;l<s;l++)i[l]=r[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},4732:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>n,toc:()=>l});var a=r(3117),o=(r(7294),r(3905));const s={id:"moustache-profile",term:"moustache-profile",termType:"concept",glossaryTerm:"Moustache Profile",glossaryText:"a set of [moustache variables](@) that specify the expected results or executing a particular [interpreter](@). For example, the moustache profile for [TRRT](@) [interpreters](@) consists of the [variables](moustache-variable@) `{{showtext}}`, `{{termType}}`, `{{term}}`, `{{trait}}`, `{{scopetag}}`, and `{{vsntag}}`.",grouptags:null,formPhrases:["moustache-profile{ss}","profile{ss}"],status:"proposed",created:new Date("2023-12-18T00:00:00.000Z"),updated:new Date("2023-12-18T00:00:00.000Z"),contributors:"RieksJ",attribution:"[TNO Terminology Design](https://tno-terminology-design.github.io/tev2-specifications/docs)",originalLicense:"[CC BY-SA 4.0](http://creativecommons.org/licenses/by-sa/4.0/?ref=chooser-v1)"},i="Moustache Profile",n={unversionedId:"terms/moustache-profile",id:"terms/moustache-profile",title:"Moustache Profile",description:"A moustache variable is a set of moustache variables that specify the expected results or executing a particular interpreter.",source:"@site/docs/terms/moustache-profile.md",sourceDirName:"terms",slug:"/terms/moustache-profile",permalink:"/tev2-specifications/docs/terms/moustache-profile",draft:!1,editUrl:"https://github.com/tno-terminology-design/tev2-specifications/blob/master/docs/terms/moustache-profile.md",tags:[],version:"current",lastUpdatedBy:"Ca5e",lastUpdatedAt:1704219271,formattedLastUpdatedAt:"Jan 2, 2024",frontMatter:{id:"moustache-profile",term:"moustache-profile",termType:"concept",glossaryTerm:"Moustache Profile",glossaryText:"a set of [moustache variables](@) that specify the expected results or executing a particular [interpreter](@). For example, the moustache profile for [TRRT](@) [interpreters](@) consists of the [variables](moustache-variable@) `{{showtext}}`, `{{termType}}`, `{{term}}`, `{{trait}}`, `{{scopetag}}`, and `{{vsntag}}`.",grouptags:null,formPhrases:["moustache-profile{ss}","profile{ss}"],status:"proposed",created:"2023-12-18T00:00:00.000Z",updated:"2023-12-18T00:00:00.000Z",contributors:"RieksJ",attribution:"[TNO Terminology Design](https://tno-terminology-design.github.io/tev2-specifications/docs)",originalLicense:"[CC BY-SA 4.0](http://creativecommons.org/licenses/by-sa/4.0/?ref=chooser-v1)"}},c={},l=[],p={toc:l};function h(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"moustache-profile"},"Moustache Profile"),(0,o.kt)("p",null,"A ",(0,o.kt)("strong",{parentName:"p"},"moustache variable")," is a set of ",(0,o.kt)("a",{href:"/tev2-specifications/docs/terms/moustache-variable",title:"Moustache Variable: a placeholder in the form of a 'moustache' tag, e.g. ```, within some text. They are used, e.g., by the TRRT, where they get their values from an Interpreter, and where they are used in a selected Converter for the purpose of replacing TermRefs with Renderable Refs. See also https://mustache.github.io/mustache.5.html"},"moustache variables")," that specify the expected results or executing a particular ",(0,o.kt)("a",{href:"/tev2-specifications/docs/terms/interpreter",title:"Interpreter: a (PCRE) Regex that is used to locate a particular text construct (such as a TermRef or MRGRef) in a text, and that uses (PCRE) named groups to provide the values for the Moustache Variables in the Moustache Profile for which it is designed."},"interpreter"),". "),(0,o.kt)("p",null,"For example, the moustache profile for ",(0,o.kt)("a",{href:"/tev2-specifications/docs/spec-tools/trrt",title:"TermRef Rendering Tool: a TEv2 Tool that is designed to facilitate the visualization and rendering of TermRefs."},"TRRT")," ",(0,o.kt)("a",{href:"/tev2-specifications/docs/terms/interpreter",title:"Interpreter: a (PCRE) Regex that is used to locate a particular text construct (such as a TermRef or MRGRef) in a text, and that uses (PCRE) named groups to provide the values for the Moustache Variables in the Moustache Profile for which it is designed."},"interpreters")," consists of the ",(0,o.kt)("a",{href:"/tev2-specifications/docs/terms/moustache-variable",title:"Moustache Variable: a placeholder in the form of a 'moustache' tag, e.g. ```, within some text. They are used, e.g., by the TRRT, where they get their values from an Interpreter, and where they are used in a selected Converter for the purpose of replacing TermRefs with Renderable Refs. See also https://mustache.github.io/mustache.5.html"},"variables")," ",(0,o.kt)("inlineCode",{parentName:"p"},"{{showtext}}"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"{{termType}}"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"{{term}}"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"{{trait}}"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"{{scopetag}}"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"{{vsntag}}"),". This means that every ",(0,o.kt)("a",{href:"/tev2-specifications/docs/terms/interpreter",title:"Interpreter: a (PCRE) Regex that is used to locate a particular text construct (such as a TermRef or MRGRef) in a text, and that uses (PCRE) named groups to provide the values for the Moustache Variables in the Moustache Profile for which it is designed."},"interpreter")),(0,o.kt)("p",null,"Every ",(0,o.kt)("a",{href:"/tev2-specifications/docs/terms/tev2-tool",title:"TEv2 Tool: any software application or utility designed to support and streamline various tasks related to terminology management following the TEv2 specifications."},"TEv2 tool")," that converts files, such as the ",(0,o.kt)("a",{href:"/tev2-specifications/docs/spec-tools/trrt",title:"TermRef Rendering Tool: a TEv2 Tool that is designed to facilitate the visualization and rendering of TermRefs."},"TRRT")," or the ",(0,o.kt)("a",{href:"/tev2-specifications/docs/spec-tools/hrgt",title:"Human Readable Glossary Tool: a software tool designed to create, manage, and process Human Readable Glossaries (HRGs), as Specified By TEv2. HRGTs offer features for selecting Terms that are Curated within the Scope it is run in, or from other Scopes."},"HRGT"),", have defined a moustache profile in their documentation (in the section on ",(0,o.kt)("em",{parentName:"p"},"XXX Interperters")," where \\<XXX",">"," is the name of the tool)."))}h.isMDXComponent=!0}}]);