"use strict";(self.webpackChunktev2_specifications=self.webpackChunktev2_specifications||[]).push([[4572],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},l=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),l=p(r),m=o,d=l["".concat(c,".").concat(m)]||l[m]||f[m]||a;return r?n.createElement(d,s(s({ref:t},u),{},{components:r})):n.createElement(d,s({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=l;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}l.displayName="MDXCreateElement"},5515:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return f}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),s=["components"],i={id:"converter",term:"converter",termType:"concept",isa:null,glossaryTerm:"Converter",glossaryText:"a software component that takes the output of an [interpreter](@), i.e., the set of moustache variables it has produced, and processes these, possibly with other data from e.g. a [MRG](@), to generate a new, converted text in a different format. The converter uses the values assigned to the moustache variables to produce the transformed output.",hoverText:"Converter: {(noRef {glossaryText})}",synonymOf:"text-converter",grouptags:null,formPhrases:"converter{ss}",status:"proposed",created:new Date("2023-07-31T00:00:00.000Z"),updated:new Date("2023-07-31T00:00:00.000Z"),contributors:"RieksJ",attribution:"[TNO Terminology Design](https://tno-terminology-design.github.io/tev2-specifications/docs/tev2)",originalLicense:"[CC BY-SA 4.0](http://creativecommons.org/licenses/by-sa/4.0/?ref=chooser-v1)"},c="Converter",p={unversionedId:"tev2/terms/converter",id:"tev2/terms/converter",title:"Converter",description:"A converter is a software component that takes the output of an interpreter, i.e., the set of moustache variables it has produced, and processes these, possibly with other data from e.g. a MRG, to generate a new, converted text in a different format. The converter uses the values assigned to the moustache variables to produce the transformed output.",source:"@site/docs/tev2/terms/converter.md",sourceDirName:"tev2/terms",slug:"/tev2/terms/converter",permalink:"/tev2-specifications/docs/tev2/terms/converter",draft:!1,editUrl:"https://github.com/tno-terminology-design/tev2-specifications/blob/master/docs/tev2/terms/converter.md",tags:[],version:"current",lastUpdatedBy:"Rieks",lastUpdatedAt:1690896424,formattedLastUpdatedAt:"Aug 1, 2023",frontMatter:{id:"converter",term:"converter",termType:"concept",isa:null,glossaryTerm:"Converter",glossaryText:"a software component that takes the output of an [interpreter](@), i.e., the set of moustache variables it has produced, and processes these, possibly with other data from e.g. a [MRG](@), to generate a new, converted text in a different format. The converter uses the values assigned to the moustache variables to produce the transformed output.",hoverText:"Converter: {(noRef {glossaryText})}",synonymOf:"text-converter",grouptags:null,formPhrases:"converter{ss}",status:"proposed",created:"2023-07-31T00:00:00.000Z",updated:"2023-07-31T00:00:00.000Z",contributors:"RieksJ",attribution:"[TNO Terminology Design](https://tno-terminology-design.github.io/tev2-specifications/docs/tev2)",originalLicense:"[CC BY-SA 4.0](http://creativecommons.org/licenses/by-sa/4.0/?ref=chooser-v1)"},sidebar:"tev2SideBar",previous:{title:"Conceptualization",permalink:"/tev2-specifications/docs/tev2/terms/conceptualization"},next:{title:"Corpus",permalink:"/tev2-specifications/docs/tev2/terms/corpus"}},u={},f=[],l={toc:f};function m(e){var t=e.components,r=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"converter"},"Converter"),(0,a.kt)("p",null,"A ",(0,a.kt)("strong",{parentName:"p"},"converter")," is a software component that takes the output of an ",(0,a.kt)("a",{parentName:"p",href:"@"},"interpreter"),", i.e., the set of moustache variables it has produced, and processes these, possibly with other data from e.g. a ",(0,a.kt)("a",{parentName:"p",href:"@"},"MRG"),", to generate a new, converted text in a different format. The converter uses the values assigned to the moustache variables to produce the transformed output."),(0,a.kt)("p",null,"Converters are used, e.g., by the ",(0,a.kt)("a",{parentName:"p",href:"@"},"TRRT")," to create ",(0,a.kt)("a",{parentName:"p",href:"@"},"renderable refs")," from the ",(0,a.kt)("a",{parentName:"p",href:"@"},"moustache variables")," produced by ",(0,a.kt)("a",{parentName:"p",href:"@"},"TermRefs"),"."))}m.isMDXComponent=!0}}]);