"use strict";(self.webpackChunktev2_specifications=self.webpackChunktev2_specifications||[]).push([[4026],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>d});var r=o(7294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function a(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)o=i[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)o=i[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var p=r.createContext({}),l=function(e){var t=r.useContext(p),o=t;return e&&(o="function"==typeof e?e(t):a(a({},t),e)),o},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),h=l(o),d=n,u=h["".concat(p,".").concat(d)]||h[d]||m[d]||i;return o?r.createElement(u,a(a({ref:t},c),{},{components:o})):r.createElement(u,a({ref:t},c))}));function d(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=o.length,a=new Array(i);a[0]=h;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:n,a[1]=s;for(var l=2;l<i;l++)a[l]=o[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,o)}h.displayName="MDXCreateElement"},7862:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=o(3117),n=(o(7294),o(3905));const i={},a="Deployment",s={unversionedId:"spec-tools/tool-docs/mrg-import/deployment",id:"spec-tools/tool-docs/mrg-import/deployment",title:"Deployment",description:"MRG Import Example",source:"@site/docs/spec-tools/tool-docs/mrg-import/3-deployment.md",sourceDirName:"spec-tools/tool-docs/mrg-import",slug:"/spec-tools/tool-docs/mrg-import/deployment",permalink:"/tev2-specifications/docs/spec-tools/tool-docs/mrg-import/deployment",draft:!1,editUrl:"https://github.com/tno-terminology-design/tev2-specifications/blob/master/docs/spec-tools/tool-docs/mrg-import/3-deployment.md",tags:[],version:"current",lastUpdatedBy:"Ca5e",lastUpdatedAt:1700853879,formattedLastUpdatedAt:"Nov 24, 2023",sidebarPosition:3,frontMatter:{},sidebar:"tev2SideBar",previous:{title:"Usage",permalink:"/tev2-specifications/docs/spec-tools/tool-docs/mrg-import/usage"},next:{title:"Error Reporting",permalink:"/tev2-specifications/docs/spec-tools/tool-docs/mrg-import/error-reporting"}},p={},l=[{value:"MRG Import Example",id:"mrg-import-example",level:2},{value:"Executed Steps",id:"executed-steps",level:3}],c={toc:l};function m(e){let{components:t,...o}=e;return(0,n.kt)("wrapper",(0,r.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"deployment"},"Deployment"),(0,n.kt)("h2",{id:"mrg-import-example"},"MRG Import Example"),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{href:"/tev2-specifications/docs/spec-tools/mrg-import",hovertext:"MRG Importer: is a tool in the TEv2 toolbox that is run within a particular Scope for the purpose of obtaining MRGs from other Scopes, as specified in the Scope's SAF, and putting them in the Scope's Glossarydir."},"MRG Import Tool")," is designed to be usable in both a command-line interface and a CI/CD pipeline. Features like the ",(0,n.kt)("a",{parentName:"p",href:"usage#configuration-file"},"configuration file"),", make the execution of the tool easily maintainable, and ",(0,n.kt)("a",{parentName:"p",href:"error-reporting"},"error reporting")," is available to assist further in importing ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/mrg",hovertext:"MRG: a Glossary for a particular (version of a) Terminology that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems."},"MRG"),"s."),(0,n.kt)("p",null,"The GitHub repository of the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/spec-tools/mrg-import",hovertext:"MRG Importer: is a tool in the TEv2 toolbox that is run within a particular Scope for the purpose of obtaining MRGs from other Scopes, as specified in the Scope's SAF, and putting them in the Scope's Glossarydir."},"MRG Import Tool"),", located ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/tno-terminology-design/mrg-import"},"here"),", acts as an example of the tool's deployment. Within the ",(0,n.kt)("inlineCode",{parentName:"p"},".github/workflows/docs-deploy.yml")," GitHub Actions Workflow file are the following lines of code. This code is located and run in the deploy job before the website is built, modifying the input files in runtime before they are used to build the Docusaurus site."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yml"},"    # Terminology reference resolution\n    - name: Install MRG Import Tool\n      run: npm install -g @tno-terminology-design/mrg-import\n    - name: Run MRG Import Tool\n      run: mrg-import --scopedir __tests__/content --onNotExist warn\n")),(0,n.kt)("p",null,"This execution of the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/spec-tools/mrg-import",hovertext:"MRG Importer: is a tool in the TEv2 toolbox that is run within a particular Scope for the purpose of obtaining MRGs from other Scopes, as specified in the Scope's SAF, and putting them in the Scope's Glossarydir."},"MRG Import Tool")," is run from the root of the repository. The tool reads the ",(0,n.kt)("inlineCode",{parentName:"p"},"saf.yaml")," inside the supplied ",(0,n.kt)("inlineCode",{parentName:"p"},"scopedir")," (",(0,n.kt)("inlineCode",{parentName:"p"},"__tests__/content"),"). After which, the ",(0,n.kt)("inlineCode",{parentName:"p"},"scopes")," section of the local ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/saf",hovertext:"SAF: a YAML file that contains essential data about a particular scope, such as the locations of the scope's curated texts, glossaries, and the specifications of the curated terminologies. The SAF is located in the so-called scopedir."},"SAF")," is used to find the ",(0,n.kt)("inlineCode",{parentName:"p"},"scopedir")," of external scopes."),(0,n.kt)("h3",{id:"executed-steps"},"Executed Steps"),(0,n.kt)("p",null,"The following steps have been executed to reach a working implementation of the tool based on the ",(0,n.kt)("a",{parentName:"p",href:"#example-deployment"},"example deployment")," above. Multiple approaches are possible, like using ",(0,n.kt)("inlineCode",{parentName:"p"},"wget")," instead of ",(0,n.kt)("inlineCode",{parentName:"p"},"curl"),", or ",(0,n.kt)("inlineCode",{parentName:"p"},"yarn")," instead of ",(0,n.kt)("inlineCode",{parentName:"p"},"npm"),", but these have not been documented."),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Make sure the ",(0,n.kt)("a",{parentName:"strong",href:"installation#prerequisites"},"prerequisites")," are met.")," ",(0,n.kt)("br",null),"\nPlease refer to ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/nvm-sh/nvm"},"nvm")," installation and usage for the latest details about these commands."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'# Download and install nvm\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.4/install.sh | bash\n# Download and install node.js\nnvm install node # "node" is an alias for the latest version\nnvm use node # Use the installed node.js version\n'))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Install the latest version of the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/spec-tools/mrg-import",hovertext:"MRG Importer: is a tool in the TEv2 toolbox that is run within a particular Scope for the purpose of obtaining MRGs from other Scopes, as specified in the Scope's SAF, and putting them in the Scope's Glossarydir."},"MRG Import Tool")," and its dependencies globally.")," ",(0,n.kt)("br",null),"\nThis makes the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/spec-tools/mrg-import",hovertext:"MRG Importer: is a tool in the TEv2 toolbox that is run within a particular Scope for the purpose of obtaining MRGs from other Scopes, as specified in the Scope's SAF, and putting them in the Scope's Glossarydir."},"MRG Import Tool")," CLI command available all throughout your system and does not initialize the current working directory with ",(0,n.kt)("a",{parentName:"p",href:"https://www.npmjs.com"},"npm")," files."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"npm install -g @tno-terminology-design/mrg-import\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Configure the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/saf",hovertext:"SAF: a YAML file that contains essential data about a particular scope, such as the locations of the scope's curated texts, glossaries, and the specifications of the curated terminologies. The SAF is located in the so-called scopedir."},"SAF")," and make sure the necessary ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/mrg",hovertext:"MRG: a Glossary for a particular (version of a) Terminology that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems."},"MRG"),"'s are attainable.")," ",(0,n.kt)("br",null),"\nOur example deployment ",(0,n.kt)("inlineCode",{parentName:"p"},"saf.yaml")," can be viewed ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/tno-terminology-design/mrg-import/blob/main/__tests__/content/saf.yaml"},"here")," within the ",(0,n.kt)("inlineCode",{parentName:"p"},"__tests__/content")," directory.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Setup the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/spec-tools/mrg-import",hovertext:"MRG Importer: is a tool in the TEv2 toolbox that is run within a particular Scope for the purpose of obtaining MRGs from other Scopes, as specified in the Scope's SAF, and putting them in the Scope's Glossarydir."},"MRG Import Tool")," behavior per ",(0,n.kt)("a",{parentName:"strong",href:"usage#configuration-file"},"configuration file")," and/or command-line parameters.")," ",(0,n.kt)("br",null),"\nSee the ",(0,n.kt)("a",{parentName:"p",href:"#example-deployment"},"example deployment")," above for the yaml configuration file that is used. In this case we will be executing the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/spec-tools/mrg-import",hovertext:"MRG Importer: is a tool in the TEv2 toolbox that is run within a particular Scope for the purpose of obtaining MRGs from other Scopes, as specified in the Scope's SAF, and putting them in the Scope's Glossarydir."},"MRG Import Tool")," from the root of our repository and not the root of the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/scopedir",hovertext:"Scopedir: a directory in a computer file system that contains all files that are either being Curated within a particular Scope, or generated to serve some purpose within that Scope."},"scopedir"),". This means you may have to change working directory before executing step 5.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Execute the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/spec-tools/mrg-import",hovertext:"MRG Importer: is a tool in the TEv2 toolbox that is run within a particular Scope for the purpose of obtaining MRGs from other Scopes, as specified in the Scope's SAF, and putting them in the Scope's Glossarydir."},"MRG Import Tool"),".")," ",(0,n.kt)("br",null),"\nWe will use the following command to run the tool according to the ",(0,n.kt)("inlineCode",{parentName:"p"},"__tests__/content/config.yaml")," config file. The configured paths are relative to the working directory where the ",(0,n.kt)("a",{href:"/tev2-specifications/docs/spec-tools/mrg-import",hovertext:"MRG Importer: is a tool in the TEv2 toolbox that is run within a particular Scope for the purpose of obtaining MRGs from other Scopes, as specified in the Scope's SAF, and putting them in the Scope's Glossarydir."},"MRG Import Tool")," is executed."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"mrg-import --config __tests__/content/config.yaml --force\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Verify execution.")," ",(0,n.kt)("br",null),"\nThe ",(0,n.kt)("a",{href:"/tev2-specifications/docs/spec-tools/mrg-import",hovertext:"MRG Importer: is a tool in the TEv2 toolbox that is run within a particular Scope for the purpose of obtaining MRGs from other Scopes, as specified in the Scope's SAF, and putting them in the Scope's Glossarydir."},"MRG Import Tool")," CLI outputs information about its execution to the console according to the ",(0,n.kt)("a",{parentName:"p",href:"error-reporting"},"Error Reporting")," messages. The output should provide enough information to resolve issues surrounding the execution of the tool and the related terminology design. In this case, obtaining the second ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/mrg",hovertext:"MRG: a Glossary for a particular (version of a) Terminology that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems."},"MRG")," listed in the import ",(0,n.kt)("a",{href:"/tev2-specifications/docs/terms/saf",hovertext:"SAF: a YAML file that contains essential data about a particular scope, such as the locations of the scope's curated texts, glossaries, and the specifications of the curated terminologies. The SAF is located in the so-called scopedir."},"SAF")," resulted in an error that caused the tool to halt execution as specified by the ",(0,n.kt)("inlineCode",{parentName:"p"},"onNotExist")," option."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-n/a",metastring:'title="Sample console output"',title:'"Sample',console:!0,'output"':!0},"INFO    Found 1 import scope(s) in scopedir './__tests__/content'\nINFO      - Handling import scope 'essiflab'\nINFO      - Requesting 'https://raw.githubusercontent.com/tno-terminology-design/trrt/main/__tests__/content/saf.yaml'\nINFO    Found 2 maintained MRG file(s) in import scope 'essiflab'\nINFO      - Requesting 'https://raw.githubusercontent.com/tno-terminology-design/trrt/main/__tests__/content/terminology/mrg.default.main.yaml'\nINFO        - Storing MRG file 'mrg.essiflab.main.yaml' in '__tests__/content/terminology'\nINFO        - Creating symbolic link for 1 alternative version(s)\nINFO      - Requesting 'https://raw.githubusercontent.com/tno-terminology-design/trrt/main/__tests__/content/terminology/mrg.default.lain.yaml'\nERROR       - Request failed with status code 404, halting execution as requested by the 'onNotExist' throw option\n")))))}m.isMDXComponent=!0}}]);