"use strict";(self.webpackChunktev2_specifications=self.webpackChunktev2_specifications||[]).push([[7211],{3905:function(e,t,r){r.d(t,{Zo:function(){return h},kt:function(){return p}});var a=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=a.createContext({}),l=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},h=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,c=e.parentName,h=s(e,["components","mdxType","originalType","parentName"]),f=l(r),p=o,d=f["".concat(c,".").concat(p)]||f[p]||u[p]||n;return r?a.createElement(d,i(i({ref:t},h),{},{components:r})):a.createElement(d,i({ref:t},h))}));function p(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,i=new Array(n);i[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<n;l++)i[l]=r[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},9624:function(e,t,r){r.r(t),r.d(t,{assets:function(){return h},contentTitle:function(){return c},default:function(){return p},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u}});var a=r(7462),o=r(3366),n=(r(7294),r(3905)),i=["components"],s={id:"moustache-variable",term:"moustache-variable",termType:"concept",isa:null,glossaryTerm:"Moustache Variable",glossaryText:"a placeholder in the form of a 'moustache' tag, e.g. `{{variable_name}}``, within some text. They are used, e.g., by the [TRRT](@), where they get their values from an [interpreter](@), and where they are used in a selected [converter](@) for the purpose of replacing [TermRefs](@) with [renderable refs](@).",synonymOf:null,grouptags:null,formPhrases:"moustache-variable{ss}",status:"proposed",created:new Date("2023-07-31T00:00:00.000Z"),updated:new Date("2023-07-31T00:00:00.000Z"),contributors:"RieksJ",attribution:"[TNO Terminology Design](https://tno-terminology-design.github.io/tev2-specifications/docs)",originalLicense:"[CC BY-SA 4.0](http://creativecommons.org/licenses/by-sa/4.0/?ref=chooser-v1)"},c="Moustache Variable",l={unversionedId:"terms/moustache-variable",id:"terms/moustache-variable",title:"Moustache Variable",description:"A moustache variable is a placeholder in the form of a 'moustache' tag, e.g. {}`, within some text. They are used, e.g., by the TRRT, where they get their values from an interpreter, and where they are used in a selected converter for the purpose of replacing TermRefs with renderable refs.",source:"@site/docs/terms/moustache-variable.md",sourceDirName:"terms",slug:"/terms/moustache-variable",permalink:"/tev2-specifications/docs/terms/moustache-variable",draft:!1,editUrl:"https://github.com/tno-terminology-design/tev2-specifications/blob/master/docs/terms/moustache-variable.md",tags:[],version:"current",lastUpdatedBy:"Rieks",lastUpdatedAt:1696838049,formattedLastUpdatedAt:"Oct 9, 2023",frontMatter:{id:"moustache-variable",term:"moustache-variable",termType:"concept",isa:null,glossaryTerm:"Moustache Variable",glossaryText:"a placeholder in the form of a 'moustache' tag, e.g. `{{variable_name}}``, within some text. They are used, e.g., by the [TRRT](@), where they get their values from an [interpreter](@), and where they are used in a selected [converter](@) for the purpose of replacing [TermRefs](@) with [renderable refs](@).",synonymOf:null,grouptags:null,formPhrases:"moustache-variable{ss}",status:"proposed",created:"2023-07-31T00:00:00.000Z",updated:"2023-07-31T00:00:00.000Z",contributors:"RieksJ",attribution:"[TNO Terminology Design](https://tno-terminology-design.github.io/tev2-specifications/docs)",originalLicense:"[CC BY-SA 4.0](http://creativecommons.org/licenses/by-sa/4.0/?ref=chooser-v1)"},sidebar:"tev2SideBar",previous:{title:"Mental Model",permalink:"/tev2-specifications/docs/terms/mental-model"},next:{title:"Machine Readable Dictionary",permalink:"/tev2-specifications/docs/terms/mrd"}},h={},u=[{value:"Notes",id:"notes",level:2}],f={toc:u};function p(e){var t=e.components,r=(0,o.Z)(e,i);return(0,n.kt)("wrapper",(0,a.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"moustache-variable"},"Moustache Variable"),(0,n.kt)("p",null,"A ",(0,n.kt)("strong",{parentName:"p"},"moustache variable")," is a placeholder in the form of a 'moustache' tag, e.g. `{{variable_name}}``, within some text. They are used, e.g., by the ",(0,n.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/spec-tools/13-trrt",hovertext:"TermRef Rendering Tool: a TEv2 Tool that is designed to facilitate the visualization and rendering of TermRefs.",target:"_self"},"TRRT"),", where they get their values from an ",(0,n.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/interpreter",hovertext:"Interpreter: a software component that reads a (source) text of a specific format, such as a wiki-page or JSON file, and produces a set of Moustache Variables based on a predefined profile. These Variables represent extracted data or metadata from the source text.",target:"_self"},"interpreter"),", and where they are used in a selected ",(0,n.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/converter",hovertext:"Converter: a software component that takes the output of an Interpreter, i.e., the set of moustache variables it has produced, and processes these, possibly with other data from e.g. a MRG, to generate a new, converted text in a different format. The converter uses the values assigned to the moustache variables to produce the transformed output.",target:"_self"},"converter")," for the purpose of replacing ",(0,n.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/term-ref",hovertext:"TermRef: a word or phrase that is Marked Up (in A Specific Way) so that it refers to a particular Concept (or other Semantic Unit), enabling it to be rendered in a variety of ways for the purpose of helping Readers to (better) understand the intention of its Author.",target:"_self"},"TermRefs")," with ",(0,n.kt)("a",{href:"https://tno-terminology-design.github.io/tev2-specifications/docs/terms/renderable-ref",hovertext:"Renderable Ref: a text with which the TRRT replaces a TermRef, that can be processed by specific third party rendering tools, the result of which is a rendering of the original TermRef that has additional characteristics that help Readers to (better) understand the intention of its Author.",target:"_self"},"renderable refs"),"."),(0,n.kt)("h2",{id:"notes"},"Notes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Moustache variables serve as dynamic placeholders that allow flexible text transformation based on extracted information."),(0,n.kt)("li",{parentName:"ul"},"The use of moustache variables enables separation of concerns between data extraction and text conversion.")))}p.isMDXComponent=!0}}]);