"use strict";(self.webpackChunktev2_specifications=self.webpackChunktev2_specifications||[]).push([[9936],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>u});var o=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,a=function(e,t){if(null==e)return{};var r,o,a={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=o.createContext({}),l=function(e){var t=o.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),h=l(r),u=a,v=h["".concat(c,".").concat(u)]||h[u]||f[u]||n;return r?o.createElement(v,i(i({ref:t},p),{},{components:r})):o.createElement(v,i({ref:t},p))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,i=new Array(n);i[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<n;l++)i[l]=r[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}h.displayName="MDXCreateElement"},8236:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>f,frontMatter:()=>n,metadata:()=>s,toc:()=>l});var o=r(3117),a=(r(7294),r(3905));const n={id:"converter-profile",term:"converter-profile",termType:"concept",glossaryTerm:"Converter Profile",glossaryText:"the set of [moustache variables](@) that are (made) available to [converters](@) of a particular [TEv2 tool](@), enabling them to produce the texts by which the [TEv2 tool](@) will replace the text constructs that are located by the [interpreter](@).",grouptags:null,formPhrases:["converter-profile{ss}","profile{ss}"],status:"proposed",created:20231218,updated:20240108,contributors:"RieksJ",attribution:"[TNO Terminology Design](https://tno-terminology-design.github.io/tev2-specifications/docs)",originalLicense:"[CC BY-SA 4.0](http://creativecommons.org/licenses/by-sa/4.0/?ref=chooser-v1)"},i="Converter Profile",s={unversionedId:"terms/converter-profile",id:"terms/converter-profile",title:"Converter Profile",description:"A converter profile is the set of moustache variables that are (made) available to converters of a particular TEv2 tool, enabling them to produce the texts by which the TEv2 tool will replace the text constructs that are located by the interpreter.",source:"@site/docs/terms/converter-profile.md",sourceDirName:"terms",slug:"/terms/converter-profile",permalink:"/tev2-specifications/docs/terms/converter-profile",draft:!1,editUrl:"https://github.com/tno-terminology-design/tev2-specifications/blob/master/docs/terms/converter-profile.md",tags:[],version:"current",lastUpdatedBy:"Rieks",lastUpdatedAt:1704571457,formattedLastUpdatedAt:"Jan 6, 2024",frontMatter:{id:"converter-profile",term:"converter-profile",termType:"concept",glossaryTerm:"Converter Profile",glossaryText:"the set of [moustache variables](@) that are (made) available to [converters](@) of a particular [TEv2 tool](@), enabling them to produce the texts by which the [TEv2 tool](@) will replace the text constructs that are located by the [interpreter](@).",grouptags:null,formPhrases:["converter-profile{ss}","profile{ss}"],status:"proposed",created:20231218,updated:20240108,contributors:"RieksJ",attribution:"[TNO Terminology Design](https://tno-terminology-design.github.io/tev2-specifications/docs)",originalLicense:"[CC BY-SA 4.0](http://creativecommons.org/licenses/by-sa/4.0/?ref=chooser-v1)"}},c={},l=[],p={toc:l};function f(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,o.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"converter-profile"},"Converter Profile"),(0,a.kt)("p",null,"A ",(0,a.kt)("strong",{parentName:"p"},"converter profile")," is the set of ",(0,a.kt)("a",{href:"/tev2-specifications/docs/terms/moustache-variable",title:"Moustache Variable: a placeholder in the form of a 'moustache' tag, e.g.: ``, that are used by Converters to produce a text by which a text construct that is located by an Interpreter will be replaced. See also https://mustache.github.io/mustache.5.html"},"moustache variables")," that are (made) available to ",(0,a.kt)("a",{href:"/tev2-specifications/docs/terms/converter",title:"Converter: a specification, in the form of a Handlebars Expression, for constructing a text that a particular Text Conversion Tool uses to create its output."},"converters")," of a particular ",(0,a.kt)("a",{href:"/tev2-specifications/docs/terms/tev2-tool",title:"TEv2 Tool: any software application or utility designed to support and streamline various tasks related to terminology management following the TEv2 specifications."},"TEv2 tool"),", enabling them to produce the texts by which the ",(0,a.kt)("a",{href:"/tev2-specifications/docs/terms/tev2-tool",title:"TEv2 Tool: any software application or utility designed to support and streamline various tasks related to terminology management following the TEv2 specifications."},"TEv2 tool")," will replace the text constructs that are located by the ",(0,a.kt)("a",{href:"/tev2-specifications/docs/terms/interpreter",title:"Interpreter: a Regex that is used to locate a particular text construct (such as a TermRef or MRGRef) in a text, and that populates Named Capturing Groups as specified in the Interpreter Profile of the particular Text Conversion Tool for which it is designed."},"interpreter"),". "),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"/docs/category/toolbox-specs"},"specifications of the particular TEv2 tool"),' contain a section called "Converter Profile" that specifies this.'),(0,a.kt)("admonition",{title:"Editor's note",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"We could perhaps add references to appropriate sections of relevant tools, so that readers can see examples of this.")),(0,a.kt)("p",null,"The generic workings of ",(0,a.kt)("a",{href:"/tev2-specifications/docs/terms/converter-profile",title:"Converter Profile: the set of Moustache Variables that are (made) available to Converters of a particular TEv2 Tool, enabling them to produce the texts by which the TEv2 Tool will replace the text constructs that are located by the Interpreter."},"converter profiles")," is documented in the ",(0,a.kt)("a",{parentName:"p",href:"/docs/overview/tev2-text-conversion"},"TEv2 Text Conversion pattern"),"."))}f.isMDXComponent=!0}}]);