"use strict";(self.webpackChunktev2_specifications=self.webpackChunktev2_specifications||[]).push([[7053],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>d});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),l=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},m=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),g=l(r),d=n,f=g["".concat(c,".").concat(d)]||g[d]||p[d]||o;return r?a.createElement(f,s(s({ref:t},m),{},{components:r})):a.createElement(f,s({ref:t},m))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=g;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var l=2;l<o;l++)s[l]=r[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}g.displayName="MDXCreateElement"},9809:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var a=r(3117),n=(r(7294),r(3905));const o={id:"mrg",term:"mrg",termType:"concept",isa:"glossary",glossaryTerm:"Machine Readable Glossary (MRG)",glossaryText:"a [glossary](@) for a particular (version of a) [terminology](@) that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems.",hoverText:"MRG: {{noRefs glossaryText}}",synonymOf:null,grouptags:"glossaries, data-structures",formPhrases:"mrg{ss}, machine-readable-glossar{yies}, machine-readable-glossar{yies}-mrg{ss}",status:"proposed",created:new Date("2023-07-31T00:00:00.000Z"),updated:new Date("2023-07-31T00:00:00.000Z"),contributors:"RieksJ",attribution:"[TNO Terminology Design](https://tno-terminology-design.github.io/tev2-specifications/docs)",originalLicense:"[CC BY-SA 4.0](http://creativecommons.org/licenses/by-sa/4.0/?ref=chooser-v1)"},s="MRG - Machine Readable Glossary",i={unversionedId:"terms/mrg",id:"terms/mrg",title:"MRG - Machine Readable Glossary",description:"An MRG is a glossary for a particular (version of a) terminology that is formatted in YAML, according to the TEv2 MRG specifications, to enable automated processing and integration with software systems. Unlike dictionaries, the terms in an MRG are not ambiguous and have clear and well-defined meanings.",source:"@site/docs/terms/mrg.md",sourceDirName:"terms",slug:"/terms/mrg",permalink:"/tev2-specifications/docs/terms/mrg",draft:!1,editUrl:"https://github.com/tno-terminology-design/tev2-specifications/blob/master/docs/terms/mrg.md",tags:[],version:"current",lastUpdatedBy:"Ca5e",lastUpdatedAt:1694088130,formattedLastUpdatedAt:"Sep 7, 2023",frontMatter:{id:"mrg",term:"mrg",termType:"concept",isa:"glossary",glossaryTerm:"Machine Readable Glossary (MRG)",glossaryText:"a [glossary](@) for a particular (version of a) [terminology](@) that is formatted in YAML, according to the [TEv2 MRG specifications](/docs/spec-files/mrg), to enable automated processing and integration with software systems.",hoverText:"MRG: {{noRefs glossaryText}}",synonymOf:null,grouptags:"glossaries, data-structures",formPhrases:"mrg{ss}, machine-readable-glossar{yies}, machine-readable-glossar{yies}-mrg{ss}",status:"proposed",created:"2023-07-31T00:00:00.000Z",updated:"2023-07-31T00:00:00.000Z",contributors:"RieksJ",attribution:"[TNO Terminology Design](https://tno-terminology-design.github.io/tev2-specifications/docs)",originalLicense:"[CC BY-SA 4.0](http://creativecommons.org/licenses/by-sa/4.0/?ref=chooser-v1)"}},c={},l=[],m={toc:l};function p(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"mrg---machine-readable-glossary"},"MRG - Machine Readable Glossary"),(0,n.kt)("p",null,"An ",(0,n.kt)("strong",{parentName:"p"},"MRG")," is a ",(0,n.kt)("a",{parentName:"p",href:"@"},"glossary")," for a particular (version of a) ",(0,n.kt)("a",{parentName:"p",href:"@"},"terminology")," that is formatted in YAML, according to the ",(0,n.kt)("a",{parentName:"p",href:"/docs/spec-files/mrg"},"TEv2 MRG specifications"),", to enable automated processing and integration with software systems. Unlike ",(0,n.kt)("a",{parentName:"p",href:"@"},"dictionaries"),", the ",(0,n.kt)("a",{parentName:"p",href:"@"},"terms")," in an MRG are not ambiguous and have clear and well-defined ",(0,n.kt)("a",{parentName:"p",href:"definition@"},"meanings"),"."))}p.isMDXComponent=!0}}]);